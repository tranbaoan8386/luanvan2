{
  "version": 3,
  "sources": ["../../@mui/base/node_modules/react-is/cjs/react-is.development.js", "../../@mui/base/node_modules/react-is/index.js", "../../@mui/base/TextareaAutosize/TextareaAutosize.js", "../../@mui/base/node_modules/@mui/utils/esm/chainPropTypes/chainPropTypes.js", "../../@mui/base/node_modules/@mui/utils/esm/deepmerge/deepmerge.js", "../../@mui/base/node_modules/@mui/utils/esm/elementAcceptingRef/elementAcceptingRef.js", "../../@mui/base/node_modules/@mui/utils/esm/elementTypeAcceptingRef/elementTypeAcceptingRef.js", "../../@mui/base/node_modules/@mui/utils/esm/getDisplayName/getDisplayName.js", "../../@mui/base/node_modules/@mui/utils/esm/ponyfillGlobal/ponyfillGlobal.js", "../../@mui/base/node_modules/@mui/utils/esm/refType/refType.js", "../../@mui/base/node_modules/@mui/utils/esm/debounce/debounce.js", "../../@mui/base/node_modules/@mui/utils/esm/isMuiElement/isMuiElement.js", "../../@mui/base/node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js", "../../@mui/base/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js", "../../@mui/base/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js", "../../@mui/base/node_modules/@mui/utils/esm/useId/useId.js", "../../@mui/base/node_modules/@mui/utils/esm/useControlled/useControlled.js", "../../@mui/base/node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js", "../../@mui/base/node_modules/@mui/utils/esm/useForkRef/useForkRef.js", "../../@mui/base/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js", "../../@mui/base/node_modules/@mui/utils/esm/useOnMount/useOnMount.js", "../../@mui/base/node_modules/@mui/utils/esm/useTimeout/useTimeout.js", "../../@mui/base/node_modules/@mui/utils/esm/useIsFocusVisible/useIsFocusVisible.js", "../../@mui/base/node_modules/@mui/utils/esm/usePreviousProps/usePreviousProps.js", "../../@mui/base/node_modules/@mui/utils/esm/getValidReactChildren/getValidReactChildren.js", "../../@mui/base/node_modules/@mui/utils/esm/integerPropType/integerPropType.js", "../../@mui/base/node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js", "../../@mui/base/node_modules/@mui/utils/esm/mergeSlotProps/mergeSlotProps.js", "../../@mui/base/node_modules/@mui/utils/esm/getReactNodeRef/getReactNodeRef.js", "../../@mui/base/node_modules/@mui/utils/esm/getReactElementRef/getReactElementRef.js"],
  "sourcesContent": ["/**\r\n * @license React\r\n * react-is.development.js\r\n *\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\"use strict\";\r\n\"production\" !== process.env.NODE_ENV &&\r\n  (function () {\r\n    function typeOf(object) {\r\n      if (\"object\" === typeof object && null !== object) {\r\n        var $$typeof = object.$$typeof;\r\n        switch ($$typeof) {\r\n          case REACT_ELEMENT_TYPE:\r\n            switch (((object = object.type), object)) {\r\n              case REACT_FRAGMENT_TYPE:\r\n              case REACT_PROFILER_TYPE:\r\n              case REACT_STRICT_MODE_TYPE:\r\n              case REACT_SUSPENSE_TYPE:\r\n              case REACT_SUSPENSE_LIST_TYPE:\r\n              case REACT_VIEW_TRANSITION_TYPE:\r\n                return object;\r\n              default:\r\n                switch (((object = object && object.$$typeof), object)) {\r\n                  case REACT_CONTEXT_TYPE:\r\n                  case REACT_FORWARD_REF_TYPE:\r\n                  case REACT_LAZY_TYPE:\r\n                  case REACT_MEMO_TYPE:\r\n                    return object;\r\n                  case REACT_CONSUMER_TYPE:\r\n                    return object;\r\n                  default:\r\n                    return $$typeof;\r\n                }\r\n            }\r\n          case REACT_PORTAL_TYPE:\r\n            return $$typeof;\r\n        }\r\n      }\r\n    }\r\n    var REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\r\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\r\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\r\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\r\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\r\n    Symbol.for(\"react.provider\");\r\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\r\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\r\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\r\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\r\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\r\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\r\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\r\n      REACT_VIEW_TRANSITION_TYPE = Symbol.for(\"react.view_transition\"),\r\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\r\n    exports.ContextConsumer = REACT_CONSUMER_TYPE;\r\n    exports.ContextProvider = REACT_CONTEXT_TYPE;\r\n    exports.Element = REACT_ELEMENT_TYPE;\r\n    exports.ForwardRef = REACT_FORWARD_REF_TYPE;\r\n    exports.Fragment = REACT_FRAGMENT_TYPE;\r\n    exports.Lazy = REACT_LAZY_TYPE;\r\n    exports.Memo = REACT_MEMO_TYPE;\r\n    exports.Portal = REACT_PORTAL_TYPE;\r\n    exports.Profiler = REACT_PROFILER_TYPE;\r\n    exports.StrictMode = REACT_STRICT_MODE_TYPE;\r\n    exports.Suspense = REACT_SUSPENSE_TYPE;\r\n    exports.SuspenseList = REACT_SUSPENSE_LIST_TYPE;\r\n    exports.isContextConsumer = function (object) {\r\n      return typeOf(object) === REACT_CONSUMER_TYPE;\r\n    };\r\n    exports.isContextProvider = function (object) {\r\n      return typeOf(object) === REACT_CONTEXT_TYPE;\r\n    };\r\n    exports.isElement = function (object) {\r\n      return (\r\n        \"object\" === typeof object &&\r\n        null !== object &&\r\n        object.$$typeof === REACT_ELEMENT_TYPE\r\n      );\r\n    };\r\n    exports.isForwardRef = function (object) {\r\n      return typeOf(object) === REACT_FORWARD_REF_TYPE;\r\n    };\r\n    exports.isFragment = function (object) {\r\n      return typeOf(object) === REACT_FRAGMENT_TYPE;\r\n    };\r\n    exports.isLazy = function (object) {\r\n      return typeOf(object) === REACT_LAZY_TYPE;\r\n    };\r\n    exports.isMemo = function (object) {\r\n      return typeOf(object) === REACT_MEMO_TYPE;\r\n    };\r\n    exports.isPortal = function (object) {\r\n      return typeOf(object) === REACT_PORTAL_TYPE;\r\n    };\r\n    exports.isProfiler = function (object) {\r\n      return typeOf(object) === REACT_PROFILER_TYPE;\r\n    };\r\n    exports.isStrictMode = function (object) {\r\n      return typeOf(object) === REACT_STRICT_MODE_TYPE;\r\n    };\r\n    exports.isSuspense = function (object) {\r\n      return typeOf(object) === REACT_SUSPENSE_TYPE;\r\n    };\r\n    exports.isSuspenseList = function (object) {\r\n      return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;\r\n    };\r\n    exports.isValidElementType = function (type) {\r\n      return \"string\" === typeof type ||\r\n        \"function\" === typeof type ||\r\n        type === REACT_FRAGMENT_TYPE ||\r\n        type === REACT_PROFILER_TYPE ||\r\n        type === REACT_STRICT_MODE_TYPE ||\r\n        type === REACT_SUSPENSE_TYPE ||\r\n        type === REACT_SUSPENSE_LIST_TYPE ||\r\n        (\"object\" === typeof type &&\r\n          null !== type &&\r\n          (type.$$typeof === REACT_LAZY_TYPE ||\r\n            type.$$typeof === REACT_MEMO_TYPE ||\r\n            type.$$typeof === REACT_CONTEXT_TYPE ||\r\n            type.$$typeof === REACT_CONSUMER_TYPE ||\r\n            type.$$typeof === REACT_FORWARD_REF_TYPE ||\r\n            type.$$typeof === REACT_CLIENT_REFERENCE ||\r\n            void 0 !== type.getModuleId))\r\n        ? !0\r\n        : !1;\r\n    };\r\n    exports.typeOf = typeOf;\r\n  })();\r\n", "'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-is.production.js');\r\n} else {\r\n  module.exports = require('./cjs/react-is.development.js');\r\n}\r\n", "'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nfunction getStyleValue(value) {\r\n  return parseInt(value, 10) || 0;\r\n}\r\nconst styles = {\r\n  shadow: {\r\n    // Visibility needed to hide the extra text area on iPads\r\n    visibility: 'hidden',\r\n    // Remove from the content flow\r\n    position: 'absolute',\r\n    // Ignore the scrollbar width\r\n    overflow: 'hidden',\r\n    height: 0,\r\n    top: 0,\r\n    left: 0,\r\n    // Create a new layer, increase the isolation of the computed values\r\n    transform: 'translateZ(0)'\r\n  }\r\n};\r\nfunction isEmpty(obj) {\r\n  return obj === undefined || obj === null || Object.keys(obj).length === 0 || obj.outerHeightStyle === 0 && !obj.overflowing;\r\n}\r\n\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Textarea Autosize](https://mui.com/base-ui/react-textarea-autosize/)\r\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\r\n *\r\n * API:\r\n *\r\n * - [TextareaAutosize API](https://mui.com/base-ui/react-textarea-autosize/components-api/#textarea-autosize)\r\n */\r\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\r\n  const {\r\n    onChange,\r\n    maxRows,\r\n    minRows = 1,\r\n    style,\r\n    value,\r\n    ...other\r\n  } = props;\r\n  const {\r\n    current: isControlled\r\n  } = React.useRef(value != null);\r\n  const inputRef = React.useRef(null);\r\n  const handleRef = useForkRef(forwardedRef, inputRef);\r\n  const heightRef = React.useRef(null);\r\n  const shadowRef = React.useRef(null);\r\n  const calculateTextareaStyles = React.useCallback(() => {\r\n    const input = inputRef.current;\r\n    const containerWindow = ownerWindow(input);\r\n    const computedStyle = containerWindow.getComputedStyle(input);\r\n\r\n    // If input's width is shrunk and it's not visible, don't sync height.\r\n    if (computedStyle.width === '0px') {\r\n      return {\r\n        outerHeightStyle: 0,\r\n        overflowing: false\r\n      };\r\n    }\r\n    const inputShallow = shadowRef.current;\r\n    inputShallow.style.width = computedStyle.width;\r\n    inputShallow.value = input.value || props.placeholder || 'x';\r\n    if (inputShallow.value.slice(-1) === '\\n') {\r\n      // Certain fonts which overflow the line height will cause the textarea\r\n      // to report a different scrollHeight depending on whether the last line\r\n      // is empty. Make it non-empty to avoid this issue.\r\n      inputShallow.value += ' ';\r\n    }\r\n    const boxSizing = computedStyle.boxSizing;\r\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\r\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);\r\n\r\n    // The height of the inner content\r\n    const innerHeight = inputShallow.scrollHeight;\r\n\r\n    // Measure height of a textarea with a single row\r\n    inputShallow.value = 'x';\r\n    const singleRowHeight = inputShallow.scrollHeight;\r\n\r\n    // The height of the outer content\r\n    let outerHeight = innerHeight;\r\n    if (minRows) {\r\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\r\n    }\r\n    if (maxRows) {\r\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\r\n    }\r\n    outerHeight = Math.max(outerHeight, singleRowHeight);\r\n\r\n    // Take the box sizing into account for applying this value as a style.\r\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\r\n    const overflowing = Math.abs(outerHeight - innerHeight) <= 1;\r\n    return {\r\n      outerHeightStyle,\r\n      overflowing\r\n    };\r\n  }, [maxRows, minRows, props.placeholder]);\r\n  const syncHeight = React.useCallback(() => {\r\n    const textareaStyles = calculateTextareaStyles();\r\n    if (isEmpty(textareaStyles)) {\r\n      return;\r\n    }\r\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\r\n    const input = inputRef.current;\r\n    if (heightRef.current !== outerHeightStyle) {\r\n      heightRef.current = outerHeightStyle;\r\n      input.style.height = `${outerHeightStyle}px`;\r\n    }\r\n    input.style.overflow = textareaStyles.overflowing ? 'hidden' : '';\r\n  }, [calculateTextareaStyles]);\r\n  useEnhancedEffect(() => {\r\n    const handleResize = () => {\r\n      syncHeight();\r\n    };\r\n    // Workaround a \"ResizeObserver loop completed with undelivered notifications\" error\r\n    // in test.\r\n    // Note that we might need to use this logic in production per https://github.com/WICG/resize-observer/issues/38\r\n    // Also see https://github.com/mui/mui-x/issues/8733\r\n    let rAF;\r\n    const rAFHandleResize = () => {\r\n      cancelAnimationFrame(rAF);\r\n      rAF = requestAnimationFrame(() => {\r\n        handleResize();\r\n      });\r\n    };\r\n    const debounceHandleResize = debounce(handleResize);\r\n    const input = inputRef.current;\r\n    const containerWindow = ownerWindow(input);\r\n    containerWindow.addEventListener('resize', debounceHandleResize);\r\n    let resizeObserver;\r\n    if (typeof ResizeObserver !== 'undefined') {\r\n      resizeObserver = new ResizeObserver(process.env.NODE_ENV === 'test' ? rAFHandleResize : handleResize);\r\n      resizeObserver.observe(input);\r\n    }\r\n    return () => {\r\n      debounceHandleResize.clear();\r\n      cancelAnimationFrame(rAF);\r\n      containerWindow.removeEventListener('resize', debounceHandleResize);\r\n      if (resizeObserver) {\r\n        resizeObserver.disconnect();\r\n      }\r\n    };\r\n  }, [calculateTextareaStyles, syncHeight]);\r\n  useEnhancedEffect(() => {\r\n    syncHeight();\r\n  });\r\n  const handleChange = event => {\r\n    if (!isControlled) {\r\n      syncHeight();\r\n    }\r\n    if (onChange) {\r\n      onChange(event);\r\n    }\r\n  };\r\n  return /*#__PURE__*/_jsxs(React.Fragment, {\r\n    children: [/*#__PURE__*/_jsx(\"textarea\", {\r\n      value: value,\r\n      onChange: handleChange,\r\n      ref: handleRef\r\n      // Apply the rows prop to get a \"correct\" first SSR paint\r\n      ,\r\n      rows: minRows,\r\n      style: style,\r\n      ...other\r\n    }), /*#__PURE__*/_jsx(\"textarea\", {\r\n      \"aria-hidden\": true,\r\n      className: props.className,\r\n      readOnly: true,\r\n      ref: shadowRef,\r\n      tabIndex: -1,\r\n      style: {\r\n        ...styles.shadow,\r\n        ...style,\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n      }\r\n    })]\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Maximum number of rows to display.\r\n   */\r\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /**\r\n   * Minimum number of rows to display.\r\n   * @default 1\r\n   */\r\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /**\r\n   * @ignore\r\n   */\r\n  onChange: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  placeholder: PropTypes.string,\r\n  /**\r\n   * @ignore\r\n   */\r\n  style: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\r\n} : void 0;\r\nexport { TextareaAutosize };", "export default function chainPropTypes(propType1, propType2) {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return () => null;\r\n  }\r\n  return function validate(...args) {\r\n    return propType1(...args) || propType2(...args);\r\n  };\r\n}", "import * as React from 'react';\r\nimport { isValidElementType } from 'react-is';\r\n\r\n// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\r\nexport function isPlainObject(item) {\r\n  if (typeof item !== 'object' || item === null) {\r\n    return false;\r\n  }\r\n  const prototype = Object.getPrototypeOf(item);\r\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\r\n}\r\nfunction deepClone(source) {\r\n  if (/*#__PURE__*/React.isValidElement(source) || isValidElementType(source) || !isPlainObject(source)) {\r\n    return source;\r\n  }\r\n  const output = {};\r\n  Object.keys(source).forEach(key => {\r\n    output[key] = deepClone(source[key]);\r\n  });\r\n  return output;\r\n}\r\n\r\n/**\r\n * Merge objects deeply.\r\n * It will shallow copy React elements.\r\n *\r\n * If `options.clone` is set to `false` the source object will be merged directly into the target object.\r\n *\r\n * @example\r\n * ```ts\r\n * deepmerge({ a: { b: 1 }, d: 2 }, { a: { c: 2 }, d: 4 });\r\n * // => { a: { b: 1, c: 2 }, d: 4 }\r\n * ````\r\n *\r\n * @param target The target object.\r\n * @param source The source object.\r\n * @param options The merge options.\r\n * @param options.clone Set to `false` to merge the source object directly into the target object.\r\n * @returns The merged object.\r\n */\r\nexport default function deepmerge(target, source, options = {\r\n  clone: true\r\n}) {\r\n  const output = options.clone ? {\r\n    ...target\r\n  } : target;\r\n  if (isPlainObject(target) && isPlainObject(source)) {\r\n    Object.keys(source).forEach(key => {\r\n      if (/*#__PURE__*/React.isValidElement(source[key]) || isValidElementType(source[key])) {\r\n        output[key] = source[key];\r\n      } else if (isPlainObject(source[key]) &&\r\n      // Avoid prototype pollution\r\n      Object.prototype.hasOwnProperty.call(target, key) && isPlainObject(target[key])) {\r\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\r\n        output[key] = deepmerge(target[key], source[key], options);\r\n      } else if (options.clone) {\r\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\r\n      } else {\r\n        output[key] = source[key];\r\n      }\r\n    });\r\n  }\r\n  return output;\r\n}", "import PropTypes from 'prop-types';\r\nimport chainPropTypes from \"../chainPropTypes/index.js\";\r\nfunction isClassComponent(elementType) {\r\n  // elementType.prototype?.isReactComponent\r\n  const {\r\n    prototype = {}\r\n  } = elementType;\r\n  return Boolean(prototype.isReactComponent);\r\n}\r\nfunction acceptingRef(props, propName, componentName, location, propFullName) {\r\n  const element = props[propName];\r\n  const safePropName = propFullName || propName;\r\n  if (element == null ||\r\n  // When server-side rendering React doesn't warn either.\r\n  // This is not an accurate check for SSR.\r\n  // This is only in place for Emotion compat.\r\n  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.\r\n  typeof window === 'undefined') {\r\n    return null;\r\n  }\r\n  let warningHint;\r\n  const elementType = element.type;\r\n  /**\r\n   * Blacklisting instead of whitelisting\r\n   *\r\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\r\n   * trigger a warning in React.\r\n   * We can't whitelist because there is no safe way to detect React.forwardRef\r\n   * or class components. \"Safe\" means there's no public API.\r\n   *\r\n   */\r\n  if (typeof elementType === 'function' && !isClassComponent(elementType)) {\r\n    warningHint = 'Did you accidentally use a plain function component for an element instead?';\r\n  }\r\n  if (warningHint !== undefined) {\r\n    return new Error(`Invalid ${location} \\`${safePropName}\\` supplied to \\`${componentName}\\`. ` + `Expected an element that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');\r\n  }\r\n  return null;\r\n}\r\nconst elementAcceptingRef = chainPropTypes(PropTypes.element, acceptingRef);\r\nelementAcceptingRef.isRequired = chainPropTypes(PropTypes.element.isRequired, acceptingRef);\r\nexport default elementAcceptingRef;", "import PropTypes from 'prop-types';\r\nimport chainPropTypes from \"../chainPropTypes/index.js\";\r\nfunction isClassComponent(elementType) {\r\n  // elementType.prototype?.isReactComponent\r\n  const {\r\n    prototype = {}\r\n  } = elementType;\r\n  return Boolean(prototype.isReactComponent);\r\n}\r\nfunction elementTypeAcceptingRef(props, propName, componentName, location, propFullName) {\r\n  const propValue = props[propName];\r\n  const safePropName = propFullName || propName;\r\n  if (propValue == null ||\r\n  // When server-side rendering React doesn't warn either.\r\n  // This is not an accurate check for SSR.\r\n  // This is only in place for emotion compat.\r\n  // TODO: Revisit once https://github.com/facebook/react/issues/20047 is resolved.\r\n  typeof window === 'undefined') {\r\n    return null;\r\n  }\r\n  let warningHint;\r\n\r\n  /**\r\n   * Blacklisting instead of whitelisting\r\n   *\r\n   * Blacklisting will miss some components, such as React.Fragment. Those will at least\r\n   * trigger a warning in React.\r\n   * We can't whitelist because there is no safe way to detect React.forwardRef\r\n   * or class components. \"Safe\" means there's no public API.\r\n   *\r\n   */\r\n  if (typeof propValue === 'function' && !isClassComponent(propValue)) {\r\n    warningHint = 'Did you accidentally provide a plain function component instead?';\r\n  }\r\n  if (warningHint !== undefined) {\r\n    return new Error(`Invalid ${location} \\`${safePropName}\\` supplied to \\`${componentName}\\`. ` + `Expected an element type that can hold a ref. ${warningHint} ` + 'For more information see https://mui.com/r/caveat-with-refs-guide');\r\n  }\r\n  return null;\r\n}\r\nexport default chainPropTypes(PropTypes.elementType, elementTypeAcceptingRef);", "import { ForwardRef, Memo } from 'react-is';\r\nfunction getFunctionComponentName(Component, fallback = '') {\r\n  return Component.displayName || Component.name || fallback;\r\n}\r\nfunction getWrappedName(outerType, innerType, wrapperName) {\r\n  const functionName = getFunctionComponentName(innerType);\r\n  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);\r\n}\r\n\r\n/**\r\n * cherry-pick from\r\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\r\n * originally forked from recompose/getDisplayName\r\n */\r\nexport default function getDisplayName(Component) {\r\n  if (Component == null) {\r\n    return undefined;\r\n  }\r\n  if (typeof Component === 'string') {\r\n    return Component;\r\n  }\r\n  if (typeof Component === 'function') {\r\n    return getFunctionComponentName(Component, 'Component');\r\n  }\r\n\r\n  // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`\r\n  if (typeof Component === 'object') {\r\n    switch (Component.$$typeof) {\r\n      case ForwardRef:\r\n        return getWrappedName(Component, Component.render, 'ForwardRef');\r\n      case Memo:\r\n        return getWrappedName(Component, Component.type, 'memo');\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n  return undefined;\r\n}", "/* eslint-disable */\r\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\r\nexport default typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();", "import PropTypes from 'prop-types';\r\nconst refType = PropTypes.oneOfType([PropTypes.func, PropTypes.object]);\r\nexport default refType;", "// Corresponds to 10 frames at 60 Hz.\r\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\r\nexport default function debounce(func, wait = 166) {\r\n  let timeout;\r\n  function debounced(...args) {\r\n    const later = () => {\r\n      // @ts-ignore\r\n      func.apply(this, args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  }\r\n  debounced.clear = () => {\r\n    clearTimeout(timeout);\r\n  };\r\n  return debounced;\r\n}", "import * as React from 'react';\r\nexport default function isMuiElement(element, muiNames) {\r\n  return /*#__PURE__*/React.isValidElement(element) && muiNames.indexOf(\r\n  // For server components `muiName` is avaialble in element.type._payload.value.muiName\r\n  // relevant info - https://github.com/facebook/react/blob/2807d781a08db8e9873687fccc25c0f12b4fb3d4/packages/react/src/ReactLazy.js#L45\r\n  // eslint-disable-next-line no-underscore-dangle\r\n  element.type.muiName ?? element.type?._payload?.value?.muiName) !== -1;\r\n}", "export default function ownerDocument(node) {\r\n  return node && node.ownerDocument || document;\r\n}", "import ownerDocument from \"../ownerDocument/index.js\";\r\nexport default function ownerWindow(node) {\r\n  const doc = ownerDocument(node);\r\n  return doc.defaultView || window;\r\n}", "'use client';\r\n\r\nimport * as React from 'react';\r\n\r\n/**\r\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\r\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\r\n *\r\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\r\n * and confirm it doesn't apply to your use-case.\r\n */\r\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\r\nexport default useEnhancedEffect;", "'use client';\r\n\r\nimport * as React from 'react';\r\nlet globalId = 0;\r\n\r\n// TODO React 17: Remove `useGlobalId` once React 17 support is removed\r\nfunction useGlobalId(idOverride) {\r\n  const [defaultId, setDefaultId] = React.useState(idOverride);\r\n  const id = idOverride || defaultId;\r\n  React.useEffect(() => {\r\n    if (defaultId == null) {\r\n      // Fallback to this default id when possible.\r\n      // Use the incrementing value for client-side rendering only.\r\n      // We can't use it server-side.\r\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\r\n      globalId += 1;\r\n      setDefaultId(`mui-${globalId}`);\r\n    }\r\n  }, [defaultId]);\r\n  return id;\r\n}\r\n\r\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\r\nconst safeReact = {\r\n  ...React\r\n};\r\nconst maybeReactUseId = safeReact.useId;\r\n\r\n/**\r\n *\r\n * @example <div id={useId()} />\r\n * @param idOverride\r\n * @returns {string}\r\n */\r\nexport default function useId(idOverride) {\r\n  // React.useId() is only available from React 17.0.0.\r\n  if (maybeReactUseId !== undefined) {\r\n    const reactId = maybeReactUseId();\r\n    return idOverride ?? reactId;\r\n  }\r\n\r\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\r\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\r\n  return useGlobalId(idOverride);\r\n}", "'use client';\r\n\r\n// TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- process.env never changes, dependency arrays are intentionally ignored\r\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\r\nimport * as React from 'react';\r\nexport default function useControlled({\r\n  controlled,\r\n  default: defaultProp,\r\n  name,\r\n  state = 'value'\r\n}) {\r\n  // isControlled is ignored in the hook dependency lists as it should never change.\r\n  const {\r\n    current: isControlled\r\n  } = React.useRef(controlled !== undefined);\r\n  const [valueState, setValue] = React.useState(defaultProp);\r\n  const value = isControlled ? controlled : valueState;\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    React.useEffect(() => {\r\n      if (isControlled !== (controlled !== undefined)) {\r\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\r\n      }\r\n    }, [state, name, controlled]);\r\n    const {\r\n      current: defaultValue\r\n    } = React.useRef(defaultProp);\r\n    React.useEffect(() => {\r\n      // Object.is() is not equivalent to the === operator.\r\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is for more details.\r\n      if (!isControlled && !Object.is(defaultValue, defaultProp)) {\r\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\r\n      }\r\n    }, [JSON.stringify(defaultProp)]);\r\n  }\r\n  const setValueIfUncontrolled = React.useCallback(newValue => {\r\n    if (!isControlled) {\r\n      setValue(newValue);\r\n    }\r\n  }, []);\r\n  return [value, setValueIfUncontrolled];\r\n}", "'use client';\r\n\r\nimport * as React from 'react';\r\nimport useEnhancedEffect from \"../useEnhancedEffect/index.js\";\r\n\r\n/**\r\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\r\n * See RFC in https://github.com/reactjs/rfcs/pull/220\r\n */\r\n\r\nfunction useEventCallback(fn) {\r\n  const ref = React.useRef(fn);\r\n  useEnhancedEffect(() => {\r\n    ref.current = fn;\r\n  });\r\n  return React.useRef((...args) =>\r\n  // @ts-expect-error hide `this`\r\n  (0, ref.current)(...args)).current;\r\n}\r\nexport default useEventCallback;", "'use client';\r\n\r\nimport * as React from 'react';\r\n\r\n/**\r\n * Merges refs into a single memoized callback ref or `null`.\r\n *\r\n * ```tsx\r\n * const rootRef = React.useRef<Instance>(null);\r\n * const refFork = useForkRef(rootRef, props.ref);\r\n *\r\n * return (\r\n *   <Root {...props} ref={refFork} />\r\n * );\r\n * ```\r\n *\r\n * @param {Array<React.Ref<Instance> | undefined>} refs The ref array.\r\n * @returns {React.RefCallback<Instance> | null} The new ref callback.\r\n */\r\nexport default function useForkRef(...refs) {\r\n  const cleanupRef = React.useRef(undefined);\r\n  const refEffect = React.useCallback(instance => {\r\n    const cleanups = refs.map(ref => {\r\n      if (ref == null) {\r\n        return null;\r\n      }\r\n      if (typeof ref === 'function') {\r\n        const refCallback = ref;\r\n        const refCleanup = refCallback(instance);\r\n        return typeof refCleanup === 'function' ? refCleanup : () => {\r\n          refCallback(null);\r\n        };\r\n      }\r\n      ref.current = instance;\r\n      return () => {\r\n        ref.current = null;\r\n      };\r\n    });\r\n    return () => {\r\n      cleanups.forEach(refCleanup => refCleanup?.());\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, refs);\r\n  return React.useMemo(() => {\r\n    if (refs.every(ref => ref == null)) {\r\n      return null;\r\n    }\r\n    return value => {\r\n      if (cleanupRef.current) {\r\n        cleanupRef.current();\r\n        cleanupRef.current = undefined;\r\n      }\r\n      if (value != null) {\r\n        cleanupRef.current = refEffect(value);\r\n      }\r\n    };\r\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, refs);\r\n}", "'use client';\r\n\r\nimport * as React from 'react';\r\nconst UNINITIALIZED = {};\r\n\r\n/**\r\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\r\n * initialization argument, so the initialization function doesn't need to be an inline closure.\r\n *\r\n * @usage\r\n *   const ref = useLazyRef(sortColumns, columns)\r\n */\r\nexport default function useLazyRef(init, initArg) {\r\n  const ref = React.useRef(UNINITIALIZED);\r\n  if (ref.current === UNINITIALIZED) {\r\n    ref.current = init(initArg);\r\n  }\r\n  return ref;\r\n}", "'use client';\r\n\r\nimport * as React from 'react';\r\nconst EMPTY = [];\r\n\r\n/**\r\n * A React.useEffect equivalent that runs once, when the component is mounted.\r\n */\r\nexport default function useOnMount(fn) {\r\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\r\n  /* eslint-disable react-hooks/exhaustive-deps */\r\n  React.useEffect(fn, EMPTY);\r\n  /* eslint-enable react-hooks/exhaustive-deps */\r\n}", "'use client';\r\n\r\nimport useLazyRef from \"../useLazyRef/useLazyRef.js\";\r\nimport useOnMount from \"../useOnMount/useOnMount.js\";\r\nexport class Timeout {\r\n  static create() {\r\n    return new Timeout();\r\n  }\r\n  currentId = null;\r\n\r\n  /**\r\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\r\n   */\r\n  start(delay, fn) {\r\n    this.clear();\r\n    this.currentId = setTimeout(() => {\r\n      this.currentId = null;\r\n      fn();\r\n    }, delay);\r\n  }\r\n  clear = () => {\r\n    if (this.currentId !== null) {\r\n      clearTimeout(this.currentId);\r\n      this.currentId = null;\r\n    }\r\n  };\r\n  disposeEffect = () => {\r\n    return this.clear;\r\n  };\r\n}\r\nexport default function useTimeout() {\r\n  const timeout = useLazyRef(Timeout.create).current;\r\n  useOnMount(timeout.disposeEffect);\r\n  return timeout;\r\n}", "'use client';\r\n\r\n// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\r\nimport * as React from 'react';\r\nimport { Timeout } from \"../useTimeout/useTimeout.js\";\r\nlet hadKeyboardEvent = true;\r\nlet hadFocusVisibleRecently = false;\r\nconst hadFocusVisibleRecentlyTimeout = new Timeout();\r\nconst inputTypesWhitelist = {\r\n  text: true,\r\n  search: true,\r\n  url: true,\r\n  tel: true,\r\n  email: true,\r\n  password: true,\r\n  number: true,\r\n  date: true,\r\n  month: true,\r\n  week: true,\r\n  time: true,\r\n  datetime: true,\r\n  'datetime-local': true\r\n};\r\n\r\n/**\r\n * Computes whether the given element should automatically trigger the\r\n * `focus-visible` class being added, i.e. whether it should always match\r\n * `:focus-visible` when focused.\r\n * @param {Element} node\r\n * @returns {boolean}\r\n */\r\nfunction focusTriggersKeyboardModality(node) {\r\n  const {\r\n    type,\r\n    tagName\r\n  } = node;\r\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\r\n    return true;\r\n  }\r\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\r\n    return true;\r\n  }\r\n  if (node.isContentEditable) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\r\n * If the most recent user interaction was via the keyboard;\r\n * and the key press did not include a meta, alt/option, or control key;\r\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\r\n * @param {KeyboardEvent} event\r\n */\r\nfunction handleKeyDown(event) {\r\n  if (event.metaKey || event.altKey || event.ctrlKey) {\r\n    return;\r\n  }\r\n  hadKeyboardEvent = true;\r\n}\r\n\r\n/**\r\n * If at any point a user clicks with a pointing device, ensure that we change\r\n * the modality away from keyboard.\r\n * This avoids the situation where a user presses a key on an already focused\r\n * element, and then clicks on a different element, focusing it with a\r\n * pointing device, while we still think we're in keyboard modality.\r\n */\r\nfunction handlePointerDown() {\r\n  hadKeyboardEvent = false;\r\n}\r\nfunction handleVisibilityChange() {\r\n  if (this.visibilityState === 'hidden') {\r\n    // If the tab becomes active again, the browser will handle calling focus\r\n    // on the element (Safari actually calls it twice).\r\n    // If this tab change caused a blur on an element with focus-visible,\r\n    // re-apply the class when the user switches back to the tab.\r\n    if (hadFocusVisibleRecently) {\r\n      hadKeyboardEvent = true;\r\n    }\r\n  }\r\n}\r\nfunction prepare(doc) {\r\n  doc.addEventListener('keydown', handleKeyDown, true);\r\n  doc.addEventListener('mousedown', handlePointerDown, true);\r\n  doc.addEventListener('pointerdown', handlePointerDown, true);\r\n  doc.addEventListener('touchstart', handlePointerDown, true);\r\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\r\n}\r\nexport function teardown(doc) {\r\n  doc.removeEventListener('keydown', handleKeyDown, true);\r\n  doc.removeEventListener('mousedown', handlePointerDown, true);\r\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\r\n  doc.removeEventListener('touchstart', handlePointerDown, true);\r\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\r\n}\r\nfunction isFocusVisible(event) {\r\n  const {\r\n    target\r\n  } = event;\r\n  try {\r\n    return target.matches(':focus-visible');\r\n  } catch (error) {\r\n    // Browsers not implementing :focus-visible will throw a SyntaxError.\r\n    // We use our own heuristic for those browsers.\r\n    // Rethrow might be better if it's not the expected error but do we really\r\n    // want to crash if focus-visible malfunctioned?\r\n  }\r\n\r\n  // No need for validFocusTarget check. The user does that by attaching it to\r\n  // focusable events only.\r\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\r\n}\r\nexport default function useIsFocusVisible() {\r\n  const ref = React.useCallback(node => {\r\n    if (node != null) {\r\n      prepare(node.ownerDocument);\r\n    }\r\n  }, []);\r\n  const isFocusVisibleRef = React.useRef(false);\r\n\r\n  /**\r\n   * Should be called if a blur event is fired\r\n   */\r\n  function handleBlurVisible() {\r\n    // checking against potential state variable does not suffice if we focus and blur synchronously.\r\n    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.\r\n    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.\r\n    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751\r\n    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).\r\n    if (isFocusVisibleRef.current) {\r\n      // To detect a tab/window switch, we look for a blur event followed\r\n      // rapidly by a visibility change.\r\n      // If we don't see a visibility change within 100ms, it's probably a\r\n      // regular focus change.\r\n      hadFocusVisibleRecently = true;\r\n      hadFocusVisibleRecentlyTimeout.start(100, () => {\r\n        hadFocusVisibleRecently = false;\r\n      });\r\n      isFocusVisibleRef.current = false;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Should be called if a blur event is fired\r\n   */\r\n  function handleFocusVisible(event) {\r\n    if (isFocusVisible(event)) {\r\n      isFocusVisibleRef.current = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  return {\r\n    isFocusVisibleRef,\r\n    onFocus: handleFocusVisible,\r\n    onBlur: handleBlurVisible,\r\n    ref\r\n  };\r\n}", "'use client';\r\n\r\nimport * as React from 'react';\r\nconst usePreviousProps = value => {\r\n  const ref = React.useRef({});\r\n  React.useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n};\r\nexport default usePreviousProps;", "import * as React from 'react';\r\n\r\n/**\r\n * Gets only the valid children of a component,\r\n * and ignores any nullish or falsy child.\r\n *\r\n * @param children the children\r\n */\r\nexport default function getValidReactChildren(children) {\r\n  return React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child));\r\n}", "export function getTypeByValue(value) {\r\n  const valueType = typeof value;\r\n  switch (valueType) {\r\n    case 'number':\r\n      if (Number.isNaN(value)) {\r\n        return 'NaN';\r\n      }\r\n      if (!Number.isFinite(value)) {\r\n        return 'Infinity';\r\n      }\r\n      if (value !== Math.floor(value)) {\r\n        return 'float';\r\n      }\r\n      return 'number';\r\n    case 'object':\r\n      if (value === null) {\r\n        return 'null';\r\n      }\r\n      return value.constructor.name;\r\n    default:\r\n      return valueType;\r\n  }\r\n}\r\nfunction requiredInteger(props, propName, componentName, location) {\r\n  const propValue = props[propName];\r\n  if (propValue == null || !Number.isInteger(propValue)) {\r\n    const propType = getTypeByValue(propValue);\r\n    return new RangeError(`Invalid ${location} \\`${propName}\\` of type \\`${propType}\\` supplied to \\`${componentName}\\`, expected \\`integer\\`.`);\r\n  }\r\n  return null;\r\n}\r\nfunction validator(props, propName, ...other) {\r\n  const propValue = props[propName];\r\n  if (propValue === undefined) {\r\n    return null;\r\n  }\r\n  return requiredInteger(props, propName, ...other);\r\n}\r\nfunction validatorNoop() {\r\n  return null;\r\n}\r\nvalidator.isRequired = requiredInteger;\r\nvalidatorNoop.isRequired = validatorNoop;\r\nexport default process.env.NODE_ENV === 'production' ? validatorNoop : validator;", "const defaultGenerator = componentName => componentName;\r\nconst createClassNameGenerator = () => {\r\n  let generate = defaultGenerator;\r\n  return {\r\n    configure(generator) {\r\n      generate = generator;\r\n    },\r\n    generate(componentName) {\r\n      return generate(componentName);\r\n    },\r\n    reset() {\r\n      generate = defaultGenerator;\r\n    }\r\n  };\r\n};\r\nconst ClassNameGenerator = createClassNameGenerator();\r\nexport default ClassNameGenerator;", "import clsx from 'clsx';\r\nimport extractEventHandlers from \"../extractEventHandlers/index.js\";\r\nimport omitEventHandlers from \"../omitEventHandlers/index.js\";\r\n/**\r\n * Merges the slot component internal props (usually coming from a hook)\r\n * with the externally provided ones.\r\n *\r\n * The merge order is (the latter overrides the former):\r\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\r\n * 2. Additional props (specified internally on a Base UI component)\r\n * 3. External props specified on the owner component. These should only be used on a root slot.\r\n * 4. External props specified in the `slotProps.*` prop.\r\n * 5. The `className` prop - combined from all the above.\r\n * @param parameters\r\n * @returns\r\n */\r\nfunction mergeSlotProps(parameters) {\r\n  const {\r\n    getSlotProps,\r\n    additionalProps,\r\n    externalSlotProps,\r\n    externalForwardedProps,\r\n    className\r\n  } = parameters;\r\n  if (!getSlotProps) {\r\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\r\n    // so we can simply merge all the props without having to worry about extracting event handlers.\r\n    const joinedClasses = clsx(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\r\n    const mergedStyle = {\r\n      ...additionalProps?.style,\r\n      ...externalForwardedProps?.style,\r\n      ...externalSlotProps?.style\r\n    };\r\n    const props = {\r\n      ...additionalProps,\r\n      ...externalForwardedProps,\r\n      ...externalSlotProps\r\n    };\r\n    if (joinedClasses.length > 0) {\r\n      props.className = joinedClasses;\r\n    }\r\n    if (Object.keys(mergedStyle).length > 0) {\r\n      props.style = mergedStyle;\r\n    }\r\n    return {\r\n      props,\r\n      internalRef: undefined\r\n    };\r\n  }\r\n\r\n  // In this case, getSlotProps is responsible for calling the external event handlers.\r\n  // We don't need to include them in the merged props because of this.\r\n\r\n  const eventHandlers = extractEventHandlers({\r\n    ...externalForwardedProps,\r\n    ...externalSlotProps\r\n  });\r\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\r\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\r\n  const internalSlotProps = getSlotProps(eventHandlers);\r\n\r\n  // The order of classes is important here.\r\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\r\n  // to properly override style. It requires the most important classes to be last\r\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\r\n  const joinedClasses = clsx(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\r\n  const mergedStyle = {\r\n    ...internalSlotProps?.style,\r\n    ...additionalProps?.style,\r\n    ...externalForwardedProps?.style,\r\n    ...externalSlotProps?.style\r\n  };\r\n  const props = {\r\n    ...internalSlotProps,\r\n    ...additionalProps,\r\n    ...otherPropsWithoutEventHandlers,\r\n    ...componentsPropsWithoutEventHandlers\r\n  };\r\n  if (joinedClasses.length > 0) {\r\n    props.className = joinedClasses;\r\n  }\r\n  if (Object.keys(mergedStyle).length > 0) {\r\n    props.style = mergedStyle;\r\n  }\r\n  return {\r\n    props,\r\n    internalRef: internalSlotProps.ref\r\n  };\r\n}\r\nexport default mergeSlotProps;", "import * as React from 'react';\r\n\r\n/**\r\n * Returns the ref of a React node handling differences between React 19 and older versions.\r\n * It will return null if the node is not a valid React element.\r\n *\r\n * @param element React.ReactNode\r\n * @returns React.Ref<any> | null\r\n *\r\n * @deprecated Use getReactElementRef instead\r\n */\r\nexport default function getReactNodeRef(element) {\r\n  if (!element || ! /*#__PURE__*/React.isValidElement(element)) {\r\n    return null;\r\n  }\r\n\r\n  // 'ref' is passed as prop in React 19, whereas 'ref' is directly attached to children in older versions\r\n  return element.props.propertyIsEnumerable('ref') ? element.props.ref :\r\n  // @ts-expect-error element.ref is not included in the ReactElement type\r\n  // We cannot check for it, but isValidElement is true at this point\r\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/70189\r\n  element.ref;\r\n}", "import * as React from 'react';\r\n\r\n/**\r\n * Returns the ref of a React element handling differences between React 19 and older versions.\r\n * It will throw runtime error if the element is not a valid React element.\r\n *\r\n * @param element React.ReactElement\r\n * @returns React.Ref<any> | null\r\n */\r\nexport default function getReactElementRef(element) {\r\n  // 'ref' is passed as prop in React 19, whereas 'ref' is directly attached to children in older versions\r\n  if (parseInt(React.version, 10) >= 19) {\r\n    return element?.props?.ref || null;\r\n  }\r\n  // @ts-expect-error element.ref is not included in the ReactElement type\r\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/70189\r\n  return element?.ref || null;\r\n}"],
  "mappings": "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",
  "names": ["React", "import_prop_types", "PropTypes", "import_prop_types", "isClassComponent", "PropTypes", "import_react_is", "import_prop_types", "PropTypes", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "React", "TextareaAutosize", "_jsxs", "_jsx", "PropTypes"]
}
