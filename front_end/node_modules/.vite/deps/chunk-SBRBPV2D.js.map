{
  "version": 3,
  "sources": ["../../@popperjs/core/lib/dom-utils/getWindow.js", "../../@popperjs/core/lib/dom-utils/instanceOf.js", "../../@popperjs/core/lib/utils/math.js", "../../@popperjs/core/lib/utils/userAgent.js", "../../@popperjs/core/lib/dom-utils/isLayoutViewport.js", "../../@popperjs/core/lib/dom-utils/getBoundingClientRect.js", "../../@popperjs/core/lib/dom-utils/getWindowScroll.js", "../../@popperjs/core/lib/dom-utils/getHTMLElementScroll.js", "../../@popperjs/core/lib/dom-utils/getNodeScroll.js", "../../@popperjs/core/lib/dom-utils/getNodeName.js", "../../@popperjs/core/lib/dom-utils/getDocumentElement.js", "../../@popperjs/core/lib/dom-utils/getWindowScrollBarX.js", "../../@popperjs/core/lib/dom-utils/getComputedStyle.js", "../../@popperjs/core/lib/dom-utils/isScrollParent.js", "../../@popperjs/core/lib/dom-utils/getCompositeRect.js", "../../@popperjs/core/lib/dom-utils/getLayoutRect.js", "../../@popperjs/core/lib/dom-utils/getParentNode.js", "../../@popperjs/core/lib/dom-utils/getScrollParent.js", "../../@popperjs/core/lib/dom-utils/listScrollParents.js", "../../@popperjs/core/lib/dom-utils/isTableElement.js", "../../@popperjs/core/lib/dom-utils/getOffsetParent.js", "../../@popperjs/core/lib/enums.js", "../../@popperjs/core/lib/utils/orderModifiers.js", "../../@popperjs/core/lib/utils/debounce.js", "../../@popperjs/core/lib/utils/mergeByName.js", "../../@popperjs/core/lib/dom-utils/getViewportRect.js", "../../@popperjs/core/lib/dom-utils/getDocumentRect.js", "../../@popperjs/core/lib/dom-utils/contains.js", "../../@popperjs/core/lib/utils/rectToClientRect.js", "../../@popperjs/core/lib/dom-utils/getClippingRect.js", "../../@popperjs/core/lib/utils/getBasePlacement.js", "../../@popperjs/core/lib/utils/getVariation.js", "../../@popperjs/core/lib/utils/getMainAxisFromPlacement.js", "../../@popperjs/core/lib/utils/computeOffsets.js", "../../@popperjs/core/lib/utils/getFreshSideObject.js", "../../@popperjs/core/lib/utils/mergePaddingObject.js", "../../@popperjs/core/lib/utils/expandToHashMap.js", "../../@popperjs/core/lib/utils/detectOverflow.js", "../../@popperjs/core/lib/createPopper.js", "../../@popperjs/core/lib/modifiers/eventListeners.js", "../../@popperjs/core/lib/modifiers/popperOffsets.js", "../../@popperjs/core/lib/modifiers/computeStyles.js", "../../@popperjs/core/lib/modifiers/applyStyles.js", "../../@popperjs/core/lib/modifiers/offset.js", "../../@popperjs/core/lib/utils/getOppositePlacement.js", "../../@popperjs/core/lib/utils/getOppositeVariationPlacement.js", "../../@popperjs/core/lib/utils/computeAutoPlacement.js", "../../@popperjs/core/lib/modifiers/flip.js", "../../@popperjs/core/lib/utils/getAltAxis.js", "../../@popperjs/core/lib/utils/within.js", "../../@popperjs/core/lib/modifiers/preventOverflow.js", "../../@popperjs/core/lib/modifiers/arrow.js", "../../@popperjs/core/lib/modifiers/hide.js", "../../@popperjs/core/lib/popper-lite.js", "../../@popperjs/core/lib/popper.js", "../../@floating-ui/utils/dist/floating-ui.utils.mjs", "../../@floating-ui/core/dist/floating-ui.core.mjs", "../../@floating-ui/utils/dist/floating-ui.utils.dom.mjs", "../../@floating-ui/dom/dist/floating-ui.dom.mjs", "../../@floating-ui/react-dom/dist/floating-ui.react-dom.mjs"],
  "sourcesContent": ["export default function getWindow(node) {\r\n  if (node == null) {\r\n    return window;\r\n  }\r\n\r\n  if (node.toString() !== '[object Window]') {\r\n    var ownerDocument = node.ownerDocument;\r\n    return ownerDocument ? ownerDocument.defaultView || window : window;\r\n  }\r\n\r\n  return node;\r\n}", "import getWindow from \"./getWindow.js\";\r\n\r\nfunction isElement(node) {\r\n  var OwnElement = getWindow(node).Element;\r\n  return node instanceof OwnElement || node instanceof Element;\r\n}\r\n\r\nfunction isHTMLElement(node) {\r\n  var OwnElement = getWindow(node).HTMLElement;\r\n  return node instanceof OwnElement || node instanceof HTMLElement;\r\n}\r\n\r\nfunction isShadowRoot(node) {\r\n  // IE 11 has no ShadowRoot\r\n  if (typeof ShadowRoot === 'undefined') {\r\n    return false;\r\n  }\r\n\r\n  var OwnElement = getWindow(node).ShadowRoot;\r\n  return node instanceof OwnElement || node instanceof ShadowRoot;\r\n}\r\n\r\nexport { isElement, isHTMLElement, isShadowRoot };", "export var max = Math.max;\r\nexport var min = Math.min;\r\nexport var round = Math.round;", "export default function getUAString() {\r\n  var uaData = navigator.userAgentData;\r\n\r\n  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {\r\n    return uaData.brands.map(function (item) {\r\n      return item.brand + \"/\" + item.version;\r\n    }).join(' ');\r\n  }\r\n\r\n  return navigator.userAgent;\r\n}", "import getUAString from \"../utils/userAgent.js\";\r\nexport default function isLayoutViewport() {\r\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\r\n}", "import { isElement, isHTMLElement } from \"./instanceOf.js\";\r\nimport { round } from \"../utils/math.js\";\r\nimport getWindow from \"./getWindow.js\";\r\nimport isLayoutViewport from \"./isLayoutViewport.js\";\r\nexport default function getBoundingClientRect(element, includeScale, isFixedStrategy) {\r\n  if (includeScale === void 0) {\r\n    includeScale = false;\r\n  }\r\n\r\n  if (isFixedStrategy === void 0) {\r\n    isFixedStrategy = false;\r\n  }\r\n\r\n  var clientRect = element.getBoundingClientRect();\r\n  var scaleX = 1;\r\n  var scaleY = 1;\r\n\r\n  if (includeScale && isHTMLElement(element)) {\r\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\r\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\r\n  }\r\n\r\n  var _ref = isElement(element) ? getWindow(element) : window,\r\n      visualViewport = _ref.visualViewport;\r\n\r\n  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\r\n  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\r\n  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\r\n  var width = clientRect.width / scaleX;\r\n  var height = clientRect.height / scaleY;\r\n  return {\r\n    width: width,\r\n    height: height,\r\n    top: y,\r\n    right: x + width,\r\n    bottom: y + height,\r\n    left: x,\r\n    x: x,\r\n    y: y\r\n  };\r\n}", "import getWindow from \"./getWindow.js\";\r\nexport default function getWindowScroll(node) {\r\n  var win = getWindow(node);\r\n  var scrollLeft = win.pageXOffset;\r\n  var scrollTop = win.pageYOffset;\r\n  return {\r\n    scrollLeft: scrollLeft,\r\n    scrollTop: scrollTop\r\n  };\r\n}", "export default function getHTMLElementScroll(element) {\r\n  return {\r\n    scrollLeft: element.scrollLeft,\r\n    scrollTop: element.scrollTop\r\n  };\r\n}", "import getWindowScroll from \"./getWindowScroll.js\";\r\nimport getWindow from \"./getWindow.js\";\r\nimport { isHTMLElement } from \"./instanceOf.js\";\r\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\r\nexport default function getNodeScroll(node) {\r\n  if (node === getWindow(node) || !isHTMLElement(node)) {\r\n    return getWindowScroll(node);\r\n  } else {\r\n    return getHTMLElementScroll(node);\r\n  }\r\n}", "export default function getNodeName(element) {\r\n  return element ? (element.nodeName || '').toLowerCase() : null;\r\n}", "import { isElement } from \"./instanceOf.js\";\r\nexport default function getDocumentElement(element) {\r\n  // $FlowFixMe[incompatible-return]: assume body is always available\r\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\r\n  element.document) || window.document).documentElement;\r\n}", "import getBoundingClientRect from \"./getBoundingClientRect.js\";\r\nimport getDocumentElement from \"./getDocumentElement.js\";\r\nimport getWindowScroll from \"./getWindowScroll.js\";\r\nexport default function getWindowScrollBarX(element) {\r\n  // If <html> has a CSS width greater than the viewport, then this will be\r\n  // incorrect for RTL.\r\n  // Popper 1 is broken in this case and never had a bug report so let's assume\r\n  // it's not an issue. I don't think anyone ever specifies width on <html>\r\n  // anyway.\r\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\r\n  // this (e.g. Edge 2019, IE11, Safari)\r\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\r\n}", "import getWindow from \"./getWindow.js\";\r\nexport default function getComputedStyle(element) {\r\n  return getWindow(element).getComputedStyle(element);\r\n}", "import getComputedStyle from \"./getComputedStyle.js\";\r\nexport default function isScrollParent(element) {\r\n  // Firefox wants us to check `-x` and `-y` variations as well\r\n  var _getComputedStyle = getComputedStyle(element),\r\n      overflow = _getComputedStyle.overflow,\r\n      overflowX = _getComputedStyle.overflowX,\r\n      overflowY = _getComputedStyle.overflowY;\r\n\r\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\r\n}", "import getBoundingClientRect from \"./getBoundingClientRect.js\";\r\nimport getNodeScroll from \"./getNodeScroll.js\";\r\nimport getNodeName from \"./getNodeName.js\";\r\nimport { isHTMLElement } from \"./instanceOf.js\";\r\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\r\nimport getDocumentElement from \"./getDocumentElement.js\";\r\nimport isScrollParent from \"./isScrollParent.js\";\r\nimport { round } from \"../utils/math.js\";\r\n\r\nfunction isElementScaled(element) {\r\n  var rect = element.getBoundingClientRect();\r\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\r\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\r\n  return scaleX !== 1 || scaleY !== 1;\r\n} // Returns the composite rect of an element relative to its offsetParent.\r\n// Composite means it takes into account transforms as well as layout.\r\n\r\n\r\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\r\n  if (isFixed === void 0) {\r\n    isFixed = false;\r\n  }\r\n\r\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\r\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\r\n  var documentElement = getDocumentElement(offsetParent);\r\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\r\n  var scroll = {\r\n    scrollLeft: 0,\r\n    scrollTop: 0\r\n  };\r\n  var offsets = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\r\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\r\n    isScrollParent(documentElement)) {\r\n      scroll = getNodeScroll(offsetParent);\r\n    }\r\n\r\n    if (isHTMLElement(offsetParent)) {\r\n      offsets = getBoundingClientRect(offsetParent, true);\r\n      offsets.x += offsetParent.clientLeft;\r\n      offsets.y += offsetParent.clientTop;\r\n    } else if (documentElement) {\r\n      offsets.x = getWindowScrollBarX(documentElement);\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: rect.left + scroll.scrollLeft - offsets.x,\r\n    y: rect.top + scroll.scrollTop - offsets.y,\r\n    width: rect.width,\r\n    height: rect.height\r\n  };\r\n}", "import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\r\n// means it doesn't take into account transforms.\r\n\r\nexport default function getLayoutRect(element) {\r\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\r\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\r\n\r\n  var width = element.offsetWidth;\r\n  var height = element.offsetHeight;\r\n\r\n  if (Math.abs(clientRect.width - width) <= 1) {\r\n    width = clientRect.width;\r\n  }\r\n\r\n  if (Math.abs(clientRect.height - height) <= 1) {\r\n    height = clientRect.height;\r\n  }\r\n\r\n  return {\r\n    x: element.offsetLeft,\r\n    y: element.offsetTop,\r\n    width: width,\r\n    height: height\r\n  };\r\n}", "import getNodeName from \"./getNodeName.js\";\r\nimport getDocumentElement from \"./getDocumentElement.js\";\r\nimport { isShadowRoot } from \"./instanceOf.js\";\r\nexport default function getParentNode(element) {\r\n  if (getNodeName(element) === 'html') {\r\n    return element;\r\n  }\r\n\r\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\r\n    // $FlowFixMe[incompatible-return]\r\n    // $FlowFixMe[prop-missing]\r\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\r\n    element.parentNode || ( // DOM Element detected\r\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\r\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\r\n    getDocumentElement(element) // fallback\r\n\r\n  );\r\n}", "import getParentNode from \"./getParentNode.js\";\r\nimport isScrollParent from \"./isScrollParent.js\";\r\nimport getNodeName from \"./getNodeName.js\";\r\nimport { isHTMLElement } from \"./instanceOf.js\";\r\nexport default function getScrollParent(node) {\r\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\r\n    // $FlowFixMe[incompatible-return]: assume body is always available\r\n    return node.ownerDocument.body;\r\n  }\r\n\r\n  if (isHTMLElement(node) && isScrollParent(node)) {\r\n    return node;\r\n  }\r\n\r\n  return getScrollParent(getParentNode(node));\r\n}", "import getScrollParent from \"./getScrollParent.js\";\r\nimport getParentNode from \"./getParentNode.js\";\r\nimport getWindow from \"./getWindow.js\";\r\nimport isScrollParent from \"./isScrollParent.js\";\r\n/*\r\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\r\nuntil we get to the top window object. This list is what we attach scroll listeners\r\nto, because if any of these parent elements scroll, we'll need to re-calculate the\r\nreference element's position.\r\n*/\r\n\r\nexport default function listScrollParents(element, list) {\r\n  var _element$ownerDocumen;\r\n\r\n  if (list === void 0) {\r\n    list = [];\r\n  }\r\n\r\n  var scrollParent = getScrollParent(element);\r\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\r\n  var win = getWindow(scrollParent);\r\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\r\n  var updatedList = list.concat(target);\r\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\r\n  updatedList.concat(listScrollParents(getParentNode(target)));\r\n}", "import getNodeName from \"./getNodeName.js\";\r\nexport default function isTableElement(element) {\r\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\r\n}", "import getWindow from \"./getWindow.js\";\r\nimport getNodeName from \"./getNodeName.js\";\r\nimport getComputedStyle from \"./getComputedStyle.js\";\r\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\r\nimport isTableElement from \"./isTableElement.js\";\r\nimport getParentNode from \"./getParentNode.js\";\r\nimport getUAString from \"../utils/userAgent.js\";\r\n\r\nfunction getTrueOffsetParent(element) {\r\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\r\n  getComputedStyle(element).position === 'fixed') {\r\n    return null;\r\n  }\r\n\r\n  return element.offsetParent;\r\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\r\n// return the containing block\r\n\r\n\r\nfunction getContainingBlock(element) {\r\n  var isFirefox = /firefox/i.test(getUAString());\r\n  var isIE = /Trident/i.test(getUAString());\r\n\r\n  if (isIE && isHTMLElement(element)) {\r\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\r\n    var elementCss = getComputedStyle(element);\r\n\r\n    if (elementCss.position === 'fixed') {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  var currentNode = getParentNode(element);\r\n\r\n  if (isShadowRoot(currentNode)) {\r\n    currentNode = currentNode.host;\r\n  }\r\n\r\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\r\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\r\n    // create a containing block.\r\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\r\n\r\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\r\n      return currentNode;\r\n    } else {\r\n      currentNode = currentNode.parentNode;\r\n    }\r\n  }\r\n\r\n  return null;\r\n} // Gets the closest ancestor positioned element. Handles some edge cases,\r\n// such as table ancestors and cross browser bugs.\r\n\r\n\r\nexport default function getOffsetParent(element) {\r\n  var window = getWindow(element);\r\n  var offsetParent = getTrueOffsetParent(element);\r\n\r\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\r\n    offsetParent = getTrueOffsetParent(offsetParent);\r\n  }\r\n\r\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\r\n    return window;\r\n  }\r\n\r\n  return offsetParent || getContainingBlock(element) || window;\r\n}", "export var top = 'top';\r\nexport var bottom = 'bottom';\r\nexport var right = 'right';\r\nexport var left = 'left';\r\nexport var auto = 'auto';\r\nexport var basePlacements = [top, bottom, right, left];\r\nexport var start = 'start';\r\nexport var end = 'end';\r\nexport var clippingParents = 'clippingParents';\r\nexport var viewport = 'viewport';\r\nexport var popper = 'popper';\r\nexport var reference = 'reference';\r\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\r\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\r\n}, []);\r\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\r\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\r\n}, []); // modifiers that need to read the DOM\r\n\r\nexport var beforeRead = 'beforeRead';\r\nexport var read = 'read';\r\nexport var afterRead = 'afterRead'; // pure-logic modifiers\r\n\r\nexport var beforeMain = 'beforeMain';\r\nexport var main = 'main';\r\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\r\n\r\nexport var beforeWrite = 'beforeWrite';\r\nexport var write = 'write';\r\nexport var afterWrite = 'afterWrite';\r\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];", "import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\r\n\r\nfunction order(modifiers) {\r\n  var map = new Map();\r\n  var visited = new Set();\r\n  var result = [];\r\n  modifiers.forEach(function (modifier) {\r\n    map.set(modifier.name, modifier);\r\n  }); // On visiting object, check for its dependencies and visit them recursively\r\n\r\n  function sort(modifier) {\r\n    visited.add(modifier.name);\r\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\r\n    requires.forEach(function (dep) {\r\n      if (!visited.has(dep)) {\r\n        var depModifier = map.get(dep);\r\n\r\n        if (depModifier) {\r\n          sort(depModifier);\r\n        }\r\n      }\r\n    });\r\n    result.push(modifier);\r\n  }\r\n\r\n  modifiers.forEach(function (modifier) {\r\n    if (!visited.has(modifier.name)) {\r\n      // check for visited object\r\n      sort(modifier);\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default function orderModifiers(modifiers) {\r\n  // order based on dependencies\r\n  var orderedModifiers = order(modifiers); // order based on phase\r\n\r\n  return modifierPhases.reduce(function (acc, phase) {\r\n    return acc.concat(orderedModifiers.filter(function (modifier) {\r\n      return modifier.phase === phase;\r\n    }));\r\n  }, []);\r\n}", "export default function debounce(fn) {\r\n  var pending;\r\n  return function () {\r\n    if (!pending) {\r\n      pending = new Promise(function (resolve) {\r\n        Promise.resolve().then(function () {\r\n          pending = undefined;\r\n          resolve(fn());\r\n        });\r\n      });\r\n    }\r\n\r\n    return pending;\r\n  };\r\n}", "export default function mergeByName(modifiers) {\r\n  var merged = modifiers.reduce(function (merged, current) {\r\n    var existing = merged[current.name];\r\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\r\n      options: Object.assign({}, existing.options, current.options),\r\n      data: Object.assign({}, existing.data, current.data)\r\n    }) : current;\r\n    return merged;\r\n  }, {}); // IE11 does not support Object.values\r\n\r\n  return Object.keys(merged).map(function (key) {\r\n    return merged[key];\r\n  });\r\n}", "import getWindow from \"./getWindow.js\";\r\nimport getDocumentElement from \"./getDocumentElement.js\";\r\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\r\nimport isLayoutViewport from \"./isLayoutViewport.js\";\r\nexport default function getViewportRect(element, strategy) {\r\n  var win = getWindow(element);\r\n  var html = getDocumentElement(element);\r\n  var visualViewport = win.visualViewport;\r\n  var width = html.clientWidth;\r\n  var height = html.clientHeight;\r\n  var x = 0;\r\n  var y = 0;\r\n\r\n  if (visualViewport) {\r\n    width = visualViewport.width;\r\n    height = visualViewport.height;\r\n    var layoutViewport = isLayoutViewport();\r\n\r\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\r\n      x = visualViewport.offsetLeft;\r\n      y = visualViewport.offsetTop;\r\n    }\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height,\r\n    x: x + getWindowScrollBarX(element),\r\n    y: y\r\n  };\r\n}", "import getDocumentElement from \"./getDocumentElement.js\";\r\nimport getComputedStyle from \"./getComputedStyle.js\";\r\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\r\nimport getWindowScroll from \"./getWindowScroll.js\";\r\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\r\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\r\n\r\nexport default function getDocumentRect(element) {\r\n  var _element$ownerDocumen;\r\n\r\n  var html = getDocumentElement(element);\r\n  var winScroll = getWindowScroll(element);\r\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\r\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\r\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\r\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\r\n  var y = -winScroll.scrollTop;\r\n\r\n  if (getComputedStyle(body || html).direction === 'rtl') {\r\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height,\r\n    x: x,\r\n    y: y\r\n  };\r\n}", "import { isShadowRoot } from \"./instanceOf.js\";\r\nexport default function contains(parent, child) {\r\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\r\n\r\n  if (parent.contains(child)) {\r\n    return true;\r\n  } // then fallback to custom implementation with Shadow DOM support\r\n  else if (rootNode && isShadowRoot(rootNode)) {\r\n      var next = child;\r\n\r\n      do {\r\n        if (next && parent.isSameNode(next)) {\r\n          return true;\r\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\r\n\r\n\r\n        next = next.parentNode || next.host;\r\n      } while (next);\r\n    } // Give up, the result is false\r\n\r\n\r\n  return false;\r\n}", "export default function rectToClientRect(rect) {\r\n  return Object.assign({}, rect, {\r\n    left: rect.x,\r\n    top: rect.y,\r\n    right: rect.x + rect.width,\r\n    bottom: rect.y + rect.height\r\n  });\r\n}", "import { viewport } from \"../enums.js\";\r\nimport getViewportRect from \"./getViewportRect.js\";\r\nimport getDocumentRect from \"./getDocumentRect.js\";\r\nimport listScrollParents from \"./listScrollParents.js\";\r\nimport getOffsetParent from \"./getOffsetParent.js\";\r\nimport getDocumentElement from \"./getDocumentElement.js\";\r\nimport getComputedStyle from \"./getComputedStyle.js\";\r\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\r\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\r\nimport getParentNode from \"./getParentNode.js\";\r\nimport contains from \"./contains.js\";\r\nimport getNodeName from \"./getNodeName.js\";\r\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\r\nimport { max, min } from \"../utils/math.js\";\r\n\r\nfunction getInnerBoundingClientRect(element, strategy) {\r\n  var rect = getBoundingClientRect(element, false, strategy === 'fixed');\r\n  rect.top = rect.top + element.clientTop;\r\n  rect.left = rect.left + element.clientLeft;\r\n  rect.bottom = rect.top + element.clientHeight;\r\n  rect.right = rect.left + element.clientWidth;\r\n  rect.width = element.clientWidth;\r\n  rect.height = element.clientHeight;\r\n  rect.x = rect.left;\r\n  rect.y = rect.top;\r\n  return rect;\r\n}\r\n\r\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\r\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\r\n} // A \"clipping parent\" is an overflowable container with the characteristic of\r\n// clipping (or hiding) overflowing elements with a position different from\r\n// `initial`\r\n\r\n\r\nfunction getClippingParents(element) {\r\n  var clippingParents = listScrollParents(getParentNode(element));\r\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\r\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\r\n\r\n  if (!isElement(clipperElement)) {\r\n    return [];\r\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\r\n\r\n\r\n  return clippingParents.filter(function (clippingParent) {\r\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\r\n  });\r\n} // Gets the maximum area that the element is visible in due to any number of\r\n// clipping parents\r\n\r\n\r\nexport default function getClippingRect(element, boundary, rootBoundary, strategy) {\r\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\r\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\r\n  var firstClippingParent = clippingParents[0];\r\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\r\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\r\n    accRect.top = max(rect.top, accRect.top);\r\n    accRect.right = min(rect.right, accRect.right);\r\n    accRect.bottom = min(rect.bottom, accRect.bottom);\r\n    accRect.left = max(rect.left, accRect.left);\r\n    return accRect;\r\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\r\n  clippingRect.width = clippingRect.right - clippingRect.left;\r\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\r\n  clippingRect.x = clippingRect.left;\r\n  clippingRect.y = clippingRect.top;\r\n  return clippingRect;\r\n}", "import { auto } from \"../enums.js\";\r\nexport default function getBasePlacement(placement) {\r\n  return placement.split('-')[0];\r\n}", "export default function getVariation(placement) {\r\n  return placement.split('-')[1];\r\n}", "export default function getMainAxisFromPlacement(placement) {\r\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\r\n}", "import getBasePlacement from \"./getBasePlacement.js\";\r\nimport getVariation from \"./getVariation.js\";\r\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\r\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\r\nexport default function computeOffsets(_ref) {\r\n  var reference = _ref.reference,\r\n      element = _ref.element,\r\n      placement = _ref.placement;\r\n  var basePlacement = placement ? getBasePlacement(placement) : null;\r\n  var variation = placement ? getVariation(placement) : null;\r\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\r\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\r\n  var offsets;\r\n\r\n  switch (basePlacement) {\r\n    case top:\r\n      offsets = {\r\n        x: commonX,\r\n        y: reference.y - element.height\r\n      };\r\n      break;\r\n\r\n    case bottom:\r\n      offsets = {\r\n        x: commonX,\r\n        y: reference.y + reference.height\r\n      };\r\n      break;\r\n\r\n    case right:\r\n      offsets = {\r\n        x: reference.x + reference.width,\r\n        y: commonY\r\n      };\r\n      break;\r\n\r\n    case left:\r\n      offsets = {\r\n        x: reference.x - element.width,\r\n        y: commonY\r\n      };\r\n      break;\r\n\r\n    default:\r\n      offsets = {\r\n        x: reference.x,\r\n        y: reference.y\r\n      };\r\n  }\r\n\r\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\r\n\r\n  if (mainAxis != null) {\r\n    var len = mainAxis === 'y' ? 'height' : 'width';\r\n\r\n    switch (variation) {\r\n      case start:\r\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\r\n        break;\r\n\r\n      case end:\r\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\r\n        break;\r\n\r\n      default:\r\n    }\r\n  }\r\n\r\n  return offsets;\r\n}", "export default function getFreshSideObject() {\r\n  return {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0\r\n  };\r\n}", "import getFreshSideObject from \"./getFreshSideObject.js\";\r\nexport default function mergePaddingObject(paddingObject) {\r\n  return Object.assign({}, getFreshSideObject(), paddingObject);\r\n}", "export default function expandToHashMap(value, keys) {\r\n  return keys.reduce(function (hashMap, key) {\r\n    hashMap[key] = value;\r\n    return hashMap;\r\n  }, {});\r\n}", "import getClippingRect from \"../dom-utils/getClippingRect.js\";\r\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\r\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\r\nimport computeOffsets from \"./computeOffsets.js\";\r\nimport rectToClientRect from \"./rectToClientRect.js\";\r\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\r\nimport { isElement } from \"../dom-utils/instanceOf.js\";\r\nimport mergePaddingObject from \"./mergePaddingObject.js\";\r\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\r\n\r\nexport default function detectOverflow(state, options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var _options = options,\r\n      _options$placement = _options.placement,\r\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\r\n      _options$strategy = _options.strategy,\r\n      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\r\n      _options$boundary = _options.boundary,\r\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\r\n      _options$rootBoundary = _options.rootBoundary,\r\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\r\n      _options$elementConte = _options.elementContext,\r\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\r\n      _options$altBoundary = _options.altBoundary,\r\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\r\n      _options$padding = _options.padding,\r\n      padding = _options$padding === void 0 ? 0 : _options$padding;\r\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\r\n  var altContext = elementContext === popper ? reference : popper;\r\n  var popperRect = state.rects.popper;\r\n  var element = state.elements[altBoundary ? altContext : elementContext];\r\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\r\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\r\n  var popperOffsets = computeOffsets({\r\n    reference: referenceClientRect,\r\n    element: popperRect,\r\n    strategy: 'absolute',\r\n    placement: placement\r\n  });\r\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\r\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\r\n  // 0 or negative = within the clipping rect\r\n\r\n  var overflowOffsets = {\r\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\r\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\r\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\r\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\r\n  };\r\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\r\n\r\n  if (elementContext === popper && offsetData) {\r\n    var offset = offsetData[placement];\r\n    Object.keys(overflowOffsets).forEach(function (key) {\r\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\r\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\r\n      overflowOffsets[key] += offset[axis] * multiply;\r\n    });\r\n  }\r\n\r\n  return overflowOffsets;\r\n}", "import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\r\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\r\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\r\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\r\nimport orderModifiers from \"./utils/orderModifiers.js\";\r\nimport debounce from \"./utils/debounce.js\";\r\nimport mergeByName from \"./utils/mergeByName.js\";\r\nimport detectOverflow from \"./utils/detectOverflow.js\";\r\nimport { isElement } from \"./dom-utils/instanceOf.js\";\r\nvar DEFAULT_OPTIONS = {\r\n  placement: 'bottom',\r\n  modifiers: [],\r\n  strategy: 'absolute'\r\n};\r\n\r\nfunction areValidElements() {\r\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    args[_key] = arguments[_key];\r\n  }\r\n\r\n  return !args.some(function (element) {\r\n    return !(element && typeof element.getBoundingClientRect === 'function');\r\n  });\r\n}\r\n\r\nexport function popperGenerator(generatorOptions) {\r\n  if (generatorOptions === void 0) {\r\n    generatorOptions = {};\r\n  }\r\n\r\n  var _generatorOptions = generatorOptions,\r\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\r\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\r\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\r\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\r\n  return function createPopper(reference, popper, options) {\r\n    if (options === void 0) {\r\n      options = defaultOptions;\r\n    }\r\n\r\n    var state = {\r\n      placement: 'bottom',\r\n      orderedModifiers: [],\r\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\r\n      modifiersData: {},\r\n      elements: {\r\n        reference: reference,\r\n        popper: popper\r\n      },\r\n      attributes: {},\r\n      styles: {}\r\n    };\r\n    var effectCleanupFns = [];\r\n    var isDestroyed = false;\r\n    var instance = {\r\n      state: state,\r\n      setOptions: function setOptions(setOptionsAction) {\r\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\r\n        cleanupModifierEffects();\r\n        state.options = Object.assign({}, defaultOptions, state.options, options);\r\n        state.scrollParents = {\r\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\r\n          popper: listScrollParents(popper)\r\n        }; // Orders the modifiers based on their dependencies and `phase`\r\n        // properties\r\n\r\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\r\n\r\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\r\n          return m.enabled;\r\n        });\r\n        runModifierEffects();\r\n        return instance.update();\r\n      },\r\n      // Sync update – it will always be executed, even if not necessary. This\r\n      // is useful for low frequency updates where sync behavior simplifies the\r\n      // logic.\r\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\r\n      // prefer the async Popper#update method\r\n      forceUpdate: function forceUpdate() {\r\n        if (isDestroyed) {\r\n          return;\r\n        }\r\n\r\n        var _state$elements = state.elements,\r\n            reference = _state$elements.reference,\r\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\r\n        // anymore\r\n\r\n        if (!areValidElements(reference, popper)) {\r\n          return;\r\n        } // Store the reference and popper rects to be read by modifiers\r\n\r\n\r\n        state.rects = {\r\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\r\n          popper: getLayoutRect(popper)\r\n        }; // Modifiers have the ability to reset the current update cycle. The\r\n        // most common use case for this is the `flip` modifier changing the\r\n        // placement, which then needs to re-run all the modifiers, because the\r\n        // logic was previously ran for the previous placement and is therefore\r\n        // stale/incorrect\r\n\r\n        state.reset = false;\r\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\r\n        // is filled with the initial data specified by the modifier. This means\r\n        // it doesn't persist and is fresh on each update.\r\n        // To ensure persistent data, use `${name}#persistent`\r\n\r\n        state.orderedModifiers.forEach(function (modifier) {\r\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\r\n        });\r\n\r\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\r\n          if (state.reset === true) {\r\n            state.reset = false;\r\n            index = -1;\r\n            continue;\r\n          }\r\n\r\n          var _state$orderedModifie = state.orderedModifiers[index],\r\n              fn = _state$orderedModifie.fn,\r\n              _state$orderedModifie2 = _state$orderedModifie.options,\r\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\r\n              name = _state$orderedModifie.name;\r\n\r\n          if (typeof fn === 'function') {\r\n            state = fn({\r\n              state: state,\r\n              options: _options,\r\n              name: name,\r\n              instance: instance\r\n            }) || state;\r\n          }\r\n        }\r\n      },\r\n      // Async and optimistically optimized update – it will not be executed if\r\n      // not necessary (debounced to run at most once-per-tick)\r\n      update: debounce(function () {\r\n        return new Promise(function (resolve) {\r\n          instance.forceUpdate();\r\n          resolve(state);\r\n        });\r\n      }),\r\n      destroy: function destroy() {\r\n        cleanupModifierEffects();\r\n        isDestroyed = true;\r\n      }\r\n    };\r\n\r\n    if (!areValidElements(reference, popper)) {\r\n      return instance;\r\n    }\r\n\r\n    instance.setOptions(options).then(function (state) {\r\n      if (!isDestroyed && options.onFirstUpdate) {\r\n        options.onFirstUpdate(state);\r\n      }\r\n    }); // Modifiers have the ability to execute arbitrary code before the first\r\n    // update cycle runs. They will be executed in the same order as the update\r\n    // cycle. This is useful when a modifier adds some persistent data that\r\n    // other modifiers need to use, but the modifier is run after the dependent\r\n    // one.\r\n\r\n    function runModifierEffects() {\r\n      state.orderedModifiers.forEach(function (_ref) {\r\n        var name = _ref.name,\r\n            _ref$options = _ref.options,\r\n            options = _ref$options === void 0 ? {} : _ref$options,\r\n            effect = _ref.effect;\r\n\r\n        if (typeof effect === 'function') {\r\n          var cleanupFn = effect({\r\n            state: state,\r\n            name: name,\r\n            instance: instance,\r\n            options: options\r\n          });\r\n\r\n          var noopFn = function noopFn() {};\r\n\r\n          effectCleanupFns.push(cleanupFn || noopFn);\r\n        }\r\n      });\r\n    }\r\n\r\n    function cleanupModifierEffects() {\r\n      effectCleanupFns.forEach(function (fn) {\r\n        return fn();\r\n      });\r\n      effectCleanupFns = [];\r\n    }\r\n\r\n    return instance;\r\n  };\r\n}\r\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\r\n\r\nexport { detectOverflow };", "import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\r\n\r\nvar passive = {\r\n  passive: true\r\n};\r\n\r\nfunction effect(_ref) {\r\n  var state = _ref.state,\r\n      instance = _ref.instance,\r\n      options = _ref.options;\r\n  var _options$scroll = options.scroll,\r\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\r\n      _options$resize = options.resize,\r\n      resize = _options$resize === void 0 ? true : _options$resize;\r\n  var window = getWindow(state.elements.popper);\r\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\r\n\r\n  if (scroll) {\r\n    scrollParents.forEach(function (scrollParent) {\r\n      scrollParent.addEventListener('scroll', instance.update, passive);\r\n    });\r\n  }\r\n\r\n  if (resize) {\r\n    window.addEventListener('resize', instance.update, passive);\r\n  }\r\n\r\n  return function () {\r\n    if (scroll) {\r\n      scrollParents.forEach(function (scrollParent) {\r\n        scrollParent.removeEventListener('scroll', instance.update, passive);\r\n      });\r\n    }\r\n\r\n    if (resize) {\r\n      window.removeEventListener('resize', instance.update, passive);\r\n    }\r\n  };\r\n} // eslint-disable-next-line import/no-unused-modules\r\n\r\n\r\nexport default {\r\n  name: 'eventListeners',\r\n  enabled: true,\r\n  phase: 'write',\r\n  fn: function fn() {},\r\n  effect: effect,\r\n  data: {}\r\n};", "import computeOffsets from \"../utils/computeOffsets.js\";\r\n\r\nfunction popperOffsets(_ref) {\r\n  var state = _ref.state,\r\n      name = _ref.name;\r\n  // Offsets are the actual position the popper needs to have to be\r\n  // properly positioned near its reference element\r\n  // This is the most basic placement, and will be adjusted by\r\n  // the modifiers in the next step\r\n  state.modifiersData[name] = computeOffsets({\r\n    reference: state.rects.reference,\r\n    element: state.rects.popper,\r\n    strategy: 'absolute',\r\n    placement: state.placement\r\n  });\r\n} // eslint-disable-next-line import/no-unused-modules\r\n\r\n\r\nexport default {\r\n  name: 'popperOffsets',\r\n  enabled: true,\r\n  phase: 'read',\r\n  fn: popperOffsets,\r\n  data: {}\r\n};", "import { top, left, right, bottom, end } from \"../enums.js\";\r\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\r\nimport getWindow from \"../dom-utils/getWindow.js\";\r\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\r\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\r\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\r\nimport getVariation from \"../utils/getVariation.js\";\r\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\r\n\r\nvar unsetSides = {\r\n  top: 'auto',\r\n  right: 'auto',\r\n  bottom: 'auto',\r\n  left: 'auto'\r\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\r\n// Zooming can change the DPR, but it seems to report a value that will\r\n// cleanly divide the values into the appropriate subpixels.\r\n\r\nfunction roundOffsetsByDPR(_ref, win) {\r\n  var x = _ref.x,\r\n      y = _ref.y;\r\n  var dpr = win.devicePixelRatio || 1;\r\n  return {\r\n    x: round(x * dpr) / dpr || 0,\r\n    y: round(y * dpr) / dpr || 0\r\n  };\r\n}\r\n\r\nexport function mapToStyles(_ref2) {\r\n  var _Object$assign2;\r\n\r\n  var popper = _ref2.popper,\r\n      popperRect = _ref2.popperRect,\r\n      placement = _ref2.placement,\r\n      variation = _ref2.variation,\r\n      offsets = _ref2.offsets,\r\n      position = _ref2.position,\r\n      gpuAcceleration = _ref2.gpuAcceleration,\r\n      adaptive = _ref2.adaptive,\r\n      roundOffsets = _ref2.roundOffsets,\r\n      isFixed = _ref2.isFixed;\r\n  var _offsets$x = offsets.x,\r\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\r\n      _offsets$y = offsets.y,\r\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\r\n\r\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\r\n    x: x,\r\n    y: y\r\n  }) : {\r\n    x: x,\r\n    y: y\r\n  };\r\n\r\n  x = _ref3.x;\r\n  y = _ref3.y;\r\n  var hasX = offsets.hasOwnProperty('x');\r\n  var hasY = offsets.hasOwnProperty('y');\r\n  var sideX = left;\r\n  var sideY = top;\r\n  var win = window;\r\n\r\n  if (adaptive) {\r\n    var offsetParent = getOffsetParent(popper);\r\n    var heightProp = 'clientHeight';\r\n    var widthProp = 'clientWidth';\r\n\r\n    if (offsetParent === getWindow(popper)) {\r\n      offsetParent = getDocumentElement(popper);\r\n\r\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\r\n        heightProp = 'scrollHeight';\r\n        widthProp = 'scrollWidth';\r\n      }\r\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\r\n\r\n\r\n    offsetParent = offsetParent;\r\n\r\n    if (placement === top || (placement === left || placement === right) && variation === end) {\r\n      sideY = bottom;\r\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\r\n      offsetParent[heightProp];\r\n      y -= offsetY - popperRect.height;\r\n      y *= gpuAcceleration ? 1 : -1;\r\n    }\r\n\r\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\r\n      sideX = right;\r\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\r\n      offsetParent[widthProp];\r\n      x -= offsetX - popperRect.width;\r\n      x *= gpuAcceleration ? 1 : -1;\r\n    }\r\n  }\r\n\r\n  var commonStyles = Object.assign({\r\n    position: position\r\n  }, adaptive && unsetSides);\r\n\r\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\r\n    x: x,\r\n    y: y\r\n  }, getWindow(popper)) : {\r\n    x: x,\r\n    y: y\r\n  };\r\n\r\n  x = _ref4.x;\r\n  y = _ref4.y;\r\n\r\n  if (gpuAcceleration) {\r\n    var _Object$assign;\r\n\r\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\r\n  }\r\n\r\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\r\n}\r\n\r\nfunction computeStyles(_ref5) {\r\n  var state = _ref5.state,\r\n      options = _ref5.options;\r\n  var _options$gpuAccelerat = options.gpuAcceleration,\r\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\r\n      _options$adaptive = options.adaptive,\r\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\r\n      _options$roundOffsets = options.roundOffsets,\r\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\r\n  var commonStyles = {\r\n    placement: getBasePlacement(state.placement),\r\n    variation: getVariation(state.placement),\r\n    popper: state.elements.popper,\r\n    popperRect: state.rects.popper,\r\n    gpuAcceleration: gpuAcceleration,\r\n    isFixed: state.options.strategy === 'fixed'\r\n  };\r\n\r\n  if (state.modifiersData.popperOffsets != null) {\r\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\r\n      offsets: state.modifiersData.popperOffsets,\r\n      position: state.options.strategy,\r\n      adaptive: adaptive,\r\n      roundOffsets: roundOffsets\r\n    })));\r\n  }\r\n\r\n  if (state.modifiersData.arrow != null) {\r\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\r\n      offsets: state.modifiersData.arrow,\r\n      position: 'absolute',\r\n      adaptive: false,\r\n      roundOffsets: roundOffsets\r\n    })));\r\n  }\r\n\r\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\r\n    'data-popper-placement': state.placement\r\n  });\r\n} // eslint-disable-next-line import/no-unused-modules\r\n\r\n\r\nexport default {\r\n  name: 'computeStyles',\r\n  enabled: true,\r\n  phase: 'beforeWrite',\r\n  fn: computeStyles,\r\n  data: {}\r\n};", "import getNodeName from \"../dom-utils/getNodeName.js\";\r\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\r\n// and applies them to the HTMLElements such as popper and arrow\r\n\r\nfunction applyStyles(_ref) {\r\n  var state = _ref.state;\r\n  Object.keys(state.elements).forEach(function (name) {\r\n    var style = state.styles[name] || {};\r\n    var attributes = state.attributes[name] || {};\r\n    var element = state.elements[name]; // arrow is optional + virtual elements\r\n\r\n    if (!isHTMLElement(element) || !getNodeName(element)) {\r\n      return;\r\n    } // Flow doesn't support to extend this property, but it's the most\r\n    // effective way to apply styles to an HTMLElement\r\n    // $FlowFixMe[cannot-write]\r\n\r\n\r\n    Object.assign(element.style, style);\r\n    Object.keys(attributes).forEach(function (name) {\r\n      var value = attributes[name];\r\n\r\n      if (value === false) {\r\n        element.removeAttribute(name);\r\n      } else {\r\n        element.setAttribute(name, value === true ? '' : value);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction effect(_ref2) {\r\n  var state = _ref2.state;\r\n  var initialStyles = {\r\n    popper: {\r\n      position: state.options.strategy,\r\n      left: '0',\r\n      top: '0',\r\n      margin: '0'\r\n    },\r\n    arrow: {\r\n      position: 'absolute'\r\n    },\r\n    reference: {}\r\n  };\r\n  Object.assign(state.elements.popper.style, initialStyles.popper);\r\n  state.styles = initialStyles;\r\n\r\n  if (state.elements.arrow) {\r\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\r\n  }\r\n\r\n  return function () {\r\n    Object.keys(state.elements).forEach(function (name) {\r\n      var element = state.elements[name];\r\n      var attributes = state.attributes[name] || {};\r\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\r\n\r\n      var style = styleProperties.reduce(function (style, property) {\r\n        style[property] = '';\r\n        return style;\r\n      }, {}); // arrow is optional + virtual elements\r\n\r\n      if (!isHTMLElement(element) || !getNodeName(element)) {\r\n        return;\r\n      }\r\n\r\n      Object.assign(element.style, style);\r\n      Object.keys(attributes).forEach(function (attribute) {\r\n        element.removeAttribute(attribute);\r\n      });\r\n    });\r\n  };\r\n} // eslint-disable-next-line import/no-unused-modules\r\n\r\n\r\nexport default {\r\n  name: 'applyStyles',\r\n  enabled: true,\r\n  phase: 'write',\r\n  fn: applyStyles,\r\n  effect: effect,\r\n  requires: ['computeStyles']\r\n};", "import getBasePlacement from \"../utils/getBasePlacement.js\";\r\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\r\n\r\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\r\n  var basePlacement = getBasePlacement(placement);\r\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\r\n\r\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\r\n    placement: placement\r\n  })) : offset,\r\n      skidding = _ref[0],\r\n      distance = _ref[1];\r\n\r\n  skidding = skidding || 0;\r\n  distance = (distance || 0) * invertDistance;\r\n  return [left, right].indexOf(basePlacement) >= 0 ? {\r\n    x: distance,\r\n    y: skidding\r\n  } : {\r\n    x: skidding,\r\n    y: distance\r\n  };\r\n}\r\n\r\nfunction offset(_ref2) {\r\n  var state = _ref2.state,\r\n      options = _ref2.options,\r\n      name = _ref2.name;\r\n  var _options$offset = options.offset,\r\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\r\n  var data = placements.reduce(function (acc, placement) {\r\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\r\n    return acc;\r\n  }, {});\r\n  var _data$state$placement = data[state.placement],\r\n      x = _data$state$placement.x,\r\n      y = _data$state$placement.y;\r\n\r\n  if (state.modifiersData.popperOffsets != null) {\r\n    state.modifiersData.popperOffsets.x += x;\r\n    state.modifiersData.popperOffsets.y += y;\r\n  }\r\n\r\n  state.modifiersData[name] = data;\r\n} // eslint-disable-next-line import/no-unused-modules\r\n\r\n\r\nexport default {\r\n  name: 'offset',\r\n  enabled: true,\r\n  phase: 'main',\r\n  requires: ['popperOffsets'],\r\n  fn: offset\r\n};", "var hash = {\r\n  left: 'right',\r\n  right: 'left',\r\n  bottom: 'top',\r\n  top: 'bottom'\r\n};\r\nexport default function getOppositePlacement(placement) {\r\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\r\n    return hash[matched];\r\n  });\r\n}", "var hash = {\r\n  start: 'end',\r\n  end: 'start'\r\n};\r\nexport default function getOppositeVariationPlacement(placement) {\r\n  return placement.replace(/start|end/g, function (matched) {\r\n    return hash[matched];\r\n  });\r\n}", "import getVariation from \"./getVariation.js\";\r\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\r\nimport detectOverflow from \"./detectOverflow.js\";\r\nimport getBasePlacement from \"./getBasePlacement.js\";\r\nexport default function computeAutoPlacement(state, options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var _options = options,\r\n      placement = _options.placement,\r\n      boundary = _options.boundary,\r\n      rootBoundary = _options.rootBoundary,\r\n      padding = _options.padding,\r\n      flipVariations = _options.flipVariations,\r\n      _options$allowedAutoP = _options.allowedAutoPlacements,\r\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\r\n  var variation = getVariation(placement);\r\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\r\n    return getVariation(placement) === variation;\r\n  }) : basePlacements;\r\n  var allowedPlacements = placements.filter(function (placement) {\r\n    return allowedAutoPlacements.indexOf(placement) >= 0;\r\n  });\r\n\r\n  if (allowedPlacements.length === 0) {\r\n    allowedPlacements = placements;\r\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\r\n\r\n\r\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\r\n    acc[placement] = detectOverflow(state, {\r\n      placement: placement,\r\n      boundary: boundary,\r\n      rootBoundary: rootBoundary,\r\n      padding: padding\r\n    })[getBasePlacement(placement)];\r\n    return acc;\r\n  }, {});\r\n  return Object.keys(overflows).sort(function (a, b) {\r\n    return overflows[a] - overflows[b];\r\n  });\r\n}", "import getOppositePlacement from \"../utils/getOppositePlacement.js\";\r\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\r\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\r\nimport detectOverflow from \"../utils/detectOverflow.js\";\r\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\r\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\r\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\r\n\r\nfunction getExpandedFallbackPlacements(placement) {\r\n  if (getBasePlacement(placement) === auto) {\r\n    return [];\r\n  }\r\n\r\n  var oppositePlacement = getOppositePlacement(placement);\r\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\r\n}\r\n\r\nfunction flip(_ref) {\r\n  var state = _ref.state,\r\n      options = _ref.options,\r\n      name = _ref.name;\r\n\r\n  if (state.modifiersData[name]._skip) {\r\n    return;\r\n  }\r\n\r\n  var _options$mainAxis = options.mainAxis,\r\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\r\n      _options$altAxis = options.altAxis,\r\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\r\n      specifiedFallbackPlacements = options.fallbackPlacements,\r\n      padding = options.padding,\r\n      boundary = options.boundary,\r\n      rootBoundary = options.rootBoundary,\r\n      altBoundary = options.altBoundary,\r\n      _options$flipVariatio = options.flipVariations,\r\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\r\n      allowedAutoPlacements = options.allowedAutoPlacements;\r\n  var preferredPlacement = state.options.placement;\r\n  var basePlacement = getBasePlacement(preferredPlacement);\r\n  var isBasePlacement = basePlacement === preferredPlacement;\r\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\r\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\r\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\r\n      placement: placement,\r\n      boundary: boundary,\r\n      rootBoundary: rootBoundary,\r\n      padding: padding,\r\n      flipVariations: flipVariations,\r\n      allowedAutoPlacements: allowedAutoPlacements\r\n    }) : placement);\r\n  }, []);\r\n  var referenceRect = state.rects.reference;\r\n  var popperRect = state.rects.popper;\r\n  var checksMap = new Map();\r\n  var makeFallbackChecks = true;\r\n  var firstFittingPlacement = placements[0];\r\n\r\n  for (var i = 0; i < placements.length; i++) {\r\n    var placement = placements[i];\r\n\r\n    var _basePlacement = getBasePlacement(placement);\r\n\r\n    var isStartVariation = getVariation(placement) === start;\r\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\r\n    var len = isVertical ? 'width' : 'height';\r\n    var overflow = detectOverflow(state, {\r\n      placement: placement,\r\n      boundary: boundary,\r\n      rootBoundary: rootBoundary,\r\n      altBoundary: altBoundary,\r\n      padding: padding\r\n    });\r\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\r\n\r\n    if (referenceRect[len] > popperRect[len]) {\r\n      mainVariationSide = getOppositePlacement(mainVariationSide);\r\n    }\r\n\r\n    var altVariationSide = getOppositePlacement(mainVariationSide);\r\n    var checks = [];\r\n\r\n    if (checkMainAxis) {\r\n      checks.push(overflow[_basePlacement] <= 0);\r\n    }\r\n\r\n    if (checkAltAxis) {\r\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\r\n    }\r\n\r\n    if (checks.every(function (check) {\r\n      return check;\r\n    })) {\r\n      firstFittingPlacement = placement;\r\n      makeFallbackChecks = false;\r\n      break;\r\n    }\r\n\r\n    checksMap.set(placement, checks);\r\n  }\r\n\r\n  if (makeFallbackChecks) {\r\n    // `2` may be desired in some cases – research later\r\n    var numberOfChecks = flipVariations ? 3 : 1;\r\n\r\n    var _loop = function _loop(_i) {\r\n      var fittingPlacement = placements.find(function (placement) {\r\n        var checks = checksMap.get(placement);\r\n\r\n        if (checks) {\r\n          return checks.slice(0, _i).every(function (check) {\r\n            return check;\r\n          });\r\n        }\r\n      });\r\n\r\n      if (fittingPlacement) {\r\n        firstFittingPlacement = fittingPlacement;\r\n        return \"break\";\r\n      }\r\n    };\r\n\r\n    for (var _i = numberOfChecks; _i > 0; _i--) {\r\n      var _ret = _loop(_i);\r\n\r\n      if (_ret === \"break\") break;\r\n    }\r\n  }\r\n\r\n  if (state.placement !== firstFittingPlacement) {\r\n    state.modifiersData[name]._skip = true;\r\n    state.placement = firstFittingPlacement;\r\n    state.reset = true;\r\n  }\r\n} // eslint-disable-next-line import/no-unused-modules\r\n\r\n\r\nexport default {\r\n  name: 'flip',\r\n  enabled: true,\r\n  phase: 'main',\r\n  fn: flip,\r\n  requiresIfExists: ['offset'],\r\n  data: {\r\n    _skip: false\r\n  }\r\n};", "export default function getAltAxis(axis) {\r\n  return axis === 'x' ? 'y' : 'x';\r\n}", "import { max as mathMax, min as mathMin } from \"./math.js\";\r\nexport function within(min, value, max) {\r\n  return mathMax(min, mathMin(value, max));\r\n}\r\nexport function withinMaxClamp(min, value, max) {\r\n  var v = within(min, value, max);\r\n  return v > max ? max : v;\r\n}", "import { top, left, right, bottom, start } from \"../enums.js\";\r\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\r\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\r\nimport getAltAxis from \"../utils/getAltAxis.js\";\r\nimport { within, withinMaxClamp } from \"../utils/within.js\";\r\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\r\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\r\nimport detectOverflow from \"../utils/detectOverflow.js\";\r\nimport getVariation from \"../utils/getVariation.js\";\r\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\r\nimport { min as mathMin, max as mathMax } from \"../utils/math.js\";\r\n\r\nfunction preventOverflow(_ref) {\r\n  var state = _ref.state,\r\n      options = _ref.options,\r\n      name = _ref.name;\r\n  var _options$mainAxis = options.mainAxis,\r\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\r\n      _options$altAxis = options.altAxis,\r\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\r\n      boundary = options.boundary,\r\n      rootBoundary = options.rootBoundary,\r\n      altBoundary = options.altBoundary,\r\n      padding = options.padding,\r\n      _options$tether = options.tether,\r\n      tether = _options$tether === void 0 ? true : _options$tether,\r\n      _options$tetherOffset = options.tetherOffset,\r\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\r\n  var overflow = detectOverflow(state, {\r\n    boundary: boundary,\r\n    rootBoundary: rootBoundary,\r\n    padding: padding,\r\n    altBoundary: altBoundary\r\n  });\r\n  var basePlacement = getBasePlacement(state.placement);\r\n  var variation = getVariation(state.placement);\r\n  var isBasePlacement = !variation;\r\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\r\n  var altAxis = getAltAxis(mainAxis);\r\n  var popperOffsets = state.modifiersData.popperOffsets;\r\n  var referenceRect = state.rects.reference;\r\n  var popperRect = state.rects.popper;\r\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\r\n    placement: state.placement\r\n  })) : tetherOffset;\r\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\r\n    mainAxis: tetherOffsetValue,\r\n    altAxis: tetherOffsetValue\r\n  } : Object.assign({\r\n    mainAxis: 0,\r\n    altAxis: 0\r\n  }, tetherOffsetValue);\r\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\r\n  var data = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  if (!popperOffsets) {\r\n    return;\r\n  }\r\n\r\n  if (checkMainAxis) {\r\n    var _offsetModifierState$;\r\n\r\n    var mainSide = mainAxis === 'y' ? top : left;\r\n    var altSide = mainAxis === 'y' ? bottom : right;\r\n    var len = mainAxis === 'y' ? 'height' : 'width';\r\n    var offset = popperOffsets[mainAxis];\r\n    var min = offset + overflow[mainSide];\r\n    var max = offset - overflow[altSide];\r\n    var additive = tether ? -popperRect[len] / 2 : 0;\r\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\r\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\r\n    // outside the reference bounds\r\n\r\n    var arrowElement = state.elements.arrow;\r\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\r\n      width: 0,\r\n      height: 0\r\n    };\r\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\r\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\r\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\r\n    // to include its full size in the calculation. If the reference is small\r\n    // and near the edge of a boundary, the popper can overflow even if the\r\n    // reference is not overflowing as well (e.g. virtual elements with no\r\n    // width or height)\r\n\r\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\r\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\r\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\r\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\r\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\r\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\r\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\r\n    var tetherMax = offset + maxOffset - offsetModifierValue;\r\n    var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\r\n    popperOffsets[mainAxis] = preventedOffset;\r\n    data[mainAxis] = preventedOffset - offset;\r\n  }\r\n\r\n  if (checkAltAxis) {\r\n    var _offsetModifierState$2;\r\n\r\n    var _mainSide = mainAxis === 'x' ? top : left;\r\n\r\n    var _altSide = mainAxis === 'x' ? bottom : right;\r\n\r\n    var _offset = popperOffsets[altAxis];\r\n\r\n    var _len = altAxis === 'y' ? 'height' : 'width';\r\n\r\n    var _min = _offset + overflow[_mainSide];\r\n\r\n    var _max = _offset - overflow[_altSide];\r\n\r\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\r\n\r\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\r\n\r\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\r\n\r\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\r\n\r\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\r\n\r\n    popperOffsets[altAxis] = _preventedOffset;\r\n    data[altAxis] = _preventedOffset - _offset;\r\n  }\r\n\r\n  state.modifiersData[name] = data;\r\n} // eslint-disable-next-line import/no-unused-modules\r\n\r\n\r\nexport default {\r\n  name: 'preventOverflow',\r\n  enabled: true,\r\n  phase: 'main',\r\n  fn: preventOverflow,\r\n  requiresIfExists: ['offset']\r\n};", "import getBasePlacement from \"../utils/getBasePlacement.js\";\r\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\r\nimport contains from \"../dom-utils/contains.js\";\r\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\r\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\r\nimport { within } from \"../utils/within.js\";\r\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\r\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\r\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\r\n\r\nvar toPaddingObject = function toPaddingObject(padding, state) {\r\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\r\n    placement: state.placement\r\n  })) : padding;\r\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\r\n};\r\n\r\nfunction arrow(_ref) {\r\n  var _state$modifiersData$;\r\n\r\n  var state = _ref.state,\r\n      name = _ref.name,\r\n      options = _ref.options;\r\n  var arrowElement = state.elements.arrow;\r\n  var popperOffsets = state.modifiersData.popperOffsets;\r\n  var basePlacement = getBasePlacement(state.placement);\r\n  var axis = getMainAxisFromPlacement(basePlacement);\r\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\r\n  var len = isVertical ? 'height' : 'width';\r\n\r\n  if (!arrowElement || !popperOffsets) {\r\n    return;\r\n  }\r\n\r\n  var paddingObject = toPaddingObject(options.padding, state);\r\n  var arrowRect = getLayoutRect(arrowElement);\r\n  var minProp = axis === 'y' ? top : left;\r\n  var maxProp = axis === 'y' ? bottom : right;\r\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\r\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\r\n  var arrowOffsetParent = getOffsetParent(arrowElement);\r\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\r\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\r\n  // outside of the popper bounds\r\n\r\n  var min = paddingObject[minProp];\r\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\r\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\r\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\r\n\r\n  var axisProp = axis;\r\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\r\n}\r\n\r\nfunction effect(_ref2) {\r\n  var state = _ref2.state,\r\n      options = _ref2.options;\r\n  var _options$element = options.element,\r\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\r\n\r\n  if (arrowElement == null) {\r\n    return;\r\n  } // CSS selector\r\n\r\n\r\n  if (typeof arrowElement === 'string') {\r\n    arrowElement = state.elements.popper.querySelector(arrowElement);\r\n\r\n    if (!arrowElement) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (!contains(state.elements.popper, arrowElement)) {\r\n    return;\r\n  }\r\n\r\n  state.elements.arrow = arrowElement;\r\n} // eslint-disable-next-line import/no-unused-modules\r\n\r\n\r\nexport default {\r\n  name: 'arrow',\r\n  enabled: true,\r\n  phase: 'main',\r\n  fn: arrow,\r\n  effect: effect,\r\n  requires: ['popperOffsets'],\r\n  requiresIfExists: ['preventOverflow']\r\n};", "import { top, bottom, left, right } from \"../enums.js\";\r\nimport detectOverflow from \"../utils/detectOverflow.js\";\r\n\r\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\r\n  if (preventedOffsets === void 0) {\r\n    preventedOffsets = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n  }\r\n\r\n  return {\r\n    top: overflow.top - rect.height - preventedOffsets.y,\r\n    right: overflow.right - rect.width + preventedOffsets.x,\r\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\r\n    left: overflow.left - rect.width - preventedOffsets.x\r\n  };\r\n}\r\n\r\nfunction isAnySideFullyClipped(overflow) {\r\n  return [top, right, bottom, left].some(function (side) {\r\n    return overflow[side] >= 0;\r\n  });\r\n}\r\n\r\nfunction hide(_ref) {\r\n  var state = _ref.state,\r\n      name = _ref.name;\r\n  var referenceRect = state.rects.reference;\r\n  var popperRect = state.rects.popper;\r\n  var preventedOffsets = state.modifiersData.preventOverflow;\r\n  var referenceOverflow = detectOverflow(state, {\r\n    elementContext: 'reference'\r\n  });\r\n  var popperAltOverflow = detectOverflow(state, {\r\n    altBoundary: true\r\n  });\r\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\r\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\r\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\r\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\r\n  state.modifiersData[name] = {\r\n    referenceClippingOffsets: referenceClippingOffsets,\r\n    popperEscapeOffsets: popperEscapeOffsets,\r\n    isReferenceHidden: isReferenceHidden,\r\n    hasPopperEscaped: hasPopperEscaped\r\n  };\r\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\r\n    'data-popper-reference-hidden': isReferenceHidden,\r\n    'data-popper-escaped': hasPopperEscaped\r\n  });\r\n} // eslint-disable-next-line import/no-unused-modules\r\n\r\n\r\nexport default {\r\n  name: 'hide',\r\n  enabled: true,\r\n  phase: 'main',\r\n  requiresIfExists: ['preventOverflow'],\r\n  fn: hide\r\n};", "import { popperGenerator, detectOverflow } from \"./createPopper.js\";\r\nimport eventListeners from \"./modifiers/eventListeners.js\";\r\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\r\nimport computeStyles from \"./modifiers/computeStyles.js\";\r\nimport applyStyles from \"./modifiers/applyStyles.js\";\r\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles];\r\nvar createPopper = /*#__PURE__*/popperGenerator({\r\n  defaultModifiers: defaultModifiers\r\n}); // eslint-disable-next-line import/no-unused-modules\r\n\r\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow };", "import { popperGenerator, detectOverflow } from \"./createPopper.js\";\r\nimport eventListeners from \"./modifiers/eventListeners.js\";\r\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\r\nimport computeStyles from \"./modifiers/computeStyles.js\";\r\nimport applyStyles from \"./modifiers/applyStyles.js\";\r\nimport offset from \"./modifiers/offset.js\";\r\nimport flip from \"./modifiers/flip.js\";\r\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\r\nimport arrow from \"./modifiers/arrow.js\";\r\nimport hide from \"./modifiers/hide.js\";\r\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\r\nvar createPopper = /*#__PURE__*/popperGenerator({\r\n  defaultModifiers: defaultModifiers\r\n}); // eslint-disable-next-line import/no-unused-modules\r\n\r\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\r\n\r\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\r\n\r\nexport * from \"./modifiers/index.js\";", "/**\r\n * Custom positioning reference element.\r\n * @see https://floating-ui.com/docs/virtual-elements\r\n */\r\n\r\nconst sides = ['top', 'right', 'bottom', 'left'];\r\nconst alignments = ['start', 'end'];\r\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\r\nconst min = Math.min;\r\nconst max = Math.max;\r\nconst round = Math.round;\r\nconst floor = Math.floor;\r\nconst createCoords = v => ({\r\n  x: v,\r\n  y: v\r\n});\r\nconst oppositeSideMap = {\r\n  left: 'right',\r\n  right: 'left',\r\n  bottom: 'top',\r\n  top: 'bottom'\r\n};\r\nconst oppositeAlignmentMap = {\r\n  start: 'end',\r\n  end: 'start'\r\n};\r\nfunction clamp(start, value, end) {\r\n  return max(start, min(value, end));\r\n}\r\nfunction evaluate(value, param) {\r\n  return typeof value === 'function' ? value(param) : value;\r\n}\r\nfunction getSide(placement) {\r\n  return placement.split('-')[0];\r\n}\r\nfunction getAlignment(placement) {\r\n  return placement.split('-')[1];\r\n}\r\nfunction getOppositeAxis(axis) {\r\n  return axis === 'x' ? 'y' : 'x';\r\n}\r\nfunction getAxisLength(axis) {\r\n  return axis === 'y' ? 'height' : 'width';\r\n}\r\nfunction getSideAxis(placement) {\r\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\r\n}\r\nfunction getAlignmentAxis(placement) {\r\n  return getOppositeAxis(getSideAxis(placement));\r\n}\r\nfunction getAlignmentSides(placement, rects, rtl) {\r\n  if (rtl === void 0) {\r\n    rtl = false;\r\n  }\r\n  const alignment = getAlignment(placement);\r\n  const alignmentAxis = getAlignmentAxis(placement);\r\n  const length = getAxisLength(alignmentAxis);\r\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\r\n  if (rects.reference[length] > rects.floating[length]) {\r\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\r\n  }\r\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\r\n}\r\nfunction getExpandedPlacements(placement) {\r\n  const oppositePlacement = getOppositePlacement(placement);\r\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\r\n}\r\nfunction getOppositeAlignmentPlacement(placement) {\r\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\r\n}\r\nfunction getSideList(side, isStart, rtl) {\r\n  const lr = ['left', 'right'];\r\n  const rl = ['right', 'left'];\r\n  const tb = ['top', 'bottom'];\r\n  const bt = ['bottom', 'top'];\r\n  switch (side) {\r\n    case 'top':\r\n    case 'bottom':\r\n      if (rtl) return isStart ? rl : lr;\r\n      return isStart ? lr : rl;\r\n    case 'left':\r\n    case 'right':\r\n      return isStart ? tb : bt;\r\n    default:\r\n      return [];\r\n  }\r\n}\r\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\r\n  const alignment = getAlignment(placement);\r\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\r\n  if (alignment) {\r\n    list = list.map(side => side + \"-\" + alignment);\r\n    if (flipAlignment) {\r\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\r\n    }\r\n  }\r\n  return list;\r\n}\r\nfunction getOppositePlacement(placement) {\r\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\r\n}\r\nfunction expandPaddingObject(padding) {\r\n  return {\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    ...padding\r\n  };\r\n}\r\nfunction getPaddingObject(padding) {\r\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\r\n    top: padding,\r\n    right: padding,\r\n    bottom: padding,\r\n    left: padding\r\n  };\r\n}\r\nfunction rectToClientRect(rect) {\r\n  const {\r\n    x,\r\n    y,\r\n    width,\r\n    height\r\n  } = rect;\r\n  return {\r\n    width,\r\n    height,\r\n    top: y,\r\n    left: x,\r\n    right: x + width,\r\n    bottom: y + height,\r\n    x,\r\n    y\r\n  };\r\n}\r\n\r\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\r\n", "import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\r\nexport { rectToClientRect } from '@floating-ui/utils';\r\n\r\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\r\n  let {\r\n    reference,\r\n    floating\r\n  } = _ref;\r\n  const sideAxis = getSideAxis(placement);\r\n  const alignmentAxis = getAlignmentAxis(placement);\r\n  const alignLength = getAxisLength(alignmentAxis);\r\n  const side = getSide(placement);\r\n  const isVertical = sideAxis === 'y';\r\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\r\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\r\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\r\n  let coords;\r\n  switch (side) {\r\n    case 'top':\r\n      coords = {\r\n        x: commonX,\r\n        y: reference.y - floating.height\r\n      };\r\n      break;\r\n    case 'bottom':\r\n      coords = {\r\n        x: commonX,\r\n        y: reference.y + reference.height\r\n      };\r\n      break;\r\n    case 'right':\r\n      coords = {\r\n        x: reference.x + reference.width,\r\n        y: commonY\r\n      };\r\n      break;\r\n    case 'left':\r\n      coords = {\r\n        x: reference.x - floating.width,\r\n        y: commonY\r\n      };\r\n      break;\r\n    default:\r\n      coords = {\r\n        x: reference.x,\r\n        y: reference.y\r\n      };\r\n  }\r\n  switch (getAlignment(placement)) {\r\n    case 'start':\r\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\r\n      break;\r\n    case 'end':\r\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\r\n      break;\r\n  }\r\n  return coords;\r\n}\r\n\r\n/**\r\n * Computes the `x` and `y` coordinates that will place the floating element\r\n * next to a given reference element.\r\n *\r\n * This export does not have any `platform` interface logic. You will need to\r\n * write one for the platform you are using Floating UI with.\r\n */\r\nconst computePosition = async (reference, floating, config) => {\r\n  const {\r\n    placement = 'bottom',\r\n    strategy = 'absolute',\r\n    middleware = [],\r\n    platform\r\n  } = config;\r\n  const validMiddleware = middleware.filter(Boolean);\r\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\r\n  let rects = await platform.getElementRects({\r\n    reference,\r\n    floating,\r\n    strategy\r\n  });\r\n  let {\r\n    x,\r\n    y\r\n  } = computeCoordsFromPlacement(rects, placement, rtl);\r\n  let statefulPlacement = placement;\r\n  let middlewareData = {};\r\n  let resetCount = 0;\r\n  for (let i = 0; i < validMiddleware.length; i++) {\r\n    const {\r\n      name,\r\n      fn\r\n    } = validMiddleware[i];\r\n    const {\r\n      x: nextX,\r\n      y: nextY,\r\n      data,\r\n      reset\r\n    } = await fn({\r\n      x,\r\n      y,\r\n      initialPlacement: placement,\r\n      placement: statefulPlacement,\r\n      strategy,\r\n      middlewareData,\r\n      rects,\r\n      platform,\r\n      elements: {\r\n        reference,\r\n        floating\r\n      }\r\n    });\r\n    x = nextX != null ? nextX : x;\r\n    y = nextY != null ? nextY : y;\r\n    middlewareData = {\r\n      ...middlewareData,\r\n      [name]: {\r\n        ...middlewareData[name],\r\n        ...data\r\n      }\r\n    };\r\n    if (reset && resetCount <= 50) {\r\n      resetCount++;\r\n      if (typeof reset === 'object') {\r\n        if (reset.placement) {\r\n          statefulPlacement = reset.placement;\r\n        }\r\n        if (reset.rects) {\r\n          rects = reset.rects === true ? await platform.getElementRects({\r\n            reference,\r\n            floating,\r\n            strategy\r\n          }) : reset.rects;\r\n        }\r\n        ({\r\n          x,\r\n          y\r\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\r\n      }\r\n      i = -1;\r\n    }\r\n  }\r\n  return {\r\n    x,\r\n    y,\r\n    placement: statefulPlacement,\r\n    strategy,\r\n    middlewareData\r\n  };\r\n};\r\n\r\n/**\r\n * Resolves with an object of overflow side offsets that determine how much the\r\n * element is overflowing a given clipping boundary on each side.\r\n * - positive = overflowing the boundary by that number of pixels\r\n * - negative = how many pixels left before it will overflow\r\n * - 0 = lies flush with the boundary\r\n * @see https://floating-ui.com/docs/detectOverflow\r\n */\r\nasync function detectOverflow(state, options) {\r\n  var _await$platform$isEle;\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  const {\r\n    x,\r\n    y,\r\n    platform,\r\n    rects,\r\n    elements,\r\n    strategy\r\n  } = state;\r\n  const {\r\n    boundary = 'clippingAncestors',\r\n    rootBoundary = 'viewport',\r\n    elementContext = 'floating',\r\n    altBoundary = false,\r\n    padding = 0\r\n  } = evaluate(options, state);\r\n  const paddingObject = getPaddingObject(padding);\r\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\r\n  const element = elements[altBoundary ? altContext : elementContext];\r\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\r\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\r\n    boundary,\r\n    rootBoundary,\r\n    strategy\r\n  }));\r\n  const rect = elementContext === 'floating' ? {\r\n    x,\r\n    y,\r\n    width: rects.floating.width,\r\n    height: rects.floating.height\r\n  } : rects.reference;\r\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\r\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\r\n    x: 1,\r\n    y: 1\r\n  } : {\r\n    x: 1,\r\n    y: 1\r\n  };\r\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\r\n    elements,\r\n    rect,\r\n    offsetParent,\r\n    strategy\r\n  }) : rect);\r\n  return {\r\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\r\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\r\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\r\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\r\n  };\r\n}\r\n\r\n/**\r\n * Provides data to position an inner element of the floating element so that it\r\n * appears centered to the reference element.\r\n * @see https://floating-ui.com/docs/arrow\r\n */\r\nconst arrow = options => ({\r\n  name: 'arrow',\r\n  options,\r\n  async fn(state) {\r\n    const {\r\n      x,\r\n      y,\r\n      placement,\r\n      rects,\r\n      platform,\r\n      elements,\r\n      middlewareData\r\n    } = state;\r\n    // Since `element` is required, we don't Partial<> the type.\r\n    const {\r\n      element,\r\n      padding = 0\r\n    } = evaluate(options, state) || {};\r\n    if (element == null) {\r\n      return {};\r\n    }\r\n    const paddingObject = getPaddingObject(padding);\r\n    const coords = {\r\n      x,\r\n      y\r\n    };\r\n    const axis = getAlignmentAxis(placement);\r\n    const length = getAxisLength(axis);\r\n    const arrowDimensions = await platform.getDimensions(element);\r\n    const isYAxis = axis === 'y';\r\n    const minProp = isYAxis ? 'top' : 'left';\r\n    const maxProp = isYAxis ? 'bottom' : 'right';\r\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\r\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\r\n    const startDiff = coords[axis] - rects.reference[axis];\r\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\r\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\r\n\r\n    // DOM platform can return `window` as the `offsetParent`.\r\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\r\n      clientSize = elements.floating[clientProp] || rects.floating[length];\r\n    }\r\n    const centerToReference = endDiff / 2 - startDiff / 2;\r\n\r\n    // If the padding is large enough that it causes the arrow to no longer be\r\n    // centered, modify the padding so that it is centered.\r\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\r\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\r\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\r\n\r\n    // Make sure the arrow doesn't overflow the floating element if the center\r\n    // point is outside the floating element's bounds.\r\n    const min$1 = minPadding;\r\n    const max = clientSize - arrowDimensions[length] - maxPadding;\r\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\r\n    const offset = clamp(min$1, center, max);\r\n\r\n    // If the reference is small enough that the arrow's padding causes it to\r\n    // to point to nothing for an aligned placement, adjust the offset of the\r\n    // floating element itself. To ensure `shift()` continues to take action,\r\n    // a single reset is performed when this is true.\r\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\r\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\r\n    return {\r\n      [axis]: coords[axis] + alignmentOffset,\r\n      data: {\r\n        [axis]: offset,\r\n        centerOffset: center - offset - alignmentOffset,\r\n        ...(shouldAddOffset && {\r\n          alignmentOffset\r\n        })\r\n      },\r\n      reset: shouldAddOffset\r\n    };\r\n  }\r\n});\r\n\r\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\r\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\r\n  return allowedPlacementsSortedByAlignment.filter(placement => {\r\n    if (alignment) {\r\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\r\n    }\r\n    return true;\r\n  });\r\n}\r\n/**\r\n * Optimizes the visibility of the floating element by choosing the placement\r\n * that has the most space available automatically, without needing to specify a\r\n * preferred placement. Alternative to `flip`.\r\n * @see https://floating-ui.com/docs/autoPlacement\r\n */\r\nconst autoPlacement = function (options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  return {\r\n    name: 'autoPlacement',\r\n    options,\r\n    async fn(state) {\r\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\r\n      const {\r\n        rects,\r\n        middlewareData,\r\n        placement,\r\n        platform,\r\n        elements\r\n      } = state;\r\n      const {\r\n        crossAxis = false,\r\n        alignment,\r\n        allowedPlacements = placements,\r\n        autoAlignment = true,\r\n        ...detectOverflowOptions\r\n      } = evaluate(options, state);\r\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\r\n      const overflow = await detectOverflow(state, detectOverflowOptions);\r\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\r\n      const currentPlacement = placements$1[currentIndex];\r\n      if (currentPlacement == null) {\r\n        return {};\r\n      }\r\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\r\n\r\n      // Make `computeCoords` start from the right place.\r\n      if (placement !== currentPlacement) {\r\n        return {\r\n          reset: {\r\n            placement: placements$1[0]\r\n          }\r\n        };\r\n      }\r\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\r\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\r\n        placement: currentPlacement,\r\n        overflows: currentOverflows\r\n      }];\r\n      const nextPlacement = placements$1[currentIndex + 1];\r\n\r\n      // There are more placements to check.\r\n      if (nextPlacement) {\r\n        return {\r\n          data: {\r\n            index: currentIndex + 1,\r\n            overflows: allOverflows\r\n          },\r\n          reset: {\r\n            placement: nextPlacement\r\n          }\r\n        };\r\n      }\r\n      const placementsSortedByMostSpace = allOverflows.map(d => {\r\n        const alignment = getAlignment(d.placement);\r\n        return [d.placement, alignment && crossAxis ?\r\n        // Check along the mainAxis and main crossAxis side.\r\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\r\n        // Check only the mainAxis.\r\n        d.overflows[0], d.overflows];\r\n      }).sort((a, b) => a[1] - b[1]);\r\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\r\n      // Aligned placements should not check their opposite crossAxis\r\n      // side.\r\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\r\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\r\n      if (resetPlacement !== placement) {\r\n        return {\r\n          data: {\r\n            index: currentIndex + 1,\r\n            overflows: allOverflows\r\n          },\r\n          reset: {\r\n            placement: resetPlacement\r\n          }\r\n        };\r\n      }\r\n      return {};\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Optimizes the visibility of the floating element by flipping the `placement`\r\n * in order to keep it in view when the preferred placement(s) will overflow the\r\n * clipping boundary. Alternative to `autoPlacement`.\r\n * @see https://floating-ui.com/docs/flip\r\n */\r\nconst flip = function (options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  return {\r\n    name: 'flip',\r\n    options,\r\n    async fn(state) {\r\n      var _middlewareData$arrow, _middlewareData$flip;\r\n      const {\r\n        placement,\r\n        middlewareData,\r\n        rects,\r\n        initialPlacement,\r\n        platform,\r\n        elements\r\n      } = state;\r\n      const {\r\n        mainAxis: checkMainAxis = true,\r\n        crossAxis: checkCrossAxis = true,\r\n        fallbackPlacements: specifiedFallbackPlacements,\r\n        fallbackStrategy = 'bestFit',\r\n        fallbackAxisSideDirection = 'none',\r\n        flipAlignment = true,\r\n        ...detectOverflowOptions\r\n      } = evaluate(options, state);\r\n\r\n      // If a reset by the arrow was caused due to an alignment offset being\r\n      // added, we should skip any logic now since `flip()` has already done its\r\n      // work.\r\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\r\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\r\n        return {};\r\n      }\r\n      const side = getSide(placement);\r\n      const initialSideAxis = getSideAxis(initialPlacement);\r\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\r\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\r\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\r\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\r\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\r\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\r\n      }\r\n      const placements = [initialPlacement, ...fallbackPlacements];\r\n      const overflow = await detectOverflow(state, detectOverflowOptions);\r\n      const overflows = [];\r\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\r\n      if (checkMainAxis) {\r\n        overflows.push(overflow[side]);\r\n      }\r\n      if (checkCrossAxis) {\r\n        const sides = getAlignmentSides(placement, rects, rtl);\r\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\r\n      }\r\n      overflowsData = [...overflowsData, {\r\n        placement,\r\n        overflows\r\n      }];\r\n\r\n      // One or more sides is overflowing.\r\n      if (!overflows.every(side => side <= 0)) {\r\n        var _middlewareData$flip2, _overflowsData$filter;\r\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\r\n        const nextPlacement = placements[nextIndex];\r\n        if (nextPlacement) {\r\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\r\n          if (!ignoreCrossAxisOverflow ||\r\n          // We leave the current main axis only if every placement on that axis\r\n          // overflows the main axis.\r\n          overflowsData.every(d => d.overflows[0] > 0 && getSideAxis(d.placement) === initialSideAxis)) {\r\n            // Try next placement and re-run the lifecycle.\r\n            return {\r\n              data: {\r\n                index: nextIndex,\r\n                overflows: overflowsData\r\n              },\r\n              reset: {\r\n                placement: nextPlacement\r\n              }\r\n            };\r\n          }\r\n        }\r\n\r\n        // First, find the candidates that fit on the mainAxis side of overflow,\r\n        // then find the placement that fits the best on the main crossAxis side.\r\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\r\n\r\n        // Otherwise fallback.\r\n        if (!resetPlacement) {\r\n          switch (fallbackStrategy) {\r\n            case 'bestFit':\r\n              {\r\n                var _overflowsData$filter2;\r\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\r\n                  if (hasFallbackAxisSideDirection) {\r\n                    const currentSideAxis = getSideAxis(d.placement);\r\n                    return currentSideAxis === initialSideAxis ||\r\n                    // Create a bias to the `y` side axis due to horizontal\r\n                    // reading directions favoring greater width.\r\n                    currentSideAxis === 'y';\r\n                  }\r\n                  return true;\r\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\r\n                if (placement) {\r\n                  resetPlacement = placement;\r\n                }\r\n                break;\r\n              }\r\n            case 'initialPlacement':\r\n              resetPlacement = initialPlacement;\r\n              break;\r\n          }\r\n        }\r\n        if (placement !== resetPlacement) {\r\n          return {\r\n            reset: {\r\n              placement: resetPlacement\r\n            }\r\n          };\r\n        }\r\n      }\r\n      return {};\r\n    }\r\n  };\r\n};\r\n\r\nfunction getSideOffsets(overflow, rect) {\r\n  return {\r\n    top: overflow.top - rect.height,\r\n    right: overflow.right - rect.width,\r\n    bottom: overflow.bottom - rect.height,\r\n    left: overflow.left - rect.width\r\n  };\r\n}\r\nfunction isAnySideFullyClipped(overflow) {\r\n  return sides.some(side => overflow[side] >= 0);\r\n}\r\n/**\r\n * Provides data to hide the floating element in applicable situations, such as\r\n * when it is not in the same clipping context as the reference element.\r\n * @see https://floating-ui.com/docs/hide\r\n */\r\nconst hide = function (options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  return {\r\n    name: 'hide',\r\n    options,\r\n    async fn(state) {\r\n      const {\r\n        rects\r\n      } = state;\r\n      const {\r\n        strategy = 'referenceHidden',\r\n        ...detectOverflowOptions\r\n      } = evaluate(options, state);\r\n      switch (strategy) {\r\n        case 'referenceHidden':\r\n          {\r\n            const overflow = await detectOverflow(state, {\r\n              ...detectOverflowOptions,\r\n              elementContext: 'reference'\r\n            });\r\n            const offsets = getSideOffsets(overflow, rects.reference);\r\n            return {\r\n              data: {\r\n                referenceHiddenOffsets: offsets,\r\n                referenceHidden: isAnySideFullyClipped(offsets)\r\n              }\r\n            };\r\n          }\r\n        case 'escaped':\r\n          {\r\n            const overflow = await detectOverflow(state, {\r\n              ...detectOverflowOptions,\r\n              altBoundary: true\r\n            });\r\n            const offsets = getSideOffsets(overflow, rects.floating);\r\n            return {\r\n              data: {\r\n                escapedOffsets: offsets,\r\n                escaped: isAnySideFullyClipped(offsets)\r\n              }\r\n            };\r\n          }\r\n        default:\r\n          {\r\n            return {};\r\n          }\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nfunction getBoundingRect(rects) {\r\n  const minX = min(...rects.map(rect => rect.left));\r\n  const minY = min(...rects.map(rect => rect.top));\r\n  const maxX = max(...rects.map(rect => rect.right));\r\n  const maxY = max(...rects.map(rect => rect.bottom));\r\n  return {\r\n    x: minX,\r\n    y: minY,\r\n    width: maxX - minX,\r\n    height: maxY - minY\r\n  };\r\n}\r\nfunction getRectsByLine(rects) {\r\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\r\n  const groups = [];\r\n  let prevRect = null;\r\n  for (let i = 0; i < sortedRects.length; i++) {\r\n    const rect = sortedRects[i];\r\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\r\n      groups.push([rect]);\r\n    } else {\r\n      groups[groups.length - 1].push(rect);\r\n    }\r\n    prevRect = rect;\r\n  }\r\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\r\n}\r\n/**\r\n * Provides improved positioning for inline reference elements that can span\r\n * over multiple lines, such as hyperlinks or range selections.\r\n * @see https://floating-ui.com/docs/inline\r\n */\r\nconst inline = function (options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  return {\r\n    name: 'inline',\r\n    options,\r\n    async fn(state) {\r\n      const {\r\n        placement,\r\n        elements,\r\n        rects,\r\n        platform,\r\n        strategy\r\n      } = state;\r\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\r\n      // ClientRect's bounds, despite the event listener being triggered. A\r\n      // padding of 2 seems to handle this issue.\r\n      const {\r\n        padding = 2,\r\n        x,\r\n        y\r\n      } = evaluate(options, state);\r\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\r\n      const clientRects = getRectsByLine(nativeClientRects);\r\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\r\n      const paddingObject = getPaddingObject(padding);\r\n      function getBoundingClientRect() {\r\n        // There are two rects and they are disjoined.\r\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\r\n          // Find the first rect in which the point is fully inside.\r\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\r\n        }\r\n\r\n        // There are 2 or more connected rects.\r\n        if (clientRects.length >= 2) {\r\n          if (getSideAxis(placement) === 'y') {\r\n            const firstRect = clientRects[0];\r\n            const lastRect = clientRects[clientRects.length - 1];\r\n            const isTop = getSide(placement) === 'top';\r\n            const top = firstRect.top;\r\n            const bottom = lastRect.bottom;\r\n            const left = isTop ? firstRect.left : lastRect.left;\r\n            const right = isTop ? firstRect.right : lastRect.right;\r\n            const width = right - left;\r\n            const height = bottom - top;\r\n            return {\r\n              top,\r\n              bottom,\r\n              left,\r\n              right,\r\n              width,\r\n              height,\r\n              x: left,\r\n              y: top\r\n            };\r\n          }\r\n          const isLeftSide = getSide(placement) === 'left';\r\n          const maxRight = max(...clientRects.map(rect => rect.right));\r\n          const minLeft = min(...clientRects.map(rect => rect.left));\r\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\r\n          const top = measureRects[0].top;\r\n          const bottom = measureRects[measureRects.length - 1].bottom;\r\n          const left = minLeft;\r\n          const right = maxRight;\r\n          const width = right - left;\r\n          const height = bottom - top;\r\n          return {\r\n            top,\r\n            bottom,\r\n            left,\r\n            right,\r\n            width,\r\n            height,\r\n            x: left,\r\n            y: top\r\n          };\r\n        }\r\n        return fallback;\r\n      }\r\n      const resetRects = await platform.getElementRects({\r\n        reference: {\r\n          getBoundingClientRect\r\n        },\r\n        floating: elements.floating,\r\n        strategy\r\n      });\r\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\r\n        return {\r\n          reset: {\r\n            rects: resetRects\r\n          }\r\n        };\r\n      }\r\n      return {};\r\n    }\r\n  };\r\n};\r\n\r\n// For type backwards-compatibility, the `OffsetOptions` type was also\r\n// Derivable.\r\n\r\nasync function convertValueToCoords(state, options) {\r\n  const {\r\n    placement,\r\n    platform,\r\n    elements\r\n  } = state;\r\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\r\n  const side = getSide(placement);\r\n  const alignment = getAlignment(placement);\r\n  const isVertical = getSideAxis(placement) === 'y';\r\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\r\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\r\n  const rawValue = evaluate(options, state);\r\n\r\n  // eslint-disable-next-line prefer-const\r\n  let {\r\n    mainAxis,\r\n    crossAxis,\r\n    alignmentAxis\r\n  } = typeof rawValue === 'number' ? {\r\n    mainAxis: rawValue,\r\n    crossAxis: 0,\r\n    alignmentAxis: null\r\n  } : {\r\n    mainAxis: rawValue.mainAxis || 0,\r\n    crossAxis: rawValue.crossAxis || 0,\r\n    alignmentAxis: rawValue.alignmentAxis\r\n  };\r\n  if (alignment && typeof alignmentAxis === 'number') {\r\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\r\n  }\r\n  return isVertical ? {\r\n    x: crossAxis * crossAxisMulti,\r\n    y: mainAxis * mainAxisMulti\r\n  } : {\r\n    x: mainAxis * mainAxisMulti,\r\n    y: crossAxis * crossAxisMulti\r\n  };\r\n}\r\n\r\n/**\r\n * Modifies the placement by translating the floating element along the\r\n * specified axes.\r\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\r\n * object may be passed.\r\n * @see https://floating-ui.com/docs/offset\r\n */\r\nconst offset = function (options) {\r\n  if (options === void 0) {\r\n    options = 0;\r\n  }\r\n  return {\r\n    name: 'offset',\r\n    options,\r\n    async fn(state) {\r\n      var _middlewareData$offse, _middlewareData$arrow;\r\n      const {\r\n        x,\r\n        y,\r\n        placement,\r\n        middlewareData\r\n      } = state;\r\n      const diffCoords = await convertValueToCoords(state, options);\r\n\r\n      // If the placement is the same and the arrow caused an alignment offset\r\n      // then we don't need to change the positioning coordinates.\r\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\r\n        return {};\r\n      }\r\n      return {\r\n        x: x + diffCoords.x,\r\n        y: y + diffCoords.y,\r\n        data: {\r\n          ...diffCoords,\r\n          placement\r\n        }\r\n      };\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Optimizes the visibility of the floating element by shifting it in order to\r\n * keep it in view when it will overflow the clipping boundary.\r\n * @see https://floating-ui.com/docs/shift\r\n */\r\nconst shift = function (options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  return {\r\n    name: 'shift',\r\n    options,\r\n    async fn(state) {\r\n      const {\r\n        x,\r\n        y,\r\n        placement\r\n      } = state;\r\n      const {\r\n        mainAxis: checkMainAxis = true,\r\n        crossAxis: checkCrossAxis = false,\r\n        limiter = {\r\n          fn: _ref => {\r\n            let {\r\n              x,\r\n              y\r\n            } = _ref;\r\n            return {\r\n              x,\r\n              y\r\n            };\r\n          }\r\n        },\r\n        ...detectOverflowOptions\r\n      } = evaluate(options, state);\r\n      const coords = {\r\n        x,\r\n        y\r\n      };\r\n      const overflow = await detectOverflow(state, detectOverflowOptions);\r\n      const crossAxis = getSideAxis(getSide(placement));\r\n      const mainAxis = getOppositeAxis(crossAxis);\r\n      let mainAxisCoord = coords[mainAxis];\r\n      let crossAxisCoord = coords[crossAxis];\r\n      if (checkMainAxis) {\r\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\r\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\r\n        const min = mainAxisCoord + overflow[minSide];\r\n        const max = mainAxisCoord - overflow[maxSide];\r\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\r\n      }\r\n      if (checkCrossAxis) {\r\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\r\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\r\n        const min = crossAxisCoord + overflow[minSide];\r\n        const max = crossAxisCoord - overflow[maxSide];\r\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\r\n      }\r\n      const limitedCoords = limiter.fn({\r\n        ...state,\r\n        [mainAxis]: mainAxisCoord,\r\n        [crossAxis]: crossAxisCoord\r\n      });\r\n      return {\r\n        ...limitedCoords,\r\n        data: {\r\n          x: limitedCoords.x - x,\r\n          y: limitedCoords.y - y,\r\n          enabled: {\r\n            [mainAxis]: checkMainAxis,\r\n            [crossAxis]: checkCrossAxis\r\n          }\r\n        }\r\n      };\r\n    }\r\n  };\r\n};\r\n/**\r\n * Built-in `limiter` that will stop `shift()` at a certain point.\r\n */\r\nconst limitShift = function (options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  return {\r\n    options,\r\n    fn(state) {\r\n      const {\r\n        x,\r\n        y,\r\n        placement,\r\n        rects,\r\n        middlewareData\r\n      } = state;\r\n      const {\r\n        offset = 0,\r\n        mainAxis: checkMainAxis = true,\r\n        crossAxis: checkCrossAxis = true\r\n      } = evaluate(options, state);\r\n      const coords = {\r\n        x,\r\n        y\r\n      };\r\n      const crossAxis = getSideAxis(placement);\r\n      const mainAxis = getOppositeAxis(crossAxis);\r\n      let mainAxisCoord = coords[mainAxis];\r\n      let crossAxisCoord = coords[crossAxis];\r\n      const rawOffset = evaluate(offset, state);\r\n      const computedOffset = typeof rawOffset === 'number' ? {\r\n        mainAxis: rawOffset,\r\n        crossAxis: 0\r\n      } : {\r\n        mainAxis: 0,\r\n        crossAxis: 0,\r\n        ...rawOffset\r\n      };\r\n      if (checkMainAxis) {\r\n        const len = mainAxis === 'y' ? 'height' : 'width';\r\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\r\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\r\n        if (mainAxisCoord < limitMin) {\r\n          mainAxisCoord = limitMin;\r\n        } else if (mainAxisCoord > limitMax) {\r\n          mainAxisCoord = limitMax;\r\n        }\r\n      }\r\n      if (checkCrossAxis) {\r\n        var _middlewareData$offse, _middlewareData$offse2;\r\n        const len = mainAxis === 'y' ? 'width' : 'height';\r\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\r\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\r\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\r\n        if (crossAxisCoord < limitMin) {\r\n          crossAxisCoord = limitMin;\r\n        } else if (crossAxisCoord > limitMax) {\r\n          crossAxisCoord = limitMax;\r\n        }\r\n      }\r\n      return {\r\n        [mainAxis]: mainAxisCoord,\r\n        [crossAxis]: crossAxisCoord\r\n      };\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Provides data that allows you to change the size of the floating element —\r\n * for instance, prevent it from overflowing the clipping boundary or match the\r\n * width of the reference element.\r\n * @see https://floating-ui.com/docs/size\r\n */\r\nconst size = function (options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  return {\r\n    name: 'size',\r\n    options,\r\n    async fn(state) {\r\n      var _state$middlewareData, _state$middlewareData2;\r\n      const {\r\n        placement,\r\n        rects,\r\n        platform,\r\n        elements\r\n      } = state;\r\n      const {\r\n        apply = () => {},\r\n        ...detectOverflowOptions\r\n      } = evaluate(options, state);\r\n      const overflow = await detectOverflow(state, detectOverflowOptions);\r\n      const side = getSide(placement);\r\n      const alignment = getAlignment(placement);\r\n      const isYAxis = getSideAxis(placement) === 'y';\r\n      const {\r\n        width,\r\n        height\r\n      } = rects.floating;\r\n      let heightSide;\r\n      let widthSide;\r\n      if (side === 'top' || side === 'bottom') {\r\n        heightSide = side;\r\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\r\n      } else {\r\n        widthSide = side;\r\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\r\n      }\r\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\r\n      const maximumClippingWidth = width - overflow.left - overflow.right;\r\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\r\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\r\n      const noShift = !state.middlewareData.shift;\r\n      let availableHeight = overflowAvailableHeight;\r\n      let availableWidth = overflowAvailableWidth;\r\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\r\n        availableWidth = maximumClippingWidth;\r\n      }\r\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\r\n        availableHeight = maximumClippingHeight;\r\n      }\r\n      if (noShift && !alignment) {\r\n        const xMin = max(overflow.left, 0);\r\n        const xMax = max(overflow.right, 0);\r\n        const yMin = max(overflow.top, 0);\r\n        const yMax = max(overflow.bottom, 0);\r\n        if (isYAxis) {\r\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\r\n        } else {\r\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\r\n        }\r\n      }\r\n      await apply({\r\n        ...state,\r\n        availableWidth,\r\n        availableHeight\r\n      });\r\n      const nextDimensions = await platform.getDimensions(elements.floating);\r\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\r\n        return {\r\n          reset: {\r\n            rects: true\r\n          }\r\n        };\r\n      }\r\n      return {};\r\n    }\r\n  };\r\n};\r\n\r\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\r\n", "function hasWindow() {\r\n  return typeof window !== 'undefined';\r\n}\r\nfunction getNodeName(node) {\r\n  if (isNode(node)) {\r\n    return (node.nodeName || '').toLowerCase();\r\n  }\r\n  // Mocked nodes in testing environments may not be instances of Node. By\r\n  // returning `#document` an infinite loop won't occur.\r\n  // https://github.com/floating-ui/floating-ui/issues/2317\r\n  return '#document';\r\n}\r\nfunction getWindow(node) {\r\n  var _node$ownerDocument;\r\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\r\n}\r\nfunction getDocumentElement(node) {\r\n  var _ref;\r\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\r\n}\r\nfunction isNode(value) {\r\n  if (!hasWindow()) {\r\n    return false;\r\n  }\r\n  return value instanceof Node || value instanceof getWindow(value).Node;\r\n}\r\nfunction isElement(value) {\r\n  if (!hasWindow()) {\r\n    return false;\r\n  }\r\n  return value instanceof Element || value instanceof getWindow(value).Element;\r\n}\r\nfunction isHTMLElement(value) {\r\n  if (!hasWindow()) {\r\n    return false;\r\n  }\r\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\r\n}\r\nfunction isShadowRoot(value) {\r\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\r\n    return false;\r\n  }\r\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\r\n}\r\nfunction isOverflowElement(element) {\r\n  const {\r\n    overflow,\r\n    overflowX,\r\n    overflowY,\r\n    display\r\n  } = getComputedStyle(element);\r\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\r\n}\r\nfunction isTableElement(element) {\r\n  return ['table', 'td', 'th'].includes(getNodeName(element));\r\n}\r\nfunction isTopLayer(element) {\r\n  return [':popover-open', ':modal'].some(selector => {\r\n    try {\r\n      return element.matches(selector);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  });\r\n}\r\nfunction isContainingBlock(elementOrCss) {\r\n  const webkit = isWebKit();\r\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\r\n\r\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\r\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\r\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\r\n}\r\nfunction getContainingBlock(element) {\r\n  let currentNode = getParentNode(element);\r\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\r\n    if (isContainingBlock(currentNode)) {\r\n      return currentNode;\r\n    } else if (isTopLayer(currentNode)) {\r\n      return null;\r\n    }\r\n    currentNode = getParentNode(currentNode);\r\n  }\r\n  return null;\r\n}\r\nfunction isWebKit() {\r\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\r\n  return CSS.supports('-webkit-backdrop-filter', 'none');\r\n}\r\nfunction isLastTraversableNode(node) {\r\n  return ['html', 'body', '#document'].includes(getNodeName(node));\r\n}\r\nfunction getComputedStyle(element) {\r\n  return getWindow(element).getComputedStyle(element);\r\n}\r\nfunction getNodeScroll(element) {\r\n  if (isElement(element)) {\r\n    return {\r\n      scrollLeft: element.scrollLeft,\r\n      scrollTop: element.scrollTop\r\n    };\r\n  }\r\n  return {\r\n    scrollLeft: element.scrollX,\r\n    scrollTop: element.scrollY\r\n  };\r\n}\r\nfunction getParentNode(node) {\r\n  if (getNodeName(node) === 'html') {\r\n    return node;\r\n  }\r\n  const result =\r\n  // Step into the shadow DOM of the parent of a slotted node.\r\n  node.assignedSlot ||\r\n  // DOM Element detected.\r\n  node.parentNode ||\r\n  // ShadowRoot detected.\r\n  isShadowRoot(node) && node.host ||\r\n  // Fallback.\r\n  getDocumentElement(node);\r\n  return isShadowRoot(result) ? result.host : result;\r\n}\r\nfunction getNearestOverflowAncestor(node) {\r\n  const parentNode = getParentNode(node);\r\n  if (isLastTraversableNode(parentNode)) {\r\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\r\n  }\r\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\r\n    return parentNode;\r\n  }\r\n  return getNearestOverflowAncestor(parentNode);\r\n}\r\nfunction getOverflowAncestors(node, list, traverseIframes) {\r\n  var _node$ownerDocument2;\r\n  if (list === void 0) {\r\n    list = [];\r\n  }\r\n  if (traverseIframes === void 0) {\r\n    traverseIframes = true;\r\n  }\r\n  const scrollableAncestor = getNearestOverflowAncestor(node);\r\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\r\n  const win = getWindow(scrollableAncestor);\r\n  if (isBody) {\r\n    const frameElement = getFrameElement(win);\r\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\r\n  }\r\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\r\n}\r\nfunction getFrameElement(win) {\r\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\r\n}\r\n\r\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\r\n", "import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\r\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\r\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\r\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\r\n\r\nfunction getCssDimensions(element) {\r\n  const css = getComputedStyle(element);\r\n  // In testing environments, the `width` and `height` properties are empty\r\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\r\n  let width = parseFloat(css.width) || 0;\r\n  let height = parseFloat(css.height) || 0;\r\n  const hasOffset = isHTMLElement(element);\r\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\r\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\r\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\r\n  if (shouldFallback) {\r\n    width = offsetWidth;\r\n    height = offsetHeight;\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    $: shouldFallback\r\n  };\r\n}\r\n\r\nfunction unwrapElement(element) {\r\n  return !isElement(element) ? element.contextElement : element;\r\n}\r\n\r\nfunction getScale(element) {\r\n  const domElement = unwrapElement(element);\r\n  if (!isHTMLElement(domElement)) {\r\n    return createCoords(1);\r\n  }\r\n  const rect = domElement.getBoundingClientRect();\r\n  const {\r\n    width,\r\n    height,\r\n    $\r\n  } = getCssDimensions(domElement);\r\n  let x = ($ ? round(rect.width) : rect.width) / width;\r\n  let y = ($ ? round(rect.height) : rect.height) / height;\r\n\r\n  // 0, NaN, or Infinity should always fallback to 1.\r\n\r\n  if (!x || !Number.isFinite(x)) {\r\n    x = 1;\r\n  }\r\n  if (!y || !Number.isFinite(y)) {\r\n    y = 1;\r\n  }\r\n  return {\r\n    x,\r\n    y\r\n  };\r\n}\r\n\r\nconst noOffsets = /*#__PURE__*/createCoords(0);\r\nfunction getVisualOffsets(element) {\r\n  const win = getWindow(element);\r\n  if (!isWebKit() || !win.visualViewport) {\r\n    return noOffsets;\r\n  }\r\n  return {\r\n    x: win.visualViewport.offsetLeft,\r\n    y: win.visualViewport.offsetTop\r\n  };\r\n}\r\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\r\n  if (isFixed === void 0) {\r\n    isFixed = false;\r\n  }\r\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\r\n    return false;\r\n  }\r\n  return isFixed;\r\n}\r\n\r\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\r\n  if (includeScale === void 0) {\r\n    includeScale = false;\r\n  }\r\n  if (isFixedStrategy === void 0) {\r\n    isFixedStrategy = false;\r\n  }\r\n  const clientRect = element.getBoundingClientRect();\r\n  const domElement = unwrapElement(element);\r\n  let scale = createCoords(1);\r\n  if (includeScale) {\r\n    if (offsetParent) {\r\n      if (isElement(offsetParent)) {\r\n        scale = getScale(offsetParent);\r\n      }\r\n    } else {\r\n      scale = getScale(element);\r\n    }\r\n  }\r\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\r\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\r\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\r\n  let width = clientRect.width / scale.x;\r\n  let height = clientRect.height / scale.y;\r\n  if (domElement) {\r\n    const win = getWindow(domElement);\r\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\r\n    let currentWin = win;\r\n    let currentIFrame = getFrameElement(currentWin);\r\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\r\n      const iframeScale = getScale(currentIFrame);\r\n      const iframeRect = currentIFrame.getBoundingClientRect();\r\n      const css = getComputedStyle(currentIFrame);\r\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\r\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\r\n      x *= iframeScale.x;\r\n      y *= iframeScale.y;\r\n      width *= iframeScale.x;\r\n      height *= iframeScale.y;\r\n      x += left;\r\n      y += top;\r\n      currentWin = getWindow(currentIFrame);\r\n      currentIFrame = getFrameElement(currentWin);\r\n    }\r\n  }\r\n  return rectToClientRect({\r\n    width,\r\n    height,\r\n    x,\r\n    y\r\n  });\r\n}\r\n\r\n// If <html> has a CSS width greater than the viewport, then this will be\r\n// incorrect for RTL.\r\nfunction getWindowScrollBarX(element, rect) {\r\n  const leftScroll = getNodeScroll(element).scrollLeft;\r\n  if (!rect) {\r\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\r\n  }\r\n  return rect.left + leftScroll;\r\n}\r\n\r\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\r\n  if (ignoreScrollbarX === void 0) {\r\n    ignoreScrollbarX = false;\r\n  }\r\n  const htmlRect = documentElement.getBoundingClientRect();\r\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\r\n  // RTL <body> scrollbar.\r\n  getWindowScrollBarX(documentElement, htmlRect));\r\n  const y = htmlRect.top + scroll.scrollTop;\r\n  return {\r\n    x,\r\n    y\r\n  };\r\n}\r\n\r\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\r\n  let {\r\n    elements,\r\n    rect,\r\n    offsetParent,\r\n    strategy\r\n  } = _ref;\r\n  const isFixed = strategy === 'fixed';\r\n  const documentElement = getDocumentElement(offsetParent);\r\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\r\n  if (offsetParent === documentElement || topLayer && isFixed) {\r\n    return rect;\r\n  }\r\n  let scroll = {\r\n    scrollLeft: 0,\r\n    scrollTop: 0\r\n  };\r\n  let scale = createCoords(1);\r\n  const offsets = createCoords(0);\r\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\r\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\r\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\r\n      scroll = getNodeScroll(offsetParent);\r\n    }\r\n    if (isHTMLElement(offsetParent)) {\r\n      const offsetRect = getBoundingClientRect(offsetParent);\r\n      scale = getScale(offsetParent);\r\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\r\n      offsets.y = offsetRect.y + offsetParent.clientTop;\r\n    }\r\n  }\r\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\r\n  return {\r\n    width: rect.width * scale.x,\r\n    height: rect.height * scale.y,\r\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\r\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\r\n  };\r\n}\r\n\r\nfunction getClientRects(element) {\r\n  return Array.from(element.getClientRects());\r\n}\r\n\r\n// Gets the entire size of the scrollable document area, even extending outside\r\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\r\nfunction getDocumentRect(element) {\r\n  const html = getDocumentElement(element);\r\n  const scroll = getNodeScroll(element);\r\n  const body = element.ownerDocument.body;\r\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\r\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\r\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\r\n  const y = -scroll.scrollTop;\r\n  if (getComputedStyle(body).direction === 'rtl') {\r\n    x += max(html.clientWidth, body.clientWidth) - width;\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    x,\r\n    y\r\n  };\r\n}\r\n\r\nfunction getViewportRect(element, strategy) {\r\n  const win = getWindow(element);\r\n  const html = getDocumentElement(element);\r\n  const visualViewport = win.visualViewport;\r\n  let width = html.clientWidth;\r\n  let height = html.clientHeight;\r\n  let x = 0;\r\n  let y = 0;\r\n  if (visualViewport) {\r\n    width = visualViewport.width;\r\n    height = visualViewport.height;\r\n    const visualViewportBased = isWebKit();\r\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\r\n      x = visualViewport.offsetLeft;\r\n      y = visualViewport.offsetTop;\r\n    }\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    x,\r\n    y\r\n  };\r\n}\r\n\r\n// Returns the inner client rect, subtracting scrollbars if present.\r\nfunction getInnerBoundingClientRect(element, strategy) {\r\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\r\n  const top = clientRect.top + element.clientTop;\r\n  const left = clientRect.left + element.clientLeft;\r\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\r\n  const width = element.clientWidth * scale.x;\r\n  const height = element.clientHeight * scale.y;\r\n  const x = left * scale.x;\r\n  const y = top * scale.y;\r\n  return {\r\n    width,\r\n    height,\r\n    x,\r\n    y\r\n  };\r\n}\r\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\r\n  let rect;\r\n  if (clippingAncestor === 'viewport') {\r\n    rect = getViewportRect(element, strategy);\r\n  } else if (clippingAncestor === 'document') {\r\n    rect = getDocumentRect(getDocumentElement(element));\r\n  } else if (isElement(clippingAncestor)) {\r\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\r\n  } else {\r\n    const visualOffsets = getVisualOffsets(element);\r\n    rect = {\r\n      x: clippingAncestor.x - visualOffsets.x,\r\n      y: clippingAncestor.y - visualOffsets.y,\r\n      width: clippingAncestor.width,\r\n      height: clippingAncestor.height\r\n    };\r\n  }\r\n  return rectToClientRect(rect);\r\n}\r\nfunction hasFixedPositionAncestor(element, stopNode) {\r\n  const parentNode = getParentNode(element);\r\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\r\n    return false;\r\n  }\r\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\r\n}\r\n\r\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\r\n// clipping (or hiding) child elements. This returns all clipping ancestors\r\n// of the given element up the tree.\r\nfunction getClippingElementAncestors(element, cache) {\r\n  const cachedResult = cache.get(element);\r\n  if (cachedResult) {\r\n    return cachedResult;\r\n  }\r\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\r\n  let currentContainingBlockComputedStyle = null;\r\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\r\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\r\n\r\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\r\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\r\n    const computedStyle = getComputedStyle(currentNode);\r\n    const currentNodeIsContaining = isContainingBlock(currentNode);\r\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\r\n      currentContainingBlockComputedStyle = null;\r\n    }\r\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\r\n    if (shouldDropCurrentNode) {\r\n      // Drop non-containing blocks.\r\n      result = result.filter(ancestor => ancestor !== currentNode);\r\n    } else {\r\n      // Record last containing block for next iteration.\r\n      currentContainingBlockComputedStyle = computedStyle;\r\n    }\r\n    currentNode = getParentNode(currentNode);\r\n  }\r\n  cache.set(element, result);\r\n  return result;\r\n}\r\n\r\n// Gets the maximum area that the element is visible in due to any number of\r\n// clipping ancestors.\r\nfunction getClippingRect(_ref) {\r\n  let {\r\n    element,\r\n    boundary,\r\n    rootBoundary,\r\n    strategy\r\n  } = _ref;\r\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\r\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\r\n  const firstClippingAncestor = clippingAncestors[0];\r\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\r\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\r\n    accRect.top = max(rect.top, accRect.top);\r\n    accRect.right = min(rect.right, accRect.right);\r\n    accRect.bottom = min(rect.bottom, accRect.bottom);\r\n    accRect.left = max(rect.left, accRect.left);\r\n    return accRect;\r\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\r\n  return {\r\n    width: clippingRect.right - clippingRect.left,\r\n    height: clippingRect.bottom - clippingRect.top,\r\n    x: clippingRect.left,\r\n    y: clippingRect.top\r\n  };\r\n}\r\n\r\nfunction getDimensions(element) {\r\n  const {\r\n    width,\r\n    height\r\n  } = getCssDimensions(element);\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\r\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\r\n  const documentElement = getDocumentElement(offsetParent);\r\n  const isFixed = strategy === 'fixed';\r\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\r\n  let scroll = {\r\n    scrollLeft: 0,\r\n    scrollTop: 0\r\n  };\r\n  const offsets = createCoords(0);\r\n\r\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\r\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\r\n  function setLeftRTLScrollbarOffset() {\r\n    offsets.x = getWindowScrollBarX(documentElement);\r\n  }\r\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\r\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\r\n      scroll = getNodeScroll(offsetParent);\r\n    }\r\n    if (isOffsetParentAnElement) {\r\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\r\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\r\n      offsets.y = offsetRect.y + offsetParent.clientTop;\r\n    } else if (documentElement) {\r\n      setLeftRTLScrollbarOffset();\r\n    }\r\n  }\r\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\r\n    setLeftRTLScrollbarOffset();\r\n  }\r\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\r\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\r\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\r\n  return {\r\n    x,\r\n    y,\r\n    width: rect.width,\r\n    height: rect.height\r\n  };\r\n}\r\n\r\nfunction isStaticPositioned(element) {\r\n  return getComputedStyle(element).position === 'static';\r\n}\r\n\r\nfunction getTrueOffsetParent(element, polyfill) {\r\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\r\n    return null;\r\n  }\r\n  if (polyfill) {\r\n    return polyfill(element);\r\n  }\r\n  let rawOffsetParent = element.offsetParent;\r\n\r\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\r\n  // while Chrome and Safari return the <body> element. The <body> element must\r\n  // be used to perform the correct calculations even if the <html> element is\r\n  // non-static.\r\n  if (getDocumentElement(element) === rawOffsetParent) {\r\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\r\n  }\r\n  return rawOffsetParent;\r\n}\r\n\r\n// Gets the closest ancestor positioned element. Handles some edge cases,\r\n// such as table ancestors and cross browser bugs.\r\nfunction getOffsetParent(element, polyfill) {\r\n  const win = getWindow(element);\r\n  if (isTopLayer(element)) {\r\n    return win;\r\n  }\r\n  if (!isHTMLElement(element)) {\r\n    let svgOffsetParent = getParentNode(element);\r\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\r\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\r\n        return svgOffsetParent;\r\n      }\r\n      svgOffsetParent = getParentNode(svgOffsetParent);\r\n    }\r\n    return win;\r\n  }\r\n  let offsetParent = getTrueOffsetParent(element, polyfill);\r\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\r\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\r\n  }\r\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\r\n    return win;\r\n  }\r\n  return offsetParent || getContainingBlock(element) || win;\r\n}\r\n\r\nconst getElementRects = async function (data) {\r\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\r\n  const getDimensionsFn = this.getDimensions;\r\n  const floatingDimensions = await getDimensionsFn(data.floating);\r\n  return {\r\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\r\n    floating: {\r\n      x: 0,\r\n      y: 0,\r\n      width: floatingDimensions.width,\r\n      height: floatingDimensions.height\r\n    }\r\n  };\r\n};\r\n\r\nfunction isRTL(element) {\r\n  return getComputedStyle(element).direction === 'rtl';\r\n}\r\n\r\nconst platform = {\r\n  convertOffsetParentRelativeRectToViewportRelativeRect,\r\n  getDocumentElement,\r\n  getClippingRect,\r\n  getOffsetParent,\r\n  getElementRects,\r\n  getClientRects,\r\n  getDimensions,\r\n  getScale,\r\n  isElement,\r\n  isRTL\r\n};\r\n\r\nfunction rectsAreEqual(a, b) {\r\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\r\n}\r\n\r\n// https://samthor.au/2021/observing-dom/\r\nfunction observeMove(element, onMove) {\r\n  let io = null;\r\n  let timeoutId;\r\n  const root = getDocumentElement(element);\r\n  function cleanup() {\r\n    var _io;\r\n    clearTimeout(timeoutId);\r\n    (_io = io) == null || _io.disconnect();\r\n    io = null;\r\n  }\r\n  function refresh(skip, threshold) {\r\n    if (skip === void 0) {\r\n      skip = false;\r\n    }\r\n    if (threshold === void 0) {\r\n      threshold = 1;\r\n    }\r\n    cleanup();\r\n    const elementRectForRootMargin = element.getBoundingClientRect();\r\n    const {\r\n      left,\r\n      top,\r\n      width,\r\n      height\r\n    } = elementRectForRootMargin;\r\n    if (!skip) {\r\n      onMove();\r\n    }\r\n    if (!width || !height) {\r\n      return;\r\n    }\r\n    const insetTop = floor(top);\r\n    const insetRight = floor(root.clientWidth - (left + width));\r\n    const insetBottom = floor(root.clientHeight - (top + height));\r\n    const insetLeft = floor(left);\r\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\r\n    const options = {\r\n      rootMargin,\r\n      threshold: max(0, min(1, threshold)) || 1\r\n    };\r\n    let isFirstUpdate = true;\r\n    function handleObserve(entries) {\r\n      const ratio = entries[0].intersectionRatio;\r\n      if (ratio !== threshold) {\r\n        if (!isFirstUpdate) {\r\n          return refresh();\r\n        }\r\n        if (!ratio) {\r\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\r\n          // to prevent an infinite loop of updates.\r\n          timeoutId = setTimeout(() => {\r\n            refresh(false, 1e-7);\r\n          }, 1000);\r\n        } else {\r\n          refresh(false, ratio);\r\n        }\r\n      }\r\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\r\n        // It's possible that even though the ratio is reported as 1, the\r\n        // element is not actually fully within the IntersectionObserver's root\r\n        // area anymore. This can happen under performance constraints. This may\r\n        // be a bug in the browser's IntersectionObserver implementation. To\r\n        // work around this, we compare the element's bounding rect now with\r\n        // what it was at the time we created the IntersectionObserver. If they\r\n        // are not equal then the element moved, so we refresh.\r\n        refresh();\r\n      }\r\n      isFirstUpdate = false;\r\n    }\r\n\r\n    // Older browsers don't support a `document` as the root and will throw an\r\n    // error.\r\n    try {\r\n      io = new IntersectionObserver(handleObserve, {\r\n        ...options,\r\n        // Handle <iframe>s\r\n        root: root.ownerDocument\r\n      });\r\n    } catch (_e) {\r\n      io = new IntersectionObserver(handleObserve, options);\r\n    }\r\n    io.observe(element);\r\n  }\r\n  refresh(true);\r\n  return cleanup;\r\n}\r\n\r\n/**\r\n * Automatically updates the position of the floating element when necessary.\r\n * Should only be called when the floating element is mounted on the DOM or\r\n * visible on the screen.\r\n * @returns cleanup function that should be invoked when the floating element is\r\n * removed from the DOM or hidden from the screen.\r\n * @see https://floating-ui.com/docs/autoUpdate\r\n */\r\nfunction autoUpdate(reference, floating, update, options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  const {\r\n    ancestorScroll = true,\r\n    ancestorResize = true,\r\n    elementResize = typeof ResizeObserver === 'function',\r\n    layoutShift = typeof IntersectionObserver === 'function',\r\n    animationFrame = false\r\n  } = options;\r\n  const referenceEl = unwrapElement(reference);\r\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\r\n  ancestors.forEach(ancestor => {\r\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\r\n      passive: true\r\n    });\r\n    ancestorResize && ancestor.addEventListener('resize', update);\r\n  });\r\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\r\n  let reobserveFrame = -1;\r\n  let resizeObserver = null;\r\n  if (elementResize) {\r\n    resizeObserver = new ResizeObserver(_ref => {\r\n      let [firstEntry] = _ref;\r\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\r\n        // Prevent update loops when using the `size` middleware.\r\n        // https://github.com/floating-ui/floating-ui/issues/1740\r\n        resizeObserver.unobserve(floating);\r\n        cancelAnimationFrame(reobserveFrame);\r\n        reobserveFrame = requestAnimationFrame(() => {\r\n          var _resizeObserver;\r\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\r\n        });\r\n      }\r\n      update();\r\n    });\r\n    if (referenceEl && !animationFrame) {\r\n      resizeObserver.observe(referenceEl);\r\n    }\r\n    resizeObserver.observe(floating);\r\n  }\r\n  let frameId;\r\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\r\n  if (animationFrame) {\r\n    frameLoop();\r\n  }\r\n  function frameLoop() {\r\n    const nextRefRect = getBoundingClientRect(reference);\r\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\r\n      update();\r\n    }\r\n    prevRefRect = nextRefRect;\r\n    frameId = requestAnimationFrame(frameLoop);\r\n  }\r\n  update();\r\n  return () => {\r\n    var _resizeObserver2;\r\n    ancestors.forEach(ancestor => {\r\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\r\n      ancestorResize && ancestor.removeEventListener('resize', update);\r\n    });\r\n    cleanupIo == null || cleanupIo();\r\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\r\n    resizeObserver = null;\r\n    if (animationFrame) {\r\n      cancelAnimationFrame(frameId);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Resolves with an object of overflow side offsets that determine how much the\r\n * element is overflowing a given clipping boundary on each side.\r\n * - positive = overflowing the boundary by that number of pixels\r\n * - negative = how many pixels left before it will overflow\r\n * - 0 = lies flush with the boundary\r\n * @see https://floating-ui.com/docs/detectOverflow\r\n */\r\nconst detectOverflow = detectOverflow$1;\r\n\r\n/**\r\n * Modifies the placement by translating the floating element along the\r\n * specified axes.\r\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\r\n * object may be passed.\r\n * @see https://floating-ui.com/docs/offset\r\n */\r\nconst offset = offset$1;\r\n\r\n/**\r\n * Optimizes the visibility of the floating element by choosing the placement\r\n * that has the most space available automatically, without needing to specify a\r\n * preferred placement. Alternative to `flip`.\r\n * @see https://floating-ui.com/docs/autoPlacement\r\n */\r\nconst autoPlacement = autoPlacement$1;\r\n\r\n/**\r\n * Optimizes the visibility of the floating element by shifting it in order to\r\n * keep it in view when it will overflow the clipping boundary.\r\n * @see https://floating-ui.com/docs/shift\r\n */\r\nconst shift = shift$1;\r\n\r\n/**\r\n * Optimizes the visibility of the floating element by flipping the `placement`\r\n * in order to keep it in view when the preferred placement(s) will overflow the\r\n * clipping boundary. Alternative to `autoPlacement`.\r\n * @see https://floating-ui.com/docs/flip\r\n */\r\nconst flip = flip$1;\r\n\r\n/**\r\n * Provides data that allows you to change the size of the floating element —\r\n * for instance, prevent it from overflowing the clipping boundary or match the\r\n * width of the reference element.\r\n * @see https://floating-ui.com/docs/size\r\n */\r\nconst size = size$1;\r\n\r\n/**\r\n * Provides data to hide the floating element in applicable situations, such as\r\n * when it is not in the same clipping context as the reference element.\r\n * @see https://floating-ui.com/docs/hide\r\n */\r\nconst hide = hide$1;\r\n\r\n/**\r\n * Provides data to position an inner element of the floating element so that it\r\n * appears centered to the reference element.\r\n * @see https://floating-ui.com/docs/arrow\r\n */\r\nconst arrow = arrow$1;\r\n\r\n/**\r\n * Provides improved positioning for inline reference elements that can span\r\n * over multiple lines, such as hyperlinks or range selections.\r\n * @see https://floating-ui.com/docs/inline\r\n */\r\nconst inline = inline$1;\r\n\r\n/**\r\n * Built-in `limiter` that will stop `shift()` at a certain point.\r\n */\r\nconst limitShift = limitShift$1;\r\n\r\n/**\r\n * Computes the `x` and `y` coordinates that will place the floating element\r\n * next to a given reference element.\r\n */\r\nconst computePosition = (reference, floating, options) => {\r\n  // This caches the expensive `getClippingElementAncestors` function so that\r\n  // multiple lifecycle resets re-use the same result. It only lives for a\r\n  // single call. If other functions become expensive, we can add them as well.\r\n  const cache = new Map();\r\n  const mergedOptions = {\r\n    platform,\r\n    ...options\r\n  };\r\n  const platformWithCache = {\r\n    ...mergedOptions.platform,\r\n    _c: cache\r\n  };\r\n  return computePosition$1(reference, floating, {\r\n    ...mergedOptions,\r\n    platform: platformWithCache\r\n  });\r\n};\r\n\r\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\r\n", "import { computePosition, arrow as arrow$2, autoPlacement as autoPlacement$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1 } from '@floating-ui/dom';\r\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\r\nimport * as React from 'react';\r\nimport { useLayoutEffect } from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nvar isClient = typeof document !== 'undefined';\r\n\r\nvar noop = function noop() {};\r\nvar index = isClient ? useLayoutEffect : noop;\r\n\r\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\r\n// functions\r\nfunction deepEqual(a, b) {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (typeof a !== typeof b) {\r\n    return false;\r\n  }\r\n  if (typeof a === 'function' && a.toString() === b.toString()) {\r\n    return true;\r\n  }\r\n  let length;\r\n  let i;\r\n  let keys;\r\n  if (a && b && typeof a === 'object') {\r\n    if (Array.isArray(a)) {\r\n      length = a.length;\r\n      if (length !== b.length) return false;\r\n      for (i = length; i-- !== 0;) {\r\n        if (!deepEqual(a[i], b[i])) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    keys = Object.keys(a);\r\n    length = keys.length;\r\n    if (length !== Object.keys(b).length) {\r\n      return false;\r\n    }\r\n    for (i = length; i-- !== 0;) {\r\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\r\n        return false;\r\n      }\r\n    }\r\n    for (i = length; i-- !== 0;) {\r\n      const key = keys[i];\r\n      if (key === '_owner' && a.$$typeof) {\r\n        continue;\r\n      }\r\n      if (!deepEqual(a[key], b[key])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  return a !== a && b !== b;\r\n}\r\n\r\nfunction getDPR(element) {\r\n  if (typeof window === 'undefined') {\r\n    return 1;\r\n  }\r\n  const win = element.ownerDocument.defaultView || window;\r\n  return win.devicePixelRatio || 1;\r\n}\r\n\r\nfunction roundByDPR(element, value) {\r\n  const dpr = getDPR(element);\r\n  return Math.round(value * dpr) / dpr;\r\n}\r\n\r\nfunction useLatestRef(value) {\r\n  const ref = React.useRef(value);\r\n  index(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref;\r\n}\r\n\r\n/**\r\n * Provides data to position a floating element.\r\n * @see https://floating-ui.com/docs/useFloating\r\n */\r\nfunction useFloating(options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n  const {\r\n    placement = 'bottom',\r\n    strategy = 'absolute',\r\n    middleware = [],\r\n    platform,\r\n    elements: {\r\n      reference: externalReference,\r\n      floating: externalFloating\r\n    } = {},\r\n    transform = true,\r\n    whileElementsMounted,\r\n    open\r\n  } = options;\r\n  const [data, setData] = React.useState({\r\n    x: 0,\r\n    y: 0,\r\n    strategy,\r\n    placement,\r\n    middlewareData: {},\r\n    isPositioned: false\r\n  });\r\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\r\n  if (!deepEqual(latestMiddleware, middleware)) {\r\n    setLatestMiddleware(middleware);\r\n  }\r\n  const [_reference, _setReference] = React.useState(null);\r\n  const [_floating, _setFloating] = React.useState(null);\r\n  const setReference = React.useCallback(node => {\r\n    if (node !== referenceRef.current) {\r\n      referenceRef.current = node;\r\n      _setReference(node);\r\n    }\r\n  }, []);\r\n  const setFloating = React.useCallback(node => {\r\n    if (node !== floatingRef.current) {\r\n      floatingRef.current = node;\r\n      _setFloating(node);\r\n    }\r\n  }, []);\r\n  const referenceEl = externalReference || _reference;\r\n  const floatingEl = externalFloating || _floating;\r\n  const referenceRef = React.useRef(null);\r\n  const floatingRef = React.useRef(null);\r\n  const dataRef = React.useRef(data);\r\n  const hasWhileElementsMounted = whileElementsMounted != null;\r\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\r\n  const platformRef = useLatestRef(platform);\r\n  const openRef = useLatestRef(open);\r\n  const update = React.useCallback(() => {\r\n    if (!referenceRef.current || !floatingRef.current) {\r\n      return;\r\n    }\r\n    const config = {\r\n      placement,\r\n      strategy,\r\n      middleware: latestMiddleware\r\n    };\r\n    if (platformRef.current) {\r\n      config.platform = platformRef.current;\r\n    }\r\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\r\n      const fullData = {\r\n        ...data,\r\n        // The floating element's position may be recomputed while it's closed\r\n        // but still mounted (such as when transitioning out). To ensure\r\n        // `isPositioned` will be `false` initially on the next open, avoid\r\n        // setting it to `true` when `open === false` (must be specified).\r\n        isPositioned: openRef.current !== false\r\n      };\r\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\r\n        dataRef.current = fullData;\r\n        ReactDOM.flushSync(() => {\r\n          setData(fullData);\r\n        });\r\n      }\r\n    });\r\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\r\n  index(() => {\r\n    if (open === false && dataRef.current.isPositioned) {\r\n      dataRef.current.isPositioned = false;\r\n      setData(data => ({\r\n        ...data,\r\n        isPositioned: false\r\n      }));\r\n    }\r\n  }, [open]);\r\n  const isMountedRef = React.useRef(false);\r\n  index(() => {\r\n    isMountedRef.current = true;\r\n    return () => {\r\n      isMountedRef.current = false;\r\n    };\r\n  }, []);\r\n  index(() => {\r\n    if (referenceEl) referenceRef.current = referenceEl;\r\n    if (floatingEl) floatingRef.current = floatingEl;\r\n    if (referenceEl && floatingEl) {\r\n      if (whileElementsMountedRef.current) {\r\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\r\n      }\r\n      update();\r\n    }\r\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\r\n  const refs = React.useMemo(() => ({\r\n    reference: referenceRef,\r\n    floating: floatingRef,\r\n    setReference,\r\n    setFloating\r\n  }), [setReference, setFloating]);\r\n  const elements = React.useMemo(() => ({\r\n    reference: referenceEl,\r\n    floating: floatingEl\r\n  }), [referenceEl, floatingEl]);\r\n  const floatingStyles = React.useMemo(() => {\r\n    const initialStyles = {\r\n      position: strategy,\r\n      left: 0,\r\n      top: 0\r\n    };\r\n    if (!elements.floating) {\r\n      return initialStyles;\r\n    }\r\n    const x = roundByDPR(elements.floating, data.x);\r\n    const y = roundByDPR(elements.floating, data.y);\r\n    if (transform) {\r\n      return {\r\n        ...initialStyles,\r\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\r\n        ...(getDPR(elements.floating) >= 1.5 && {\r\n          willChange: 'transform'\r\n        })\r\n      };\r\n    }\r\n    return {\r\n      position: strategy,\r\n      left: x,\r\n      top: y\r\n    };\r\n  }, [strategy, transform, elements.floating, data.x, data.y]);\r\n  return React.useMemo(() => ({\r\n    ...data,\r\n    update,\r\n    refs,\r\n    elements,\r\n    floatingStyles\r\n  }), [data, update, refs, elements, floatingStyles]);\r\n}\r\n\r\n/**\r\n * Provides data to position an inner element of the floating element so that it\r\n * appears centered to the reference element.\r\n * This wraps the core `arrow` middleware to allow React refs as the element.\r\n * @see https://floating-ui.com/docs/arrow\r\n */\r\nconst arrow$1 = options => {\r\n  function isRef(value) {\r\n    return {}.hasOwnProperty.call(value, 'current');\r\n  }\r\n  return {\r\n    name: 'arrow',\r\n    options,\r\n    fn(state) {\r\n      const {\r\n        element,\r\n        padding\r\n      } = typeof options === 'function' ? options(state) : options;\r\n      if (element && isRef(element)) {\r\n        if (element.current != null) {\r\n          return arrow$2({\r\n            element: element.current,\r\n            padding\r\n          }).fn(state);\r\n        }\r\n        return {};\r\n      }\r\n      if (element) {\r\n        return arrow$2({\r\n          element,\r\n          padding\r\n        }).fn(state);\r\n      }\r\n      return {};\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * Modifies the placement by translating the floating element along the\r\n * specified axes.\r\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\r\n * object may be passed.\r\n * @see https://floating-ui.com/docs/offset\r\n */\r\nconst offset = (options, deps) => ({\r\n  ...offset$1(options),\r\n  options: [options, deps]\r\n});\r\n\r\n/**\r\n * Optimizes the visibility of the floating element by shifting it in order to\r\n * keep it in view when it will overflow the clipping boundary.\r\n * @see https://floating-ui.com/docs/shift\r\n */\r\nconst shift = (options, deps) => ({\r\n  ...shift$1(options),\r\n  options: [options, deps]\r\n});\r\n\r\n/**\r\n * Built-in `limiter` that will stop `shift()` at a certain point.\r\n */\r\nconst limitShift = (options, deps) => ({\r\n  ...limitShift$1(options),\r\n  options: [options, deps]\r\n});\r\n\r\n/**\r\n * Optimizes the visibility of the floating element by flipping the `placement`\r\n * in order to keep it in view when the preferred placement(s) will overflow the\r\n * clipping boundary. Alternative to `autoPlacement`.\r\n * @see https://floating-ui.com/docs/flip\r\n */\r\nconst flip = (options, deps) => ({\r\n  ...flip$1(options),\r\n  options: [options, deps]\r\n});\r\n\r\n/**\r\n * Provides data that allows you to change the size of the floating element —\r\n * for instance, prevent it from overflowing the clipping boundary or match the\r\n * width of the reference element.\r\n * @see https://floating-ui.com/docs/size\r\n */\r\nconst size = (options, deps) => ({\r\n  ...size$1(options),\r\n  options: [options, deps]\r\n});\r\n\r\n/**\r\n * Optimizes the visibility of the floating element by choosing the placement\r\n * that has the most space available automatically, without needing to specify a\r\n * preferred placement. Alternative to `flip`.\r\n * @see https://floating-ui.com/docs/autoPlacement\r\n */\r\nconst autoPlacement = (options, deps) => ({\r\n  ...autoPlacement$1(options),\r\n  options: [options, deps]\r\n});\r\n\r\n/**\r\n * Provides data to hide the floating element in applicable situations, such as\r\n * when it is not in the same clipping context as the reference element.\r\n * @see https://floating-ui.com/docs/hide\r\n */\r\nconst hide = (options, deps) => ({\r\n  ...hide$1(options),\r\n  options: [options, deps]\r\n});\r\n\r\n/**\r\n * Provides improved positioning for inline reference elements that can span\r\n * over multiple lines, such as hyperlinks or range selections.\r\n * @see https://floating-ui.com/docs/inline\r\n */\r\nconst inline = (options, deps) => ({\r\n  ...inline$1(options),\r\n  options: [options, deps]\r\n});\r\n\r\n/**\r\n * Provides data to position an inner element of the floating element so that it\r\n * appears centered to the reference element.\r\n * This wraps the core `arrow` middleware to allow React refs as the element.\r\n * @see https://floating-ui.com/docs/arrow\r\n */\r\nconst arrow = (options, deps) => ({\r\n  ...arrow$1(options),\r\n  options: [options, deps]\r\n});\r\n\r\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\r\n"],
  "mappings": ";;;;;;;;;;;AAAe,SAAR,UAA2B,MAAM;AACtC,MAAI,QAAQ,MAAM;AAChB,WAAO;AAAA,EACT;AAEA,MAAI,KAAK,SAAS,MAAM,mBAAmB;AACzC,QAAI,gBAAgB,KAAK;AACzB,WAAO,gBAAgB,cAAc,eAAe,SAAS;AAAA,EAC/D;AAEA,SAAO;AACT;;;ACTA,SAAS,UAAU,MAAM;AACvB,MAAI,aAAa,UAAU,IAAI,EAAE;AACjC,SAAO,gBAAgB,cAAc,gBAAgB;AACvD;AAEA,SAAS,cAAc,MAAM;AAC3B,MAAI,aAAa,UAAU,IAAI,EAAE;AACjC,SAAO,gBAAgB,cAAc,gBAAgB;AACvD;AAEA,SAAS,aAAa,MAAM;AAE1B,MAAI,OAAO,eAAe,aAAa;AACrC,WAAO;AAAA,EACT;AAEA,MAAI,aAAa,UAAU,IAAI,EAAE;AACjC,SAAO,gBAAgB,cAAc,gBAAgB;AACvD;;;ACpBO,IAAI,MAAM,KAAK;AACf,IAAI,MAAM,KAAK;AACf,IAAI,QAAQ,KAAK;;;ACFT,SAAR,cAA+B;AACpC,MAAI,SAAS,UAAU;AAEvB,MAAI,UAAU,QAAQ,OAAO,UAAU,MAAM,QAAQ,OAAO,MAAM,GAAG;AACnE,WAAO,OAAO,OAAO,IAAI,SAAU,MAAM;AACvC,aAAO,KAAK,QAAQ,MAAM,KAAK;AAAA,IACjC,CAAC,EAAE,KAAK,GAAG;AAAA,EACb;AAEA,SAAO,UAAU;AACnB;;;ACTe,SAAR,mBAAoC;AACzC,SAAO,CAAC,iCAAiC,KAAK,YAAY,CAAC;AAC7D;;;ACCe,SAAR,sBAAuC,SAAS,cAAc,iBAAiB;AACpF,MAAI,iBAAiB,QAAQ;AAC3B,mBAAe;AAAA,EACjB;AAEA,MAAI,oBAAoB,QAAQ;AAC9B,sBAAkB;AAAA,EACpB;AAEA,MAAI,aAAa,QAAQ,sBAAsB;AAC/C,MAAI,SAAS;AACb,MAAI,SAAS;AAEb,MAAI,gBAAgB,cAAc,OAAO,GAAG;AAC1C,aAAS,QAAQ,cAAc,IAAI,MAAM,WAAW,KAAK,IAAI,QAAQ,eAAe,IAAI;AACxF,aAAS,QAAQ,eAAe,IAAI,MAAM,WAAW,MAAM,IAAI,QAAQ,gBAAgB,IAAI;AAAA,EAC7F;AAEA,MAAI,OAAO,UAAU,OAAO,IAAI,UAAU,OAAO,IAAI,QACjD,iBAAiB,KAAK;AAE1B,MAAI,mBAAmB,CAAC,iBAAiB,KAAK;AAC9C,MAAI,KAAK,WAAW,QAAQ,oBAAoB,iBAAiB,eAAe,aAAa,MAAM;AACnG,MAAI,KAAK,WAAW,OAAO,oBAAoB,iBAAiB,eAAe,YAAY,MAAM;AACjG,MAAI,QAAQ,WAAW,QAAQ;AAC/B,MAAI,SAAS,WAAW,SAAS;AACjC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL,OAAO,IAAI;AAAA,IACX,QAAQ,IAAI;AAAA,IACZ,MAAM;AAAA,IACN;AAAA,IACA;AAAA,EACF;AACF;;;ACvCe,SAAR,gBAAiC,MAAM;AAC5C,MAAI,MAAM,UAAU,IAAI;AACxB,MAAI,aAAa,IAAI;AACrB,MAAI,YAAY,IAAI;AACpB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;;;ACTe,SAAR,qBAAsC,SAAS;AACpD,SAAO;AAAA,IACL,YAAY,QAAQ;AAAA,IACpB,WAAW,QAAQ;AAAA,EACrB;AACF;;;ACDe,SAAR,cAA+B,MAAM;AAC1C,MAAI,SAAS,UAAU,IAAI,KAAK,CAAC,cAAc,IAAI,GAAG;AACpD,WAAO,gBAAgB,IAAI;AAAA,EAC7B,OAAO;AACL,WAAO,qBAAqB,IAAI;AAAA,EAClC;AACF;;;ACVe,SAAR,YAA6B,SAAS;AAC3C,SAAO,WAAW,QAAQ,YAAY,IAAI,YAAY,IAAI;AAC5D;;;ACDe,SAAR,mBAAoC,SAAS;AAElD,WAAS,UAAU,OAAO,IAAI,QAAQ;AAAA;AAAA,IACtC,QAAQ;AAAA,QAAa,OAAO,UAAU;AACxC;;;ACFe,SAAR,oBAAqC,SAAS;AAQnD,SAAO,sBAAsB,mBAAmB,OAAO,CAAC,EAAE,OAAO,gBAAgB,OAAO,EAAE;AAC5F;;;ACXe,SAAR,iBAAkC,SAAS;AAChD,SAAO,UAAU,OAAO,EAAE,iBAAiB,OAAO;AACpD;;;ACFe,SAAR,eAAgC,SAAS;AAE9C,MAAI,oBAAoB,iBAAiB,OAAO,GAC5C,WAAW,kBAAkB,UAC7B,YAAY,kBAAkB,WAC9B,YAAY,kBAAkB;AAElC,SAAO,6BAA6B,KAAK,WAAW,YAAY,SAAS;AAC3E;;;ACAA,SAAS,gBAAgB,SAAS;AAChC,MAAI,OAAO,QAAQ,sBAAsB;AACzC,MAAI,SAAS,MAAM,KAAK,KAAK,IAAI,QAAQ,eAAe;AACxD,MAAI,SAAS,MAAM,KAAK,MAAM,IAAI,QAAQ,gBAAgB;AAC1D,SAAO,WAAW,KAAK,WAAW;AACpC;AAIe,SAAR,iBAAkC,yBAAyB,cAAc,SAAS;AACvF,MAAI,YAAY,QAAQ;AACtB,cAAU;AAAA,EACZ;AAEA,MAAI,0BAA0B,cAAc,YAAY;AACxD,MAAI,uBAAuB,cAAc,YAAY,KAAK,gBAAgB,YAAY;AACtF,MAAI,kBAAkB,mBAAmB,YAAY;AACrD,MAAI,OAAO,sBAAsB,yBAAyB,sBAAsB,OAAO;AACvF,MAAI,SAAS;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AACA,MAAI,UAAU;AAAA,IACZ,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AAEA,MAAI,2BAA2B,CAAC,2BAA2B,CAAC,SAAS;AACnE,QAAI,YAAY,YAAY,MAAM;AAAA,IAClC,eAAe,eAAe,GAAG;AAC/B,eAAS,cAAc,YAAY;AAAA,IACrC;AAEA,QAAI,cAAc,YAAY,GAAG;AAC/B,gBAAU,sBAAsB,cAAc,IAAI;AAClD,cAAQ,KAAK,aAAa;AAC1B,cAAQ,KAAK,aAAa;AAAA,IAC5B,WAAW,iBAAiB;AAC1B,cAAQ,IAAI,oBAAoB,eAAe;AAAA,IACjD;AAAA,EACF;AAEA,SAAO;AAAA,IACL,GAAG,KAAK,OAAO,OAAO,aAAa,QAAQ;AAAA,IAC3C,GAAG,KAAK,MAAM,OAAO,YAAY,QAAQ;AAAA,IACzC,OAAO,KAAK;AAAA,IACZ,QAAQ,KAAK;AAAA,EACf;AACF;;;ACtDe,SAAR,cAA+B,SAAS;AAC7C,MAAI,aAAa,sBAAsB,OAAO;AAG9C,MAAI,QAAQ,QAAQ;AACpB,MAAI,SAAS,QAAQ;AAErB,MAAI,KAAK,IAAI,WAAW,QAAQ,KAAK,KAAK,GAAG;AAC3C,YAAQ,WAAW;AAAA,EACrB;AAEA,MAAI,KAAK,IAAI,WAAW,SAAS,MAAM,KAAK,GAAG;AAC7C,aAAS,WAAW;AAAA,EACtB;AAEA,SAAO;AAAA,IACL,GAAG,QAAQ;AAAA,IACX,GAAG,QAAQ;AAAA,IACX;AAAA,IACA;AAAA,EACF;AACF;;;ACrBe,SAAR,cAA+B,SAAS;AAC7C,MAAI,YAAY,OAAO,MAAM,QAAQ;AACnC,WAAO;AAAA,EACT;AAEA;AAAA;AAAA;AAAA;AAAA,IAGE,QAAQ;AAAA,IACR,QAAQ;AAAA,KACR,aAAa,OAAO,IAAI,QAAQ,OAAO;AAAA;AAAA,IAEvC,mBAAmB,OAAO;AAAA;AAG9B;;;ACde,SAAR,gBAAiC,MAAM;AAC5C,MAAI,CAAC,QAAQ,QAAQ,WAAW,EAAE,QAAQ,YAAY,IAAI,CAAC,KAAK,GAAG;AAEjE,WAAO,KAAK,cAAc;AAAA,EAC5B;AAEA,MAAI,cAAc,IAAI,KAAK,eAAe,IAAI,GAAG;AAC/C,WAAO;AAAA,EACT;AAEA,SAAO,gBAAgB,cAAc,IAAI,CAAC;AAC5C;;;ACJe,SAAR,kBAAmC,SAAS,MAAM;AACvD,MAAI;AAEJ,MAAI,SAAS,QAAQ;AACnB,WAAO,CAAC;AAAA,EACV;AAEA,MAAI,eAAe,gBAAgB,OAAO;AAC1C,MAAI,SAAS,mBAAmB,wBAAwB,QAAQ,kBAAkB,OAAO,SAAS,sBAAsB;AACxH,MAAI,MAAM,UAAU,YAAY;AAChC,MAAI,SAAS,SAAS,CAAC,GAAG,EAAE,OAAO,IAAI,kBAAkB,CAAC,GAAG,eAAe,YAAY,IAAI,eAAe,CAAC,CAAC,IAAI;AACjH,MAAI,cAAc,KAAK,OAAO,MAAM;AACpC,SAAO,SAAS;AAAA;AAAA,IAChB,YAAY,OAAO,kBAAkB,cAAc,MAAM,CAAC,CAAC;AAAA;AAC7D;;;ACxBe,SAAR,eAAgC,SAAS;AAC9C,SAAO,CAAC,SAAS,MAAM,IAAI,EAAE,QAAQ,YAAY,OAAO,CAAC,KAAK;AAChE;;;ACKA,SAAS,oBAAoB,SAAS;AACpC,MAAI,CAAC,cAAc,OAAO;AAAA,EAC1B,iBAAiB,OAAO,EAAE,aAAa,SAAS;AAC9C,WAAO;AAAA,EACT;AAEA,SAAO,QAAQ;AACjB;AAIA,SAAS,mBAAmB,SAAS;AACnC,MAAI,YAAY,WAAW,KAAK,YAAY,CAAC;AAC7C,MAAI,OAAO,WAAW,KAAK,YAAY,CAAC;AAExC,MAAI,QAAQ,cAAc,OAAO,GAAG;AAElC,QAAI,aAAa,iBAAiB,OAAO;AAEzC,QAAI,WAAW,aAAa,SAAS;AACnC,aAAO;AAAA,IACT;AAAA,EACF;AAEA,MAAI,cAAc,cAAc,OAAO;AAEvC,MAAI,aAAa,WAAW,GAAG;AAC7B,kBAAc,YAAY;AAAA,EAC5B;AAEA,SAAO,cAAc,WAAW,KAAK,CAAC,QAAQ,MAAM,EAAE,QAAQ,YAAY,WAAW,CAAC,IAAI,GAAG;AAC3F,QAAI,MAAM,iBAAiB,WAAW;AAItC,QAAI,IAAI,cAAc,UAAU,IAAI,gBAAgB,UAAU,IAAI,YAAY,WAAW,CAAC,aAAa,aAAa,EAAE,QAAQ,IAAI,UAAU,MAAM,MAAM,aAAa,IAAI,eAAe,YAAY,aAAa,IAAI,UAAU,IAAI,WAAW,QAAQ;AACpP,aAAO;AAAA,IACT,OAAO;AACL,oBAAc,YAAY;AAAA,IAC5B;AAAA,EACF;AAEA,SAAO;AACT;AAIe,SAAR,gBAAiC,SAAS;AAC/C,MAAIA,UAAS,UAAU,OAAO;AAC9B,MAAI,eAAe,oBAAoB,OAAO;AAE9C,SAAO,gBAAgB,eAAe,YAAY,KAAK,iBAAiB,YAAY,EAAE,aAAa,UAAU;AAC3G,mBAAe,oBAAoB,YAAY;AAAA,EACjD;AAEA,MAAI,iBAAiB,YAAY,YAAY,MAAM,UAAU,YAAY,YAAY,MAAM,UAAU,iBAAiB,YAAY,EAAE,aAAa,WAAW;AAC1J,WAAOA;AAAA,EACT;AAEA,SAAO,gBAAgB,mBAAmB,OAAO,KAAKA;AACxD;;;ACpEO,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,OAAO;AACX,IAAI,OAAO;AACX,IAAI,iBAAiB,CAAC,KAAK,QAAQ,OAAO,IAAI;AAC9C,IAAI,QAAQ;AACZ,IAAI,MAAM;AACV,IAAI,kBAAkB;AACtB,IAAI,WAAW;AACf,IAAI,SAAS;AACb,IAAI,YAAY;AAChB,IAAI,sBAAmC,eAAe,OAAO,SAAU,KAAK,WAAW;AAC5F,SAAO,IAAI,OAAO,CAAC,YAAY,MAAM,OAAO,YAAY,MAAM,GAAG,CAAC;AACpE,GAAG,CAAC,CAAC;AACE,IAAI,aAA0B,CAAC,EAAE,OAAO,gBAAgB,CAAC,IAAI,CAAC,EAAE,OAAO,SAAU,KAAK,WAAW;AACtG,SAAO,IAAI,OAAO,CAAC,WAAW,YAAY,MAAM,OAAO,YAAY,MAAM,GAAG,CAAC;AAC/E,GAAG,CAAC,CAAC;AAEE,IAAI,aAAa;AACjB,IAAI,OAAO;AACX,IAAI,YAAY;AAEhB,IAAI,aAAa;AACjB,IAAI,OAAO;AACX,IAAI,YAAY;AAEhB,IAAI,cAAc;AAClB,IAAI,QAAQ;AACZ,IAAI,aAAa;AACjB,IAAI,iBAAiB,CAAC,YAAY,MAAM,WAAW,YAAY,MAAM,WAAW,aAAa,OAAO,UAAU;;;AC5BrH,SAAS,MAAM,WAAW;AACxB,MAAI,MAAM,oBAAI,IAAI;AAClB,MAAI,UAAU,oBAAI,IAAI;AACtB,MAAI,SAAS,CAAC;AACd,YAAU,QAAQ,SAAU,UAAU;AACpC,QAAI,IAAI,SAAS,MAAM,QAAQ;AAAA,EACjC,CAAC;AAED,WAAS,KAAK,UAAU;AACtB,YAAQ,IAAI,SAAS,IAAI;AACzB,QAAI,WAAW,CAAC,EAAE,OAAO,SAAS,YAAY,CAAC,GAAG,SAAS,oBAAoB,CAAC,CAAC;AACjF,aAAS,QAAQ,SAAU,KAAK;AAC9B,UAAI,CAAC,QAAQ,IAAI,GAAG,GAAG;AACrB,YAAI,cAAc,IAAI,IAAI,GAAG;AAE7B,YAAI,aAAa;AACf,eAAK,WAAW;AAAA,QAClB;AAAA,MACF;AAAA,IACF,CAAC;AACD,WAAO,KAAK,QAAQ;AAAA,EACtB;AAEA,YAAU,QAAQ,SAAU,UAAU;AACpC,QAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,GAAG;AAE/B,WAAK,QAAQ;AAAA,IACf;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAEe,SAAR,eAAgC,WAAW;AAEhD,MAAI,mBAAmB,MAAM,SAAS;AAEtC,SAAO,eAAe,OAAO,SAAU,KAAK,OAAO;AACjD,WAAO,IAAI,OAAO,iBAAiB,OAAO,SAAU,UAAU;AAC5D,aAAO,SAAS,UAAU;AAAA,IAC5B,CAAC,CAAC;AAAA,EACJ,GAAG,CAAC,CAAC;AACP;;;AC3Ce,SAAR,SAA0BC,KAAI;AACnC,MAAI;AACJ,SAAO,WAAY;AACjB,QAAI,CAAC,SAAS;AACZ,gBAAU,IAAI,QAAQ,SAAU,SAAS;AACvC,gBAAQ,QAAQ,EAAE,KAAK,WAAY;AACjC,oBAAU;AACV,kBAAQA,IAAG,CAAC;AAAA,QACd,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,WAAO;AAAA,EACT;AACF;;;ACde,SAAR,YAA6B,WAAW;AAC7C,MAAI,SAAS,UAAU,OAAO,SAAUC,SAAQ,SAAS;AACvD,QAAI,WAAWA,QAAO,QAAQ,IAAI;AAClC,IAAAA,QAAO,QAAQ,IAAI,IAAI,WAAW,OAAO,OAAO,CAAC,GAAG,UAAU,SAAS;AAAA,MACrE,SAAS,OAAO,OAAO,CAAC,GAAG,SAAS,SAAS,QAAQ,OAAO;AAAA,MAC5D,MAAM,OAAO,OAAO,CAAC,GAAG,SAAS,MAAM,QAAQ,IAAI;AAAA,IACrD,CAAC,IAAI;AACL,WAAOA;AAAA,EACT,GAAG,CAAC,CAAC;AAEL,SAAO,OAAO,KAAK,MAAM,EAAE,IAAI,SAAU,KAAK;AAC5C,WAAO,OAAO,GAAG;AAAA,EACnB,CAAC;AACH;;;ACTe,SAAR,gBAAiC,SAAS,UAAU;AACzD,MAAI,MAAM,UAAU,OAAO;AAC3B,MAAI,OAAO,mBAAmB,OAAO;AACrC,MAAI,iBAAiB,IAAI;AACzB,MAAI,QAAQ,KAAK;AACjB,MAAI,SAAS,KAAK;AAClB,MAAI,IAAI;AACR,MAAI,IAAI;AAER,MAAI,gBAAgB;AAClB,YAAQ,eAAe;AACvB,aAAS,eAAe;AACxB,QAAI,iBAAiB,iBAAiB;AAEtC,QAAI,kBAAkB,CAAC,kBAAkB,aAAa,SAAS;AAC7D,UAAI,eAAe;AACnB,UAAI,eAAe;AAAA,IACrB;AAAA,EACF;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,GAAG,IAAI,oBAAoB,OAAO;AAAA,IAClC;AAAA,EACF;AACF;;;ACvBe,SAAR,gBAAiC,SAAS;AAC/C,MAAI;AAEJ,MAAI,OAAO,mBAAmB,OAAO;AACrC,MAAI,YAAY,gBAAgB,OAAO;AACvC,MAAI,QAAQ,wBAAwB,QAAQ,kBAAkB,OAAO,SAAS,sBAAsB;AACpG,MAAI,QAAQ,IAAI,KAAK,aAAa,KAAK,aAAa,OAAO,KAAK,cAAc,GAAG,OAAO,KAAK,cAAc,CAAC;AAC5G,MAAI,SAAS,IAAI,KAAK,cAAc,KAAK,cAAc,OAAO,KAAK,eAAe,GAAG,OAAO,KAAK,eAAe,CAAC;AACjH,MAAI,IAAI,CAAC,UAAU,aAAa,oBAAoB,OAAO;AAC3D,MAAI,IAAI,CAAC,UAAU;AAEnB,MAAI,iBAAiB,QAAQ,IAAI,EAAE,cAAc,OAAO;AACtD,SAAK,IAAI,KAAK,aAAa,OAAO,KAAK,cAAc,CAAC,IAAI;AAAA,EAC5D;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;;;AC3Be,SAAR,SAA0B,QAAQ,OAAO;AAC9C,MAAI,WAAW,MAAM,eAAe,MAAM,YAAY;AAEtD,MAAI,OAAO,SAAS,KAAK,GAAG;AAC1B,WAAO;AAAA,EACT,WACS,YAAY,aAAa,QAAQ,GAAG;AACzC,QAAI,OAAO;AAEX,OAAG;AACD,UAAI,QAAQ,OAAO,WAAW,IAAI,GAAG;AACnC,eAAO;AAAA,MACT;AAGA,aAAO,KAAK,cAAc,KAAK;AAAA,IACjC,SAAS;AAAA,EACX;AAGF,SAAO;AACT;;;ACtBe,SAAR,iBAAkC,MAAM;AAC7C,SAAO,OAAO,OAAO,CAAC,GAAG,MAAM;AAAA,IAC7B,MAAM,KAAK;AAAA,IACX,KAAK,KAAK;AAAA,IACV,OAAO,KAAK,IAAI,KAAK;AAAA,IACrB,QAAQ,KAAK,IAAI,KAAK;AAAA,EACxB,CAAC;AACH;;;ACQA,SAAS,2BAA2B,SAAS,UAAU;AACrD,MAAI,OAAO,sBAAsB,SAAS,OAAO,aAAa,OAAO;AACrE,OAAK,MAAM,KAAK,MAAM,QAAQ;AAC9B,OAAK,OAAO,KAAK,OAAO,QAAQ;AAChC,OAAK,SAAS,KAAK,MAAM,QAAQ;AACjC,OAAK,QAAQ,KAAK,OAAO,QAAQ;AACjC,OAAK,QAAQ,QAAQ;AACrB,OAAK,SAAS,QAAQ;AACtB,OAAK,IAAI,KAAK;AACd,OAAK,IAAI,KAAK;AACd,SAAO;AACT;AAEA,SAAS,2BAA2B,SAAS,gBAAgB,UAAU;AACrE,SAAO,mBAAmB,WAAW,iBAAiB,gBAAgB,SAAS,QAAQ,CAAC,IAAI,UAAU,cAAc,IAAI,2BAA2B,gBAAgB,QAAQ,IAAI,iBAAiB,gBAAgB,mBAAmB,OAAO,CAAC,CAAC;AAC9O;AAKA,SAAS,mBAAmB,SAAS;AACnC,MAAIC,mBAAkB,kBAAkB,cAAc,OAAO,CAAC;AAC9D,MAAI,oBAAoB,CAAC,YAAY,OAAO,EAAE,QAAQ,iBAAiB,OAAO,EAAE,QAAQ,KAAK;AAC7F,MAAI,iBAAiB,qBAAqB,cAAc,OAAO,IAAI,gBAAgB,OAAO,IAAI;AAE9F,MAAI,CAAC,UAAU,cAAc,GAAG;AAC9B,WAAO,CAAC;AAAA,EACV;AAGA,SAAOA,iBAAgB,OAAO,SAAU,gBAAgB;AACtD,WAAO,UAAU,cAAc,KAAK,SAAS,gBAAgB,cAAc,KAAK,YAAY,cAAc,MAAM;AAAA,EAClH,CAAC;AACH;AAIe,SAAR,gBAAiC,SAAS,UAAU,cAAc,UAAU;AACjF,MAAI,sBAAsB,aAAa,oBAAoB,mBAAmB,OAAO,IAAI,CAAC,EAAE,OAAO,QAAQ;AAC3G,MAAIA,mBAAkB,CAAC,EAAE,OAAO,qBAAqB,CAAC,YAAY,CAAC;AACnE,MAAI,sBAAsBA,iBAAgB,CAAC;AAC3C,MAAI,eAAeA,iBAAgB,OAAO,SAAU,SAAS,gBAAgB;AAC3E,QAAI,OAAO,2BAA2B,SAAS,gBAAgB,QAAQ;AACvE,YAAQ,MAAM,IAAI,KAAK,KAAK,QAAQ,GAAG;AACvC,YAAQ,QAAQ,IAAI,KAAK,OAAO,QAAQ,KAAK;AAC7C,YAAQ,SAAS,IAAI,KAAK,QAAQ,QAAQ,MAAM;AAChD,YAAQ,OAAO,IAAI,KAAK,MAAM,QAAQ,IAAI;AAC1C,WAAO;AAAA,EACT,GAAG,2BAA2B,SAAS,qBAAqB,QAAQ,CAAC;AACrE,eAAa,QAAQ,aAAa,QAAQ,aAAa;AACvD,eAAa,SAAS,aAAa,SAAS,aAAa;AACzD,eAAa,IAAI,aAAa;AAC9B,eAAa,IAAI,aAAa;AAC9B,SAAO;AACT;;;ACpEe,SAAR,iBAAkC,WAAW;AAClD,SAAO,UAAU,MAAM,GAAG,EAAE,CAAC;AAC/B;;;ACHe,SAAR,aAA8B,WAAW;AAC9C,SAAO,UAAU,MAAM,GAAG,EAAE,CAAC;AAC/B;;;ACFe,SAAR,yBAA0C,WAAW;AAC1D,SAAO,CAAC,OAAO,QAAQ,EAAE,QAAQ,SAAS,KAAK,IAAI,MAAM;AAC3D;;;ACEe,SAAR,eAAgC,MAAM;AAC3C,MAAIC,aAAY,KAAK,WACjB,UAAU,KAAK,SACf,YAAY,KAAK;AACrB,MAAI,gBAAgB,YAAY,iBAAiB,SAAS,IAAI;AAC9D,MAAI,YAAY,YAAY,aAAa,SAAS,IAAI;AACtD,MAAI,UAAUA,WAAU,IAAIA,WAAU,QAAQ,IAAI,QAAQ,QAAQ;AAClE,MAAI,UAAUA,WAAU,IAAIA,WAAU,SAAS,IAAI,QAAQ,SAAS;AACpE,MAAI;AAEJ,UAAQ,eAAe;AAAA,IACrB,KAAK;AACH,gBAAU;AAAA,QACR,GAAG;AAAA,QACH,GAAGA,WAAU,IAAI,QAAQ;AAAA,MAC3B;AACA;AAAA,IAEF,KAAK;AACH,gBAAU;AAAA,QACR,GAAG;AAAA,QACH,GAAGA,WAAU,IAAIA,WAAU;AAAA,MAC7B;AACA;AAAA,IAEF,KAAK;AACH,gBAAU;AAAA,QACR,GAAGA,WAAU,IAAIA,WAAU;AAAA,QAC3B,GAAG;AAAA,MACL;AACA;AAAA,IAEF,KAAK;AACH,gBAAU;AAAA,QACR,GAAGA,WAAU,IAAI,QAAQ;AAAA,QACzB,GAAG;AAAA,MACL;AACA;AAAA,IAEF;AACE,gBAAU;AAAA,QACR,GAAGA,WAAU;AAAA,QACb,GAAGA,WAAU;AAAA,MACf;AAAA,EACJ;AAEA,MAAI,WAAW,gBAAgB,yBAAyB,aAAa,IAAI;AAEzE,MAAI,YAAY,MAAM;AACpB,QAAI,MAAM,aAAa,MAAM,WAAW;AAExC,YAAQ,WAAW;AAAA,MACjB,KAAK;AACH,gBAAQ,QAAQ,IAAI,QAAQ,QAAQ,KAAKA,WAAU,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI;AAC7E;AAAA,MAEF,KAAK;AACH,gBAAQ,QAAQ,IAAI,QAAQ,QAAQ,KAAKA,WAAU,GAAG,IAAI,IAAI,QAAQ,GAAG,IAAI;AAC7E;AAAA,MAEF;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;;;ACrEe,SAAR,qBAAsC;AAC3C,SAAO;AAAA,IACL,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,EACR;AACF;;;ACNe,SAAR,mBAAoC,eAAe;AACxD,SAAO,OAAO,OAAO,CAAC,GAAG,mBAAmB,GAAG,aAAa;AAC9D;;;ACHe,SAAR,gBAAiC,OAAO,MAAM;AACnD,SAAO,KAAK,OAAO,SAAU,SAAS,KAAK;AACzC,YAAQ,GAAG,IAAI;AACf,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACP;;;ACKe,SAAR,eAAgC,OAAO,SAAS;AACrD,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AAEA,MAAI,WAAW,SACX,qBAAqB,SAAS,WAC9B,YAAY,uBAAuB,SAAS,MAAM,YAAY,oBAC9D,oBAAoB,SAAS,UAC7B,WAAW,sBAAsB,SAAS,MAAM,WAAW,mBAC3D,oBAAoB,SAAS,UAC7B,WAAW,sBAAsB,SAAS,kBAAkB,mBAC5D,wBAAwB,SAAS,cACjC,eAAe,0BAA0B,SAAS,WAAW,uBAC7D,wBAAwB,SAAS,gBACjC,iBAAiB,0BAA0B,SAAS,SAAS,uBAC7D,uBAAuB,SAAS,aAChC,cAAc,yBAAyB,SAAS,QAAQ,sBACxD,mBAAmB,SAAS,SAC5B,UAAU,qBAAqB,SAAS,IAAI;AAChD,MAAI,gBAAgB,mBAAmB,OAAO,YAAY,WAAW,UAAU,gBAAgB,SAAS,cAAc,CAAC;AACvH,MAAI,aAAa,mBAAmB,SAAS,YAAY;AACzD,MAAI,aAAa,MAAM,MAAM;AAC7B,MAAI,UAAU,MAAM,SAAS,cAAc,aAAa,cAAc;AACtE,MAAI,qBAAqB,gBAAgB,UAAU,OAAO,IAAI,UAAU,QAAQ,kBAAkB,mBAAmB,MAAM,SAAS,MAAM,GAAG,UAAU,cAAc,QAAQ;AAC7K,MAAI,sBAAsB,sBAAsB,MAAM,SAAS,SAAS;AACxE,MAAIC,iBAAgB,eAAe;AAAA,IACjC,WAAW;AAAA,IACX,SAAS;AAAA,IACT,UAAU;AAAA,IACV;AAAA,EACF,CAAC;AACD,MAAI,mBAAmB,iBAAiB,OAAO,OAAO,CAAC,GAAG,YAAYA,cAAa,CAAC;AACpF,MAAI,oBAAoB,mBAAmB,SAAS,mBAAmB;AAGvE,MAAI,kBAAkB;AAAA,IACpB,KAAK,mBAAmB,MAAM,kBAAkB,MAAM,cAAc;AAAA,IACpE,QAAQ,kBAAkB,SAAS,mBAAmB,SAAS,cAAc;AAAA,IAC7E,MAAM,mBAAmB,OAAO,kBAAkB,OAAO,cAAc;AAAA,IACvE,OAAO,kBAAkB,QAAQ,mBAAmB,QAAQ,cAAc;AAAA,EAC5E;AACA,MAAI,aAAa,MAAM,cAAc;AAErC,MAAI,mBAAmB,UAAU,YAAY;AAC3C,QAAIC,UAAS,WAAW,SAAS;AACjC,WAAO,KAAK,eAAe,EAAE,QAAQ,SAAU,KAAK;AAClD,UAAI,WAAW,CAAC,OAAO,MAAM,EAAE,QAAQ,GAAG,KAAK,IAAI,IAAI;AACvD,UAAI,OAAO,CAAC,KAAK,MAAM,EAAE,QAAQ,GAAG,KAAK,IAAI,MAAM;AACnD,sBAAgB,GAAG,KAAKA,QAAO,IAAI,IAAI;AAAA,IACzC,CAAC;AAAA,EACH;AAEA,SAAO;AACT;;;ACvDA,IAAI,kBAAkB;AAAA,EACpB,WAAW;AAAA,EACX,WAAW,CAAC;AAAA,EACZ,UAAU;AACZ;AAEA,SAAS,mBAAmB;AAC1B,WAAS,OAAO,UAAU,QAAQ,OAAO,IAAI,MAAM,IAAI,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AACvF,SAAK,IAAI,IAAI,UAAU,IAAI;AAAA,EAC7B;AAEA,SAAO,CAAC,KAAK,KAAK,SAAU,SAAS;AACnC,WAAO,EAAE,WAAW,OAAO,QAAQ,0BAA0B;AAAA,EAC/D,CAAC;AACH;AAEO,SAAS,gBAAgB,kBAAkB;AAChD,MAAI,qBAAqB,QAAQ;AAC/B,uBAAmB,CAAC;AAAA,EACtB;AAEA,MAAI,oBAAoB,kBACpB,wBAAwB,kBAAkB,kBAC1CC,oBAAmB,0BAA0B,SAAS,CAAC,IAAI,uBAC3D,yBAAyB,kBAAkB,gBAC3C,iBAAiB,2BAA2B,SAAS,kBAAkB;AAC3E,SAAO,SAASC,cAAaC,YAAWC,SAAQ,SAAS;AACvD,QAAI,YAAY,QAAQ;AACtB,gBAAU;AAAA,IACZ;AAEA,QAAI,QAAQ;AAAA,MACV,WAAW;AAAA,MACX,kBAAkB,CAAC;AAAA,MACnB,SAAS,OAAO,OAAO,CAAC,GAAG,iBAAiB,cAAc;AAAA,MAC1D,eAAe,CAAC;AAAA,MAChB,UAAU;AAAA,QACR,WAAWD;AAAA,QACX,QAAQC;AAAA,MACV;AAAA,MACA,YAAY,CAAC;AAAA,MACb,QAAQ,CAAC;AAAA,IACX;AACA,QAAI,mBAAmB,CAAC;AACxB,QAAI,cAAc;AAClB,QAAI,WAAW;AAAA,MACb;AAAA,MACA,YAAY,SAAS,WAAW,kBAAkB;AAChD,YAAIC,WAAU,OAAO,qBAAqB,aAAa,iBAAiB,MAAM,OAAO,IAAI;AACzF,+BAAuB;AACvB,cAAM,UAAU,OAAO,OAAO,CAAC,GAAG,gBAAgB,MAAM,SAASA,QAAO;AACxE,cAAM,gBAAgB;AAAA,UACpB,WAAW,UAAUF,UAAS,IAAI,kBAAkBA,UAAS,IAAIA,WAAU,iBAAiB,kBAAkBA,WAAU,cAAc,IAAI,CAAC;AAAA,UAC3I,QAAQ,kBAAkBC,OAAM;AAAA,QAClC;AAGA,YAAI,mBAAmB,eAAe,YAAY,CAAC,EAAE,OAAOH,mBAAkB,MAAM,QAAQ,SAAS,CAAC,CAAC;AAEvG,cAAM,mBAAmB,iBAAiB,OAAO,SAAU,GAAG;AAC5D,iBAAO,EAAE;AAAA,QACX,CAAC;AACD,2BAAmB;AACnB,eAAO,SAAS,OAAO;AAAA,MACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,aAAa,SAAS,cAAc;AAClC,YAAI,aAAa;AACf;AAAA,QACF;AAEA,YAAI,kBAAkB,MAAM,UACxBE,aAAY,gBAAgB,WAC5BC,UAAS,gBAAgB;AAG7B,YAAI,CAAC,iBAAiBD,YAAWC,OAAM,GAAG;AACxC;AAAA,QACF;AAGA,cAAM,QAAQ;AAAA,UACZ,WAAW,iBAAiBD,YAAW,gBAAgBC,OAAM,GAAG,MAAM,QAAQ,aAAa,OAAO;AAAA,UAClG,QAAQ,cAAcA,OAAM;AAAA,QAC9B;AAMA,cAAM,QAAQ;AACd,cAAM,YAAY,MAAM,QAAQ;AAKhC,cAAM,iBAAiB,QAAQ,SAAU,UAAU;AACjD,iBAAO,MAAM,cAAc,SAAS,IAAI,IAAI,OAAO,OAAO,CAAC,GAAG,SAAS,IAAI;AAAA,QAC7E,CAAC;AAED,iBAASE,SAAQ,GAAGA,SAAQ,MAAM,iBAAiB,QAAQA,UAAS;AAClE,cAAI,MAAM,UAAU,MAAM;AACxB,kBAAM,QAAQ;AACd,YAAAA,SAAQ;AACR;AAAA,UACF;AAEA,cAAI,wBAAwB,MAAM,iBAAiBA,MAAK,GACpDC,MAAK,sBAAsB,IAC3B,yBAAyB,sBAAsB,SAC/C,WAAW,2BAA2B,SAAS,CAAC,IAAI,wBACpD,OAAO,sBAAsB;AAEjC,cAAI,OAAOA,QAAO,YAAY;AAC5B,oBAAQA,IAAG;AAAA,cACT;AAAA,cACA,SAAS;AAAA,cACT;AAAA,cACA;AAAA,YACF,CAAC,KAAK;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAAA;AAAA;AAAA,MAGA,QAAQ,SAAS,WAAY;AAC3B,eAAO,IAAI,QAAQ,SAAU,SAAS;AACpC,mBAAS,YAAY;AACrB,kBAAQ,KAAK;AAAA,QACf,CAAC;AAAA,MACH,CAAC;AAAA,MACD,SAAS,SAAS,UAAU;AAC1B,+BAAuB;AACvB,sBAAc;AAAA,MAChB;AAAA,IACF;AAEA,QAAI,CAAC,iBAAiBJ,YAAWC,OAAM,GAAG;AACxC,aAAO;AAAA,IACT;AAEA,aAAS,WAAW,OAAO,EAAE,KAAK,SAAUI,QAAO;AACjD,UAAI,CAAC,eAAe,QAAQ,eAAe;AACzC,gBAAQ,cAAcA,MAAK;AAAA,MAC7B;AAAA,IACF,CAAC;AAMD,aAAS,qBAAqB;AAC5B,YAAM,iBAAiB,QAAQ,SAAU,MAAM;AAC7C,YAAI,OAAO,KAAK,MACZ,eAAe,KAAK,SACpBH,WAAU,iBAAiB,SAAS,CAAC,IAAI,cACzCI,UAAS,KAAK;AAElB,YAAI,OAAOA,YAAW,YAAY;AAChC,cAAI,YAAYA,QAAO;AAAA,YACrB;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAASJ;AAAA,UACX,CAAC;AAED,cAAI,SAAS,SAASK,UAAS;AAAA,UAAC;AAEhC,2BAAiB,KAAK,aAAa,MAAM;AAAA,QAC3C;AAAA,MACF,CAAC;AAAA,IACH;AAEA,aAAS,yBAAyB;AAChC,uBAAiB,QAAQ,SAAUH,KAAI;AACrC,eAAOA,IAAG;AAAA,MACZ,CAAC;AACD,yBAAmB,CAAC;AAAA,IACtB;AAEA,WAAO;AAAA,EACT;AACF;AACO,IAAI,eAA4B,gBAAgB;;;AClMvD,IAAI,UAAU;AAAA,EACZ,SAAS;AACX;AAEA,SAAS,OAAO,MAAM;AACpB,MAAI,QAAQ,KAAK,OACb,WAAW,KAAK,UAChB,UAAU,KAAK;AACnB,MAAI,kBAAkB,QAAQ,QAC1B,SAAS,oBAAoB,SAAS,OAAO,iBAC7C,kBAAkB,QAAQ,QAC1B,SAAS,oBAAoB,SAAS,OAAO;AACjD,MAAII,UAAS,UAAU,MAAM,SAAS,MAAM;AAC5C,MAAI,gBAAgB,CAAC,EAAE,OAAO,MAAM,cAAc,WAAW,MAAM,cAAc,MAAM;AAEvF,MAAI,QAAQ;AACV,kBAAc,QAAQ,SAAU,cAAc;AAC5C,mBAAa,iBAAiB,UAAU,SAAS,QAAQ,OAAO;AAAA,IAClE,CAAC;AAAA,EACH;AAEA,MAAI,QAAQ;AACV,IAAAA,QAAO,iBAAiB,UAAU,SAAS,QAAQ,OAAO;AAAA,EAC5D;AAEA,SAAO,WAAY;AACjB,QAAI,QAAQ;AACV,oBAAc,QAAQ,SAAU,cAAc;AAC5C,qBAAa,oBAAoB,UAAU,SAAS,QAAQ,OAAO;AAAA,MACrE,CAAC;AAAA,IACH;AAEA,QAAI,QAAQ;AACV,MAAAA,QAAO,oBAAoB,UAAU,SAAS,QAAQ,OAAO;AAAA,IAC/D;AAAA,EACF;AACF;AAGA,IAAO,yBAAQ;AAAA,EACb,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,IAAI,SAAS,KAAK;AAAA,EAAC;AAAA,EACnB;AAAA,EACA,MAAM,CAAC;AACT;;;AC9CA,SAAS,cAAc,MAAM;AAC3B,MAAI,QAAQ,KAAK,OACb,OAAO,KAAK;AAKhB,QAAM,cAAc,IAAI,IAAI,eAAe;AAAA,IACzC,WAAW,MAAM,MAAM;AAAA,IACvB,SAAS,MAAM,MAAM;AAAA,IACrB,UAAU;AAAA,IACV,WAAW,MAAM;AAAA,EACnB,CAAC;AACH;AAGA,IAAO,wBAAQ;AAAA,EACb,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,IAAI;AAAA,EACJ,MAAM,CAAC;AACT;;;ACfA,IAAI,aAAa;AAAA,EACf,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AACR;AAIA,SAAS,kBAAkB,MAAM,KAAK;AACpC,MAAI,IAAI,KAAK,GACT,IAAI,KAAK;AACb,MAAI,MAAM,IAAI,oBAAoB;AAClC,SAAO;AAAA,IACL,GAAG,MAAM,IAAI,GAAG,IAAI,OAAO;AAAA,IAC3B,GAAG,MAAM,IAAI,GAAG,IAAI,OAAO;AAAA,EAC7B;AACF;AAEO,SAAS,YAAY,OAAO;AACjC,MAAI;AAEJ,MAAIC,UAAS,MAAM,QACf,aAAa,MAAM,YACnB,YAAY,MAAM,WAClB,YAAY,MAAM,WAClB,UAAU,MAAM,SAChB,WAAW,MAAM,UACjB,kBAAkB,MAAM,iBACxB,WAAW,MAAM,UACjB,eAAe,MAAM,cACrB,UAAU,MAAM;AACpB,MAAI,aAAa,QAAQ,GACrB,IAAI,eAAe,SAAS,IAAI,YAChC,aAAa,QAAQ,GACrB,IAAI,eAAe,SAAS,IAAI;AAEpC,MAAI,QAAQ,OAAO,iBAAiB,aAAa,aAAa;AAAA,IAC5D;AAAA,IACA;AAAA,EACF,CAAC,IAAI;AAAA,IACH;AAAA,IACA;AAAA,EACF;AAEA,MAAI,MAAM;AACV,MAAI,MAAM;AACV,MAAI,OAAO,QAAQ,eAAe,GAAG;AACrC,MAAI,OAAO,QAAQ,eAAe,GAAG;AACrC,MAAI,QAAQ;AACZ,MAAI,QAAQ;AACZ,MAAI,MAAM;AAEV,MAAI,UAAU;AACZ,QAAI,eAAe,gBAAgBA,OAAM;AACzC,QAAI,aAAa;AACjB,QAAI,YAAY;AAEhB,QAAI,iBAAiB,UAAUA,OAAM,GAAG;AACtC,qBAAe,mBAAmBA,OAAM;AAExC,UAAI,iBAAiB,YAAY,EAAE,aAAa,YAAY,aAAa,YAAY;AACnF,qBAAa;AACb,oBAAY;AAAA,MACd;AAAA,IACF;AAGA,mBAAe;AAEf,QAAI,cAAc,QAAQ,cAAc,QAAQ,cAAc,UAAU,cAAc,KAAK;AACzF,cAAQ;AACR,UAAI,UAAU,WAAW,iBAAiB,OAAO,IAAI,iBAAiB,IAAI,eAAe;AAAA;AAAA,QACzF,aAAa,UAAU;AAAA;AACvB,WAAK,UAAU,WAAW;AAC1B,WAAK,kBAAkB,IAAI;AAAA,IAC7B;AAEA,QAAI,cAAc,SAAS,cAAc,OAAO,cAAc,WAAW,cAAc,KAAK;AAC1F,cAAQ;AACR,UAAI,UAAU,WAAW,iBAAiB,OAAO,IAAI,iBAAiB,IAAI,eAAe;AAAA;AAAA,QACzF,aAAa,SAAS;AAAA;AACtB,WAAK,UAAU,WAAW;AAC1B,WAAK,kBAAkB,IAAI;AAAA,IAC7B;AAAA,EACF;AAEA,MAAI,eAAe,OAAO,OAAO;AAAA,IAC/B;AAAA,EACF,GAAG,YAAY,UAAU;AAEzB,MAAI,QAAQ,iBAAiB,OAAO,kBAAkB;AAAA,IACpD;AAAA,IACA;AAAA,EACF,GAAG,UAAUA,OAAM,CAAC,IAAI;AAAA,IACtB;AAAA,IACA;AAAA,EACF;AAEA,MAAI,MAAM;AACV,MAAI,MAAM;AAEV,MAAI,iBAAiB;AACnB,QAAI;AAEJ,WAAO,OAAO,OAAO,CAAC,GAAG,eAAe,iBAAiB,CAAC,GAAG,eAAe,KAAK,IAAI,OAAO,MAAM,IAAI,eAAe,KAAK,IAAI,OAAO,MAAM,IAAI,eAAe,aAAa,IAAI,oBAAoB,MAAM,IAAI,eAAe,IAAI,SAAS,IAAI,QAAQ,iBAAiB,IAAI,SAAS,IAAI,UAAU,eAAe;AAAA,EAClT;AAEA,SAAO,OAAO,OAAO,CAAC,GAAG,eAAe,kBAAkB,CAAC,GAAG,gBAAgB,KAAK,IAAI,OAAO,IAAI,OAAO,IAAI,gBAAgB,KAAK,IAAI,OAAO,IAAI,OAAO,IAAI,gBAAgB,YAAY,IAAI,gBAAgB;AAC9M;AAEA,SAAS,cAAc,OAAO;AAC5B,MAAI,QAAQ,MAAM,OACd,UAAU,MAAM;AACpB,MAAI,wBAAwB,QAAQ,iBAChC,kBAAkB,0BAA0B,SAAS,OAAO,uBAC5D,oBAAoB,QAAQ,UAC5B,WAAW,sBAAsB,SAAS,OAAO,mBACjD,wBAAwB,QAAQ,cAChC,eAAe,0BAA0B,SAAS,OAAO;AAC7D,MAAI,eAAe;AAAA,IACjB,WAAW,iBAAiB,MAAM,SAAS;AAAA,IAC3C,WAAW,aAAa,MAAM,SAAS;AAAA,IACvC,QAAQ,MAAM,SAAS;AAAA,IACvB,YAAY,MAAM,MAAM;AAAA,IACxB;AAAA,IACA,SAAS,MAAM,QAAQ,aAAa;AAAA,EACtC;AAEA,MAAI,MAAM,cAAc,iBAAiB,MAAM;AAC7C,UAAM,OAAO,SAAS,OAAO,OAAO,CAAC,GAAG,MAAM,OAAO,QAAQ,YAAY,OAAO,OAAO,CAAC,GAAG,cAAc;AAAA,MACvG,SAAS,MAAM,cAAc;AAAA,MAC7B,UAAU,MAAM,QAAQ;AAAA,MACxB;AAAA,MACA;AAAA,IACF,CAAC,CAAC,CAAC;AAAA,EACL;AAEA,MAAI,MAAM,cAAc,SAAS,MAAM;AACrC,UAAM,OAAO,QAAQ,OAAO,OAAO,CAAC,GAAG,MAAM,OAAO,OAAO,YAAY,OAAO,OAAO,CAAC,GAAG,cAAc;AAAA,MACrG,SAAS,MAAM,cAAc;AAAA,MAC7B,UAAU;AAAA,MACV,UAAU;AAAA,MACV;AAAA,IACF,CAAC,CAAC,CAAC;AAAA,EACL;AAEA,QAAM,WAAW,SAAS,OAAO,OAAO,CAAC,GAAG,MAAM,WAAW,QAAQ;AAAA,IACnE,yBAAyB,MAAM;AAAA,EACjC,CAAC;AACH;AAGA,IAAO,wBAAQ;AAAA,EACb,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,IAAI;AAAA,EACJ,MAAM,CAAC;AACT;;;ACpKA,SAAS,YAAY,MAAM;AACzB,MAAI,QAAQ,KAAK;AACjB,SAAO,KAAK,MAAM,QAAQ,EAAE,QAAQ,SAAU,MAAM;AAClD,QAAI,QAAQ,MAAM,OAAO,IAAI,KAAK,CAAC;AACnC,QAAI,aAAa,MAAM,WAAW,IAAI,KAAK,CAAC;AAC5C,QAAI,UAAU,MAAM,SAAS,IAAI;AAEjC,QAAI,CAAC,cAAc,OAAO,KAAK,CAAC,YAAY,OAAO,GAAG;AACpD;AAAA,IACF;AAKA,WAAO,OAAO,QAAQ,OAAO,KAAK;AAClC,WAAO,KAAK,UAAU,EAAE,QAAQ,SAAUC,OAAM;AAC9C,UAAI,QAAQ,WAAWA,KAAI;AAE3B,UAAI,UAAU,OAAO;AACnB,gBAAQ,gBAAgBA,KAAI;AAAA,MAC9B,OAAO;AACL,gBAAQ,aAAaA,OAAM,UAAU,OAAO,KAAK,KAAK;AAAA,MACxD;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;AAEA,SAASC,QAAO,OAAO;AACrB,MAAI,QAAQ,MAAM;AAClB,MAAI,gBAAgB;AAAA,IAClB,QAAQ;AAAA,MACN,UAAU,MAAM,QAAQ;AAAA,MACxB,MAAM;AAAA,MACN,KAAK;AAAA,MACL,QAAQ;AAAA,IACV;AAAA,IACA,OAAO;AAAA,MACL,UAAU;AAAA,IACZ;AAAA,IACA,WAAW,CAAC;AAAA,EACd;AACA,SAAO,OAAO,MAAM,SAAS,OAAO,OAAO,cAAc,MAAM;AAC/D,QAAM,SAAS;AAEf,MAAI,MAAM,SAAS,OAAO;AACxB,WAAO,OAAO,MAAM,SAAS,MAAM,OAAO,cAAc,KAAK;AAAA,EAC/D;AAEA,SAAO,WAAY;AACjB,WAAO,KAAK,MAAM,QAAQ,EAAE,QAAQ,SAAU,MAAM;AAClD,UAAI,UAAU,MAAM,SAAS,IAAI;AACjC,UAAI,aAAa,MAAM,WAAW,IAAI,KAAK,CAAC;AAC5C,UAAI,kBAAkB,OAAO,KAAK,MAAM,OAAO,eAAe,IAAI,IAAI,MAAM,OAAO,IAAI,IAAI,cAAc,IAAI,CAAC;AAE9G,UAAI,QAAQ,gBAAgB,OAAO,SAAUC,QAAO,UAAU;AAC5D,QAAAA,OAAM,QAAQ,IAAI;AAClB,eAAOA;AAAA,MACT,GAAG,CAAC,CAAC;AAEL,UAAI,CAAC,cAAc,OAAO,KAAK,CAAC,YAAY,OAAO,GAAG;AACpD;AAAA,MACF;AAEA,aAAO,OAAO,QAAQ,OAAO,KAAK;AAClC,aAAO,KAAK,UAAU,EAAE,QAAQ,SAAU,WAAW;AACnD,gBAAQ,gBAAgB,SAAS;AAAA,MACnC,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AACF;AAGA,IAAO,sBAAQ;AAAA,EACb,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,IAAI;AAAA,EACJ,QAAQD;AAAA,EACR,UAAU,CAAC,eAAe;AAC5B;;;AChFO,SAAS,wBAAwB,WAAW,OAAOE,SAAQ;AAChE,MAAI,gBAAgB,iBAAiB,SAAS;AAC9C,MAAI,iBAAiB,CAAC,MAAM,GAAG,EAAE,QAAQ,aAAa,KAAK,IAAI,KAAK;AAEpE,MAAI,OAAO,OAAOA,YAAW,aAAaA,QAAO,OAAO,OAAO,CAAC,GAAG,OAAO;AAAA,IACxE;AAAA,EACF,CAAC,CAAC,IAAIA,SACF,WAAW,KAAK,CAAC,GACjB,WAAW,KAAK,CAAC;AAErB,aAAW,YAAY;AACvB,cAAY,YAAY,KAAK;AAC7B,SAAO,CAAC,MAAM,KAAK,EAAE,QAAQ,aAAa,KAAK,IAAI;AAAA,IACjD,GAAG;AAAA,IACH,GAAG;AAAA,EACL,IAAI;AAAA,IACF,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACF;AAEA,SAAS,OAAO,OAAO;AACrB,MAAI,QAAQ,MAAM,OACd,UAAU,MAAM,SAChB,OAAO,MAAM;AACjB,MAAI,kBAAkB,QAAQ,QAC1BA,UAAS,oBAAoB,SAAS,CAAC,GAAG,CAAC,IAAI;AACnD,MAAI,OAAO,WAAW,OAAO,SAAU,KAAK,WAAW;AACrD,QAAI,SAAS,IAAI,wBAAwB,WAAW,MAAM,OAAOA,OAAM;AACvE,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACL,MAAI,wBAAwB,KAAK,MAAM,SAAS,GAC5C,IAAI,sBAAsB,GAC1B,IAAI,sBAAsB;AAE9B,MAAI,MAAM,cAAc,iBAAiB,MAAM;AAC7C,UAAM,cAAc,cAAc,KAAK;AACvC,UAAM,cAAc,cAAc,KAAK;AAAA,EACzC;AAEA,QAAM,cAAc,IAAI,IAAI;AAC9B;AAGA,IAAO,iBAAQ;AAAA,EACb,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU,CAAC,eAAe;AAAA,EAC1B,IAAI;AACN;;;ACrDA,IAAI,OAAO;AAAA,EACT,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,KAAK;AACP;AACe,SAAR,qBAAsC,WAAW;AACtD,SAAO,UAAU,QAAQ,0BAA0B,SAAU,SAAS;AACpE,WAAO,KAAK,OAAO;AAAA,EACrB,CAAC;AACH;;;ACVA,IAAIC,QAAO;AAAA,EACT,OAAO;AAAA,EACP,KAAK;AACP;AACe,SAAR,8BAA+C,WAAW;AAC/D,SAAO,UAAU,QAAQ,cAAc,SAAU,SAAS;AACxD,WAAOA,MAAK,OAAO;AAAA,EACrB,CAAC;AACH;;;ACJe,SAAR,qBAAsC,OAAO,SAAS;AAC3D,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AAEA,MAAI,WAAW,SACX,YAAY,SAAS,WACrB,WAAW,SAAS,UACpB,eAAe,SAAS,cACxB,UAAU,SAAS,SACnB,iBAAiB,SAAS,gBAC1B,wBAAwB,SAAS,uBACjC,wBAAwB,0BAA0B,SAAS,aAAgB;AAC/E,MAAI,YAAY,aAAa,SAAS;AACtC,MAAIC,cAAa,YAAY,iBAAiB,sBAAsB,oBAAoB,OAAO,SAAUC,YAAW;AAClH,WAAO,aAAaA,UAAS,MAAM;AAAA,EACrC,CAAC,IAAI;AACL,MAAI,oBAAoBD,YAAW,OAAO,SAAUC,YAAW;AAC7D,WAAO,sBAAsB,QAAQA,UAAS,KAAK;AAAA,EACrD,CAAC;AAED,MAAI,kBAAkB,WAAW,GAAG;AAClC,wBAAoBD;AAAA,EACtB;AAGA,MAAI,YAAY,kBAAkB,OAAO,SAAU,KAAKC,YAAW;AACjE,QAAIA,UAAS,IAAI,eAAe,OAAO;AAAA,MACrC,WAAWA;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC,EAAE,iBAAiBA,UAAS,CAAC;AAC9B,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AACL,SAAO,OAAO,KAAK,SAAS,EAAE,KAAK,SAAU,GAAG,GAAG;AACjD,WAAO,UAAU,CAAC,IAAI,UAAU,CAAC;AAAA,EACnC,CAAC;AACH;;;AClCA,SAAS,8BAA8B,WAAW;AAChD,MAAI,iBAAiB,SAAS,MAAM,MAAM;AACxC,WAAO,CAAC;AAAA,EACV;AAEA,MAAI,oBAAoB,qBAAqB,SAAS;AACtD,SAAO,CAAC,8BAA8B,SAAS,GAAG,mBAAmB,8BAA8B,iBAAiB,CAAC;AACvH;AAEA,SAAS,KAAK,MAAM;AAClB,MAAI,QAAQ,KAAK,OACb,UAAU,KAAK,SACf,OAAO,KAAK;AAEhB,MAAI,MAAM,cAAc,IAAI,EAAE,OAAO;AACnC;AAAA,EACF;AAEA,MAAI,oBAAoB,QAAQ,UAC5B,gBAAgB,sBAAsB,SAAS,OAAO,mBACtD,mBAAmB,QAAQ,SAC3B,eAAe,qBAAqB,SAAS,OAAO,kBACpD,8BAA8B,QAAQ,oBACtC,UAAU,QAAQ,SAClB,WAAW,QAAQ,UACnB,eAAe,QAAQ,cACvB,cAAc,QAAQ,aACtB,wBAAwB,QAAQ,gBAChC,iBAAiB,0BAA0B,SAAS,OAAO,uBAC3D,wBAAwB,QAAQ;AACpC,MAAI,qBAAqB,MAAM,QAAQ;AACvC,MAAI,gBAAgB,iBAAiB,kBAAkB;AACvD,MAAI,kBAAkB,kBAAkB;AACxC,MAAI,qBAAqB,gCAAgC,mBAAmB,CAAC,iBAAiB,CAAC,qBAAqB,kBAAkB,CAAC,IAAI,8BAA8B,kBAAkB;AAC3L,MAAIC,cAAa,CAAC,kBAAkB,EAAE,OAAO,kBAAkB,EAAE,OAAO,SAAU,KAAKC,YAAW;AAChG,WAAO,IAAI,OAAO,iBAAiBA,UAAS,MAAM,OAAO,qBAAqB,OAAO;AAAA,MACnF,WAAWA;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC,IAAIA,UAAS;AAAA,EAChB,GAAG,CAAC,CAAC;AACL,MAAI,gBAAgB,MAAM,MAAM;AAChC,MAAI,aAAa,MAAM,MAAM;AAC7B,MAAI,YAAY,oBAAI,IAAI;AACxB,MAAI,qBAAqB;AACzB,MAAI,wBAAwBD,YAAW,CAAC;AAExC,WAAS,IAAI,GAAG,IAAIA,YAAW,QAAQ,KAAK;AAC1C,QAAI,YAAYA,YAAW,CAAC;AAE5B,QAAI,iBAAiB,iBAAiB,SAAS;AAE/C,QAAI,mBAAmB,aAAa,SAAS,MAAM;AACnD,QAAI,aAAa,CAAC,KAAK,MAAM,EAAE,QAAQ,cAAc,KAAK;AAC1D,QAAI,MAAM,aAAa,UAAU;AACjC,QAAI,WAAW,eAAe,OAAO;AAAA,MACnC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,QAAI,oBAAoB,aAAa,mBAAmB,QAAQ,OAAO,mBAAmB,SAAS;AAEnG,QAAI,cAAc,GAAG,IAAI,WAAW,GAAG,GAAG;AACxC,0BAAoB,qBAAqB,iBAAiB;AAAA,IAC5D;AAEA,QAAI,mBAAmB,qBAAqB,iBAAiB;AAC7D,QAAI,SAAS,CAAC;AAEd,QAAI,eAAe;AACjB,aAAO,KAAK,SAAS,cAAc,KAAK,CAAC;AAAA,IAC3C;AAEA,QAAI,cAAc;AAChB,aAAO,KAAK,SAAS,iBAAiB,KAAK,GAAG,SAAS,gBAAgB,KAAK,CAAC;AAAA,IAC/E;AAEA,QAAI,OAAO,MAAM,SAAU,OAAO;AAChC,aAAO;AAAA,IACT,CAAC,GAAG;AACF,8BAAwB;AACxB,2BAAqB;AACrB;AAAA,IACF;AAEA,cAAU,IAAI,WAAW,MAAM;AAAA,EACjC;AAEA,MAAI,oBAAoB;AAEtB,QAAI,iBAAiB,iBAAiB,IAAI;AAE1C,QAAI,QAAQ,SAASE,OAAMC,KAAI;AAC7B,UAAI,mBAAmBH,YAAW,KAAK,SAAUC,YAAW;AAC1D,YAAIG,UAAS,UAAU,IAAIH,UAAS;AAEpC,YAAIG,SAAQ;AACV,iBAAOA,QAAO,MAAM,GAAGD,GAAE,EAAE,MAAM,SAAU,OAAO;AAChD,mBAAO;AAAA,UACT,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAED,UAAI,kBAAkB;AACpB,gCAAwB;AACxB,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,KAAK,gBAAgB,KAAK,GAAG,MAAM;AAC1C,UAAI,OAAO,MAAM,EAAE;AAEnB,UAAI,SAAS,QAAS;AAAA,IACxB;AAAA,EACF;AAEA,MAAI,MAAM,cAAc,uBAAuB;AAC7C,UAAM,cAAc,IAAI,EAAE,QAAQ;AAClC,UAAM,YAAY;AAClB,UAAM,QAAQ;AAAA,EAChB;AACF;AAGA,IAAO,eAAQ;AAAA,EACb,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,IAAI;AAAA,EACJ,kBAAkB,CAAC,QAAQ;AAAA,EAC3B,MAAM;AAAA,IACJ,OAAO;AAAA,EACT;AACF;;;AClJe,SAAR,WAA4B,MAAM;AACvC,SAAO,SAAS,MAAM,MAAM;AAC9B;;;ACDO,SAAS,OAAOE,MAAK,OAAOC,MAAK;AACtC,SAAO,IAAQD,MAAK,IAAQ,OAAOC,IAAG,CAAC;AACzC;AACO,SAAS,eAAeD,MAAK,OAAOC,MAAK;AAC9C,MAAI,IAAI,OAAOD,MAAK,OAAOC,IAAG;AAC9B,SAAO,IAAIA,OAAMA,OAAM;AACzB;;;ACKA,SAAS,gBAAgB,MAAM;AAC7B,MAAI,QAAQ,KAAK,OACb,UAAU,KAAK,SACf,OAAO,KAAK;AAChB,MAAI,oBAAoB,QAAQ,UAC5B,gBAAgB,sBAAsB,SAAS,OAAO,mBACtD,mBAAmB,QAAQ,SAC3B,eAAe,qBAAqB,SAAS,QAAQ,kBACrD,WAAW,QAAQ,UACnB,eAAe,QAAQ,cACvB,cAAc,QAAQ,aACtB,UAAU,QAAQ,SAClB,kBAAkB,QAAQ,QAC1B,SAAS,oBAAoB,SAAS,OAAO,iBAC7C,wBAAwB,QAAQ,cAChC,eAAe,0BAA0B,SAAS,IAAI;AAC1D,MAAI,WAAW,eAAe,OAAO;AAAA,IACnC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,MAAI,gBAAgB,iBAAiB,MAAM,SAAS;AACpD,MAAI,YAAY,aAAa,MAAM,SAAS;AAC5C,MAAI,kBAAkB,CAAC;AACvB,MAAI,WAAW,yBAAyB,aAAa;AACrD,MAAI,UAAU,WAAW,QAAQ;AACjC,MAAIC,iBAAgB,MAAM,cAAc;AACxC,MAAI,gBAAgB,MAAM,MAAM;AAChC,MAAI,aAAa,MAAM,MAAM;AAC7B,MAAI,oBAAoB,OAAO,iBAAiB,aAAa,aAAa,OAAO,OAAO,CAAC,GAAG,MAAM,OAAO;AAAA,IACvG,WAAW,MAAM;AAAA,EACnB,CAAC,CAAC,IAAI;AACN,MAAI,8BAA8B,OAAO,sBAAsB,WAAW;AAAA,IACxE,UAAU;AAAA,IACV,SAAS;AAAA,EACX,IAAI,OAAO,OAAO;AAAA,IAChB,UAAU;AAAA,IACV,SAAS;AAAA,EACX,GAAG,iBAAiB;AACpB,MAAI,sBAAsB,MAAM,cAAc,SAAS,MAAM,cAAc,OAAO,MAAM,SAAS,IAAI;AACrG,MAAI,OAAO;AAAA,IACT,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AAEA,MAAI,CAACA,gBAAe;AAClB;AAAA,EACF;AAEA,MAAI,eAAe;AACjB,QAAI;AAEJ,QAAI,WAAW,aAAa,MAAM,MAAM;AACxC,QAAI,UAAU,aAAa,MAAM,SAAS;AAC1C,QAAI,MAAM,aAAa,MAAM,WAAW;AACxC,QAAIC,UAASD,eAAc,QAAQ;AACnC,QAAIE,OAAMD,UAAS,SAAS,QAAQ;AACpC,QAAIE,OAAMF,UAAS,SAAS,OAAO;AACnC,QAAI,WAAW,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI;AAC/C,QAAI,SAAS,cAAc,QAAQ,cAAc,GAAG,IAAI,WAAW,GAAG;AACtE,QAAI,SAAS,cAAc,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,GAAG;AAGxE,QAAI,eAAe,MAAM,SAAS;AAClC,QAAI,YAAY,UAAU,eAAe,cAAc,YAAY,IAAI;AAAA,MACrE,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AACA,QAAI,qBAAqB,MAAM,cAAc,kBAAkB,IAAI,MAAM,cAAc,kBAAkB,EAAE,UAAU,mBAAmB;AACxI,QAAI,kBAAkB,mBAAmB,QAAQ;AACjD,QAAI,kBAAkB,mBAAmB,OAAO;AAMhD,QAAI,WAAW,OAAO,GAAG,cAAc,GAAG,GAAG,UAAU,GAAG,CAAC;AAC3D,QAAI,YAAY,kBAAkB,cAAc,GAAG,IAAI,IAAI,WAAW,WAAW,kBAAkB,4BAA4B,WAAW,SAAS,WAAW,kBAAkB,4BAA4B;AAC5M,QAAI,YAAY,kBAAkB,CAAC,cAAc,GAAG,IAAI,IAAI,WAAW,WAAW,kBAAkB,4BAA4B,WAAW,SAAS,WAAW,kBAAkB,4BAA4B;AAC7M,QAAI,oBAAoB,MAAM,SAAS,SAAS,gBAAgB,MAAM,SAAS,KAAK;AACpF,QAAI,eAAe,oBAAoB,aAAa,MAAM,kBAAkB,aAAa,IAAI,kBAAkB,cAAc,IAAI;AACjI,QAAI,uBAAuB,wBAAwB,uBAAuB,OAAO,SAAS,oBAAoB,QAAQ,MAAM,OAAO,wBAAwB;AAC3J,QAAI,YAAYA,UAAS,YAAY,sBAAsB;AAC3D,QAAI,YAAYA,UAAS,YAAY;AACrC,QAAI,kBAAkB,OAAO,SAAS,IAAQC,MAAK,SAAS,IAAIA,MAAKD,SAAQ,SAAS,IAAQE,MAAK,SAAS,IAAIA,IAAG;AACnH,IAAAH,eAAc,QAAQ,IAAI;AAC1B,SAAK,QAAQ,IAAI,kBAAkBC;AAAA,EACrC;AAEA,MAAI,cAAc;AAChB,QAAI;AAEJ,QAAI,YAAY,aAAa,MAAM,MAAM;AAEzC,QAAI,WAAW,aAAa,MAAM,SAAS;AAE3C,QAAI,UAAUD,eAAc,OAAO;AAEnC,QAAI,OAAO,YAAY,MAAM,WAAW;AAExC,QAAI,OAAO,UAAU,SAAS,SAAS;AAEvC,QAAI,OAAO,UAAU,SAAS,QAAQ;AAEtC,QAAI,eAAe,CAAC,KAAK,IAAI,EAAE,QAAQ,aAAa,MAAM;AAE1D,QAAI,wBAAwB,yBAAyB,uBAAuB,OAAO,SAAS,oBAAoB,OAAO,MAAM,OAAO,yBAAyB;AAE7J,QAAI,aAAa,eAAe,OAAO,UAAU,cAAc,IAAI,IAAI,WAAW,IAAI,IAAI,uBAAuB,4BAA4B;AAE7I,QAAI,aAAa,eAAe,UAAU,cAAc,IAAI,IAAI,WAAW,IAAI,IAAI,uBAAuB,4BAA4B,UAAU;AAEhJ,QAAI,mBAAmB,UAAU,eAAe,eAAe,YAAY,SAAS,UAAU,IAAI,OAAO,SAAS,aAAa,MAAM,SAAS,SAAS,aAAa,IAAI;AAExK,IAAAA,eAAc,OAAO,IAAI;AACzB,SAAK,OAAO,IAAI,mBAAmB;AAAA,EACrC;AAEA,QAAM,cAAc,IAAI,IAAI;AAC9B;AAGA,IAAO,0BAAQ;AAAA,EACb,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,IAAI;AAAA,EACJ,kBAAkB,CAAC,QAAQ;AAC7B;;;ACnIA,IAAI,kBAAkB,SAASI,iBAAgB,SAAS,OAAO;AAC7D,YAAU,OAAO,YAAY,aAAa,QAAQ,OAAO,OAAO,CAAC,GAAG,MAAM,OAAO;AAAA,IAC/E,WAAW,MAAM;AAAA,EACnB,CAAC,CAAC,IAAI;AACN,SAAO,mBAAmB,OAAO,YAAY,WAAW,UAAU,gBAAgB,SAAS,cAAc,CAAC;AAC5G;AAEA,SAAS,MAAM,MAAM;AACnB,MAAI;AAEJ,MAAI,QAAQ,KAAK,OACb,OAAO,KAAK,MACZ,UAAU,KAAK;AACnB,MAAI,eAAe,MAAM,SAAS;AAClC,MAAIC,iBAAgB,MAAM,cAAc;AACxC,MAAI,gBAAgB,iBAAiB,MAAM,SAAS;AACpD,MAAI,OAAO,yBAAyB,aAAa;AACjD,MAAI,aAAa,CAAC,MAAM,KAAK,EAAE,QAAQ,aAAa,KAAK;AACzD,MAAI,MAAM,aAAa,WAAW;AAElC,MAAI,CAAC,gBAAgB,CAACA,gBAAe;AACnC;AAAA,EACF;AAEA,MAAI,gBAAgB,gBAAgB,QAAQ,SAAS,KAAK;AAC1D,MAAI,YAAY,cAAc,YAAY;AAC1C,MAAI,UAAU,SAAS,MAAM,MAAM;AACnC,MAAI,UAAU,SAAS,MAAM,SAAS;AACtC,MAAI,UAAU,MAAM,MAAM,UAAU,GAAG,IAAI,MAAM,MAAM,UAAU,IAAI,IAAIA,eAAc,IAAI,IAAI,MAAM,MAAM,OAAO,GAAG;AACrH,MAAI,YAAYA,eAAc,IAAI,IAAI,MAAM,MAAM,UAAU,IAAI;AAChE,MAAI,oBAAoB,gBAAgB,YAAY;AACpD,MAAI,aAAa,oBAAoB,SAAS,MAAM,kBAAkB,gBAAgB,IAAI,kBAAkB,eAAe,IAAI;AAC/H,MAAI,oBAAoB,UAAU,IAAI,YAAY;AAGlD,MAAIC,OAAM,cAAc,OAAO;AAC/B,MAAIC,OAAM,aAAa,UAAU,GAAG,IAAI,cAAc,OAAO;AAC7D,MAAI,SAAS,aAAa,IAAI,UAAU,GAAG,IAAI,IAAI;AACnD,MAAIC,UAAS,OAAOF,MAAK,QAAQC,IAAG;AAEpC,MAAI,WAAW;AACf,QAAM,cAAc,IAAI,KAAK,wBAAwB,CAAC,GAAG,sBAAsB,QAAQ,IAAIC,SAAQ,sBAAsB,eAAeA,UAAS,QAAQ;AAC3J;AAEA,SAASC,QAAO,OAAO;AACrB,MAAI,QAAQ,MAAM,OACd,UAAU,MAAM;AACpB,MAAI,mBAAmB,QAAQ,SAC3B,eAAe,qBAAqB,SAAS,wBAAwB;AAEzE,MAAI,gBAAgB,MAAM;AACxB;AAAA,EACF;AAGA,MAAI,OAAO,iBAAiB,UAAU;AACpC,mBAAe,MAAM,SAAS,OAAO,cAAc,YAAY;AAE/D,QAAI,CAAC,cAAc;AACjB;AAAA,IACF;AAAA,EACF;AAEA,MAAI,CAAC,SAAS,MAAM,SAAS,QAAQ,YAAY,GAAG;AAClD;AAAA,EACF;AAEA,QAAM,SAAS,QAAQ;AACzB;AAGA,IAAO,gBAAQ;AAAA,EACb,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,IAAI;AAAA,EACJ,QAAQA;AAAA,EACR,UAAU,CAAC,eAAe;AAAA,EAC1B,kBAAkB,CAAC,iBAAiB;AACtC;;;ACtFA,SAAS,eAAe,UAAU,MAAM,kBAAkB;AACxD,MAAI,qBAAqB,QAAQ;AAC/B,uBAAmB;AAAA,MACjB,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,EACF;AAEA,SAAO;AAAA,IACL,KAAK,SAAS,MAAM,KAAK,SAAS,iBAAiB;AAAA,IACnD,OAAO,SAAS,QAAQ,KAAK,QAAQ,iBAAiB;AAAA,IACtD,QAAQ,SAAS,SAAS,KAAK,SAAS,iBAAiB;AAAA,IACzD,MAAM,SAAS,OAAO,KAAK,QAAQ,iBAAiB;AAAA,EACtD;AACF;AAEA,SAAS,sBAAsB,UAAU;AACvC,SAAO,CAAC,KAAK,OAAO,QAAQ,IAAI,EAAE,KAAK,SAAU,MAAM;AACrD,WAAO,SAAS,IAAI,KAAK;AAAA,EAC3B,CAAC;AACH;AAEA,SAAS,KAAK,MAAM;AAClB,MAAI,QAAQ,KAAK,OACb,OAAO,KAAK;AAChB,MAAI,gBAAgB,MAAM,MAAM;AAChC,MAAI,aAAa,MAAM,MAAM;AAC7B,MAAI,mBAAmB,MAAM,cAAc;AAC3C,MAAI,oBAAoB,eAAe,OAAO;AAAA,IAC5C,gBAAgB;AAAA,EAClB,CAAC;AACD,MAAI,oBAAoB,eAAe,OAAO;AAAA,IAC5C,aAAa;AAAA,EACf,CAAC;AACD,MAAI,2BAA2B,eAAe,mBAAmB,aAAa;AAC9E,MAAI,sBAAsB,eAAe,mBAAmB,YAAY,gBAAgB;AACxF,MAAI,oBAAoB,sBAAsB,wBAAwB;AACtE,MAAI,mBAAmB,sBAAsB,mBAAmB;AAChE,QAAM,cAAc,IAAI,IAAI;AAAA,IAC1B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,WAAW,SAAS,OAAO,OAAO,CAAC,GAAG,MAAM,WAAW,QAAQ;AAAA,IACnE,gCAAgC;AAAA,IAChC,uBAAuB;AAAA,EACzB,CAAC;AACH;AAGA,IAAO,eAAQ;AAAA,EACb,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,kBAAkB,CAAC,iBAAiB;AAAA,EACpC,IAAI;AACN;;;ACvDA,IAAI,mBAAmB,CAAC,wBAAgB,uBAAe,uBAAe,mBAAW;AACjF,IAAIC,gBAA4B,gBAAgB;AAAA,EAC9C;AACF,CAAC;;;ACED,IAAIC,oBAAmB,CAAC,wBAAgB,uBAAe,uBAAe,qBAAa,gBAAQ,cAAM,yBAAiB,eAAO,YAAI;AAC7H,IAAIC,gBAA4B,gBAAgB;AAAA,EAC9C,kBAAkBD;AACpB,CAAC;;;ACRD,IAAM,QAAQ,CAAC,OAAO,SAAS,UAAU,MAAM;AAC/C,IAAM,aAAa,CAAC,SAAS,KAAK;AAClC,IAAME,cAA0B,MAAM,OAAO,CAAC,KAAK,SAAS,IAAI,OAAO,MAAM,OAAO,MAAM,WAAW,CAAC,GAAG,OAAO,MAAM,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;AACxI,IAAMC,OAAM,KAAK;AACjB,IAAMC,OAAM,KAAK;AACjB,IAAMC,SAAQ,KAAK;AACnB,IAAM,QAAQ,KAAK;AACnB,IAAM,eAAe,QAAM;AAAA,EACzB,GAAG;AAAA,EACH,GAAG;AACL;AACA,IAAM,kBAAkB;AAAA,EACtB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,KAAK;AACP;AACA,IAAM,uBAAuB;AAAA,EAC3B,OAAO;AAAA,EACP,KAAK;AACP;AAIA,SAAS,SAAS,OAAO,OAAO;AAC9B,SAAO,OAAO,UAAU,aAAa,MAAM,KAAK,IAAI;AACtD;AACA,SAAS,QAAQ,WAAW;AAC1B,SAAO,UAAU,MAAM,GAAG,EAAE,CAAC;AAC/B;AACA,SAAS,aAAa,WAAW;AAC/B,SAAO,UAAU,MAAM,GAAG,EAAE,CAAC;AAC/B;AACA,SAAS,gBAAgB,MAAM;AAC7B,SAAO,SAAS,MAAM,MAAM;AAC9B;AACA,SAAS,cAAc,MAAM;AAC3B,SAAO,SAAS,MAAM,WAAW;AACnC;AACA,SAAS,YAAY,WAAW;AAC9B,SAAO,CAAC,OAAO,QAAQ,EAAE,SAAS,QAAQ,SAAS,CAAC,IAAI,MAAM;AAChE;AACA,SAAS,iBAAiB,WAAW;AACnC,SAAO,gBAAgB,YAAY,SAAS,CAAC;AAC/C;AACA,SAAS,kBAAkB,WAAW,OAAO,KAAK;AAChD,MAAI,QAAQ,QAAQ;AAClB,UAAM;AAAA,EACR;AACA,QAAM,YAAY,aAAa,SAAS;AACxC,QAAM,gBAAgB,iBAAiB,SAAS;AAChD,QAAM,SAAS,cAAc,aAAa;AAC1C,MAAI,oBAAoB,kBAAkB,MAAM,eAAe,MAAM,QAAQ,WAAW,UAAU,SAAS,cAAc,UAAU,WAAW;AAC9I,MAAI,MAAM,UAAU,MAAM,IAAI,MAAM,SAAS,MAAM,GAAG;AACpD,wBAAoBC,sBAAqB,iBAAiB;AAAA,EAC5D;AACA,SAAO,CAAC,mBAAmBA,sBAAqB,iBAAiB,CAAC;AACpE;AACA,SAAS,sBAAsB,WAAW;AACxC,QAAM,oBAAoBA,sBAAqB,SAAS;AACxD,SAAO,CAAC,8BAA8B,SAAS,GAAG,mBAAmB,8BAA8B,iBAAiB,CAAC;AACvH;AACA,SAAS,8BAA8B,WAAW;AAChD,SAAO,UAAU,QAAQ,cAAc,eAAa,qBAAqB,SAAS,CAAC;AACrF;AACA,SAAS,YAAY,MAAM,SAAS,KAAK;AACvC,QAAM,KAAK,CAAC,QAAQ,OAAO;AAC3B,QAAM,KAAK,CAAC,SAAS,MAAM;AAC3B,QAAM,KAAK,CAAC,OAAO,QAAQ;AAC3B,QAAM,KAAK,CAAC,UAAU,KAAK;AAC3B,UAAQ,MAAM;AAAA,IACZ,KAAK;AAAA,IACL,KAAK;AACH,UAAI,IAAK,QAAO,UAAU,KAAK;AAC/B,aAAO,UAAU,KAAK;AAAA,IACxB,KAAK;AAAA,IACL,KAAK;AACH,aAAO,UAAU,KAAK;AAAA,IACxB;AACE,aAAO,CAAC;AAAA,EACZ;AACF;AACA,SAAS,0BAA0B,WAAW,eAAe,WAAW,KAAK;AAC3E,QAAM,YAAY,aAAa,SAAS;AACxC,MAAI,OAAO,YAAY,QAAQ,SAAS,GAAG,cAAc,SAAS,GAAG;AACrE,MAAI,WAAW;AACb,WAAO,KAAK,IAAI,UAAQ,OAAO,MAAM,SAAS;AAC9C,QAAI,eAAe;AACjB,aAAO,KAAK,OAAO,KAAK,IAAI,6BAA6B,CAAC;AAAA,IAC5D;AAAA,EACF;AACA,SAAO;AACT;AACA,SAASA,sBAAqB,WAAW;AACvC,SAAO,UAAU,QAAQ,0BAA0B,UAAQ,gBAAgB,IAAI,CAAC;AAClF;AACA,SAAS,oBAAoB,SAAS;AACpC,SAAO;AAAA,IACL,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,GAAG;AAAA,EACL;AACF;AACA,SAAS,iBAAiB,SAAS;AACjC,SAAO,OAAO,YAAY,WAAW,oBAAoB,OAAO,IAAI;AAAA,IAClE,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,EACR;AACF;AACA,SAASC,kBAAiB,MAAM;AAC9B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL,MAAM;AAAA,IACN,OAAO,IAAI;AAAA,IACX,QAAQ,IAAI;AAAA,IACZ;AAAA,IACA;AAAA,EACF;AACF;;;ACpIA,SAAS,2BAA2B,MAAM,WAAW,KAAK;AACxD,MAAI;AAAA,IACF,WAAAC;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,WAAW,YAAY,SAAS;AACtC,QAAM,gBAAgB,iBAAiB,SAAS;AAChD,QAAM,cAAc,cAAc,aAAa;AAC/C,QAAM,OAAO,QAAQ,SAAS;AAC9B,QAAM,aAAa,aAAa;AAChC,QAAM,UAAUA,WAAU,IAAIA,WAAU,QAAQ,IAAI,SAAS,QAAQ;AACrE,QAAM,UAAUA,WAAU,IAAIA,WAAU,SAAS,IAAI,SAAS,SAAS;AACvE,QAAM,cAAcA,WAAU,WAAW,IAAI,IAAI,SAAS,WAAW,IAAI;AACzE,MAAI;AACJ,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,eAAS;AAAA,QACP,GAAG;AAAA,QACH,GAAGA,WAAU,IAAI,SAAS;AAAA,MAC5B;AACA;AAAA,IACF,KAAK;AACH,eAAS;AAAA,QACP,GAAG;AAAA,QACH,GAAGA,WAAU,IAAIA,WAAU;AAAA,MAC7B;AACA;AAAA,IACF,KAAK;AACH,eAAS;AAAA,QACP,GAAGA,WAAU,IAAIA,WAAU;AAAA,QAC3B,GAAG;AAAA,MACL;AACA;AAAA,IACF,KAAK;AACH,eAAS;AAAA,QACP,GAAGA,WAAU,IAAI,SAAS;AAAA,QAC1B,GAAG;AAAA,MACL;AACA;AAAA,IACF;AACE,eAAS;AAAA,QACP,GAAGA,WAAU;AAAA,QACb,GAAGA,WAAU;AAAA,MACf;AAAA,EACJ;AACA,UAAQ,aAAa,SAAS,GAAG;AAAA,IAC/B,KAAK;AACH,aAAO,aAAa,KAAK,eAAe,OAAO,aAAa,KAAK;AACjE;AAAA,IACF,KAAK;AACH,aAAO,aAAa,KAAK,eAAe,OAAO,aAAa,KAAK;AACjE;AAAA,EACJ;AACA,SAAO;AACT;AASA,IAAM,kBAAkB,OAAOA,YAAW,UAAU,WAAW;AAC7D,QAAM;AAAA,IACJ,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,aAAa,CAAC;AAAA,IACd,UAAAC;AAAA,EACF,IAAI;AACJ,QAAM,kBAAkB,WAAW,OAAO,OAAO;AACjD,QAAM,MAAM,OAAOA,UAAS,SAAS,OAAO,SAASA,UAAS,MAAM,QAAQ;AAC5E,MAAI,QAAQ,MAAMA,UAAS,gBAAgB;AAAA,IACzC,WAAAD;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACD,MAAI;AAAA,IACF;AAAA,IACA;AAAA,EACF,IAAI,2BAA2B,OAAO,WAAW,GAAG;AACpD,MAAI,oBAAoB;AACxB,MAAI,iBAAiB,CAAC;AACtB,MAAI,aAAa;AACjB,WAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,UAAM;AAAA,MACJ;AAAA,MACA,IAAAE;AAAA,IACF,IAAI,gBAAgB,CAAC;AACrB,UAAM;AAAA,MACJ,GAAG;AAAA,MACH,GAAG;AAAA,MACH;AAAA,MACA;AAAA,IACF,IAAI,MAAMA,IAAG;AAAA,MACX;AAAA,MACA;AAAA,MACA,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAAD;AAAA,MACA,UAAU;AAAA,QACR,WAAAD;AAAA,QACA;AAAA,MACF;AAAA,IACF,CAAC;AACD,QAAI,SAAS,OAAO,QAAQ;AAC5B,QAAI,SAAS,OAAO,QAAQ;AAC5B,qBAAiB;AAAA,MACf,GAAG;AAAA,MACH,CAAC,IAAI,GAAG;AAAA,QACN,GAAG,eAAe,IAAI;AAAA,QACtB,GAAG;AAAA,MACL;AAAA,IACF;AACA,QAAI,SAAS,cAAc,IAAI;AAC7B;AACA,UAAI,OAAO,UAAU,UAAU;AAC7B,YAAI,MAAM,WAAW;AACnB,8BAAoB,MAAM;AAAA,QAC5B;AACA,YAAI,MAAM,OAAO;AACf,kBAAQ,MAAM,UAAU,OAAO,MAAMC,UAAS,gBAAgB;AAAA,YAC5D,WAAAD;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC,IAAI,MAAM;AAAA,QACb;AACA,SAAC;AAAA,UACC;AAAA,UACA;AAAA,QACF,IAAI,2BAA2B,OAAO,mBAAmB,GAAG;AAAA,MAC9D;AACA,UAAI;AAAA,IACN;AAAA,EACF;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,WAAW;AAAA,IACX;AAAA,IACA;AAAA,EACF;AACF;AAUA,eAAeG,gBAAe,OAAO,SAAS;AAC5C,MAAI;AACJ,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA,UAAAF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM;AAAA,IACJ,WAAW;AAAA,IACX,eAAe;AAAA,IACf,iBAAiB;AAAA,IACjB,cAAc;AAAA,IACd,UAAU;AAAA,EACZ,IAAI,SAAS,SAAS,KAAK;AAC3B,QAAM,gBAAgB,iBAAiB,OAAO;AAC9C,QAAM,aAAa,mBAAmB,aAAa,cAAc;AACjE,QAAM,UAAU,SAAS,cAAc,aAAa,cAAc;AAClE,QAAM,qBAAqBG,kBAAiB,MAAMH,UAAS,gBAAgB;AAAA,IACzE,WAAW,wBAAwB,OAAOA,UAAS,aAAa,OAAO,SAASA,UAAS,UAAU,OAAO,OAAO,OAAO,wBAAwB,QAAQ,UAAU,QAAQ,kBAAmB,OAAOA,UAAS,sBAAsB,OAAO,SAASA,UAAS,mBAAmB,SAAS,QAAQ;AAAA,IAChS;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,CAAC;AACF,QAAM,OAAO,mBAAmB,aAAa;AAAA,IAC3C;AAAA,IACA;AAAA,IACA,OAAO,MAAM,SAAS;AAAA,IACtB,QAAQ,MAAM,SAAS;AAAA,EACzB,IAAI,MAAM;AACV,QAAM,eAAe,OAAOA,UAAS,mBAAmB,OAAO,SAASA,UAAS,gBAAgB,SAAS,QAAQ;AAClH,QAAM,cAAe,OAAOA,UAAS,aAAa,OAAO,SAASA,UAAS,UAAU,YAAY,KAAO,OAAOA,UAAS,YAAY,OAAO,SAASA,UAAS,SAAS,YAAY,MAAO;AAAA,IACvL,GAAG;AAAA,IACH,GAAG;AAAA,EACL,IAAI;AAAA,IACF,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACA,QAAM,oBAAoBG,kBAAiBH,UAAS,wDAAwD,MAAMA,UAAS,sDAAsD;AAAA,IAC/K;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,IAAI,IAAI;AACT,SAAO;AAAA,IACL,MAAM,mBAAmB,MAAM,kBAAkB,MAAM,cAAc,OAAO,YAAY;AAAA,IACxF,SAAS,kBAAkB,SAAS,mBAAmB,SAAS,cAAc,UAAU,YAAY;AAAA,IACpG,OAAO,mBAAmB,OAAO,kBAAkB,OAAO,cAAc,QAAQ,YAAY;AAAA,IAC5F,QAAQ,kBAAkB,QAAQ,mBAAmB,QAAQ,cAAc,SAAS,YAAY;AAAA,EAClG;AACF;AAiMA,IAAMI,QAAO,SAAU,SAAS;AAC9B,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,UAAI,uBAAuB;AAC3B,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,UAAAC;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM;AAAA,QACJ,UAAU,gBAAgB;AAAA,QAC1B,WAAW,iBAAiB;AAAA,QAC5B,oBAAoB;AAAA,QACpB,mBAAmB;AAAA,QACnB,4BAA4B;AAAA,QAC5B,gBAAgB;AAAA,QAChB,GAAG;AAAA,MACL,IAAI,SAAS,SAAS,KAAK;AAM3B,WAAK,wBAAwB,eAAe,UAAU,QAAQ,sBAAsB,iBAAiB;AACnG,eAAO,CAAC;AAAA,MACV;AACA,YAAM,OAAO,QAAQ,SAAS;AAC9B,YAAM,kBAAkB,YAAY,gBAAgB;AACpD,YAAM,kBAAkB,QAAQ,gBAAgB,MAAM;AACtD,YAAM,MAAM,OAAOA,UAAS,SAAS,OAAO,SAASA,UAAS,MAAM,SAAS,QAAQ;AACrF,YAAM,qBAAqB,gCAAgC,mBAAmB,CAAC,gBAAgB,CAACC,sBAAqB,gBAAgB,CAAC,IAAI,sBAAsB,gBAAgB;AAChL,YAAM,+BAA+B,8BAA8B;AACnE,UAAI,CAAC,+BAA+B,8BAA8B;AAChE,2BAAmB,KAAK,GAAG,0BAA0B,kBAAkB,eAAe,2BAA2B,GAAG,CAAC;AAAA,MACvH;AACA,YAAMC,cAAa,CAAC,kBAAkB,GAAG,kBAAkB;AAC3D,YAAM,WAAW,MAAMC,gBAAe,OAAO,qBAAqB;AAClE,YAAM,YAAY,CAAC;AACnB,UAAI,kBAAkB,uBAAuB,eAAe,SAAS,OAAO,SAAS,qBAAqB,cAAc,CAAC;AACzH,UAAI,eAAe;AACjB,kBAAU,KAAK,SAAS,IAAI,CAAC;AAAA,MAC/B;AACA,UAAI,gBAAgB;AAClB,cAAMC,SAAQ,kBAAkB,WAAW,OAAO,GAAG;AACrD,kBAAU,KAAK,SAASA,OAAM,CAAC,CAAC,GAAG,SAASA,OAAM,CAAC,CAAC,CAAC;AAAA,MACvD;AACA,sBAAgB,CAAC,GAAG,eAAe;AAAA,QACjC;AAAA,QACA;AAAA,MACF,CAAC;AAGD,UAAI,CAAC,UAAU,MAAM,CAAAC,UAAQA,SAAQ,CAAC,GAAG;AACvC,YAAI,uBAAuB;AAC3B,cAAM,eAAe,wBAAwB,eAAe,SAAS,OAAO,SAAS,sBAAsB,UAAU,KAAK;AAC1H,cAAM,gBAAgBH,YAAW,SAAS;AAC1C,YAAI,eAAe;AACjB,gBAAM,0BAA0B,mBAAmB,cAAc,oBAAoB,YAAY,aAAa,IAAI;AAClH,cAAI,CAAC;AAAA;AAAA,UAGL,cAAc,MAAM,OAAK,EAAE,UAAU,CAAC,IAAI,KAAK,YAAY,EAAE,SAAS,MAAM,eAAe,GAAG;AAE5F,mBAAO;AAAA,cACL,MAAM;AAAA,gBACJ,OAAO;AAAA,gBACP,WAAW;AAAA,cACb;AAAA,cACA,OAAO;AAAA,gBACL,WAAW;AAAA,cACb;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAIA,YAAI,kBAAkB,wBAAwB,cAAc,OAAO,OAAK,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,MAAM,OAAO,SAAS,sBAAsB;AAG1L,YAAI,CAAC,gBAAgB;AACnB,kBAAQ,kBAAkB;AAAA,YACxB,KAAK,WACH;AACE,kBAAI;AACJ,oBAAMI,cAAa,yBAAyB,cAAc,OAAO,OAAK;AACpE,oBAAI,8BAA8B;AAChC,wBAAM,kBAAkB,YAAY,EAAE,SAAS;AAC/C,yBAAO,oBAAoB;AAAA;AAAA,kBAG3B,oBAAoB;AAAA,gBACtB;AACA,uBAAO;AAAA,cACT,CAAC,EAAE,IAAI,OAAK,CAAC,EAAE,WAAW,EAAE,UAAU,OAAO,CAAAC,cAAYA,YAAW,CAAC,EAAE,OAAO,CAAC,KAAKA,cAAa,MAAMA,WAAU,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,OAAO,SAAS,uBAAuB,CAAC;AACjM,kBAAID,YAAW;AACb,iCAAiBA;AAAA,cACnB;AACA;AAAA,YACF;AAAA,YACF,KAAK;AACH,+BAAiB;AACjB;AAAA,UACJ;AAAA,QACF;AACA,YAAI,cAAc,gBAAgB;AAChC,iBAAO;AAAA,YACL,OAAO;AAAA,cACL,WAAW;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,aAAO,CAAC;AAAA,IACV;AAAA,EACF;AACF;AA6MA,eAAe,qBAAqB,OAAO,SAAS;AAClD,QAAM;AAAA,IACJ;AAAA,IACA,UAAAE;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,MAAM,OAAOA,UAAS,SAAS,OAAO,SAASA,UAAS,MAAM,SAAS,QAAQ;AACrF,QAAM,OAAO,QAAQ,SAAS;AAC9B,QAAM,YAAY,aAAa,SAAS;AACxC,QAAM,aAAa,YAAY,SAAS,MAAM;AAC9C,QAAM,gBAAgB,CAAC,QAAQ,KAAK,EAAE,SAAS,IAAI,IAAI,KAAK;AAC5D,QAAM,iBAAiB,OAAO,aAAa,KAAK;AAChD,QAAM,WAAW,SAAS,SAAS,KAAK;AAGxC,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,OAAO,aAAa,WAAW;AAAA,IACjC,UAAU;AAAA,IACV,WAAW;AAAA,IACX,eAAe;AAAA,EACjB,IAAI;AAAA,IACF,UAAU,SAAS,YAAY;AAAA,IAC/B,WAAW,SAAS,aAAa;AAAA,IACjC,eAAe,SAAS;AAAA,EAC1B;AACA,MAAI,aAAa,OAAO,kBAAkB,UAAU;AAClD,gBAAY,cAAc,QAAQ,gBAAgB,KAAK;AAAA,EACzD;AACA,SAAO,aAAa;AAAA,IAClB,GAAG,YAAY;AAAA,IACf,GAAG,WAAW;AAAA,EAChB,IAAI;AAAA,IACF,GAAG,WAAW;AAAA,IACd,GAAG,YAAY;AAAA,EACjB;AACF;AASA,IAAMC,UAAS,SAAU,SAAS;AAChC,MAAI,YAAY,QAAQ;AACtB,cAAU;AAAA,EACZ;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA,IACA,MAAM,GAAG,OAAO;AACd,UAAI,uBAAuB;AAC3B,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI;AACJ,YAAM,aAAa,MAAM,qBAAqB,OAAO,OAAO;AAI5D,UAAI,gBAAgB,wBAAwB,eAAe,WAAW,OAAO,SAAS,sBAAsB,eAAe,wBAAwB,eAAe,UAAU,QAAQ,sBAAsB,iBAAiB;AACzN,eAAO,CAAC;AAAA,MACV;AACA,aAAO;AAAA,QACL,GAAG,IAAI,WAAW;AAAA,QAClB,GAAG,IAAI,WAAW;AAAA,QAClB,MAAM;AAAA,UACJ,GAAG;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;AC9yBA,SAAS,YAAY;AACnB,SAAO,OAAO,WAAW;AAC3B;AACA,SAASC,aAAY,MAAM;AACzB,MAAI,OAAO,IAAI,GAAG;AAChB,YAAQ,KAAK,YAAY,IAAI,YAAY;AAAA,EAC3C;AAIA,SAAO;AACT;AACA,SAASC,WAAU,MAAM;AACvB,MAAI;AACJ,UAAQ,QAAQ,SAAS,sBAAsB,KAAK,kBAAkB,OAAO,SAAS,oBAAoB,gBAAgB;AAC5H;AACA,SAASC,oBAAmB,MAAM;AAChC,MAAI;AACJ,UAAQ,QAAQ,OAAO,IAAI,IAAI,KAAK,gBAAgB,KAAK,aAAa,OAAO,aAAa,OAAO,SAAS,KAAK;AACjH;AACA,SAAS,OAAO,OAAO;AACrB,MAAI,CAAC,UAAU,GAAG;AAChB,WAAO;AAAA,EACT;AACA,SAAO,iBAAiB,QAAQ,iBAAiBD,WAAU,KAAK,EAAE;AACpE;AACA,SAASE,WAAU,OAAO;AACxB,MAAI,CAAC,UAAU,GAAG;AAChB,WAAO;AAAA,EACT;AACA,SAAO,iBAAiB,WAAW,iBAAiBF,WAAU,KAAK,EAAE;AACvE;AACA,SAASG,eAAc,OAAO;AAC5B,MAAI,CAAC,UAAU,GAAG;AAChB,WAAO;AAAA,EACT;AACA,SAAO,iBAAiB,eAAe,iBAAiBH,WAAU,KAAK,EAAE;AAC3E;AACA,SAASI,cAAa,OAAO;AAC3B,MAAI,CAAC,UAAU,KAAK,OAAO,eAAe,aAAa;AACrD,WAAO;AAAA,EACT;AACA,SAAO,iBAAiB,cAAc,iBAAiBJ,WAAU,KAAK,EAAE;AAC1E;AACA,SAAS,kBAAkB,SAAS;AAClC,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAIK,kBAAiB,OAAO;AAC5B,SAAO,kCAAkC,KAAK,WAAW,YAAY,SAAS,KAAK,CAAC,CAAC,UAAU,UAAU,EAAE,SAAS,OAAO;AAC7H;AACA,SAASC,gBAAe,SAAS;AAC/B,SAAO,CAAC,SAAS,MAAM,IAAI,EAAE,SAASP,aAAY,OAAO,CAAC;AAC5D;AACA,SAAS,WAAW,SAAS;AAC3B,SAAO,CAAC,iBAAiB,QAAQ,EAAE,KAAK,cAAY;AAClD,QAAI;AACF,aAAO,QAAQ,QAAQ,QAAQ;AAAA,IACjC,SAAS,GAAG;AACV,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AACH;AACA,SAAS,kBAAkB,cAAc;AACvC,QAAM,SAAS,SAAS;AACxB,QAAM,MAAMG,WAAU,YAAY,IAAIG,kBAAiB,YAAY,IAAI;AAIvE,SAAO,CAAC,aAAa,aAAa,SAAS,UAAU,aAAa,EAAE,KAAK,WAAS,IAAI,KAAK,IAAI,IAAI,KAAK,MAAM,SAAS,KAAK,MAAM,IAAI,gBAAgB,IAAI,kBAAkB,WAAW,UAAU,CAAC,WAAW,IAAI,iBAAiB,IAAI,mBAAmB,SAAS,UAAU,CAAC,WAAW,IAAI,SAAS,IAAI,WAAW,SAAS,UAAU,CAAC,aAAa,aAAa,SAAS,UAAU,eAAe,QAAQ,EAAE,KAAK,YAAU,IAAI,cAAc,IAAI,SAAS,KAAK,CAAC,KAAK,CAAC,SAAS,UAAU,UAAU,SAAS,EAAE,KAAK,YAAU,IAAI,WAAW,IAAI,SAAS,KAAK,CAAC;AACniB;AACA,SAASE,oBAAmB,SAAS;AACnC,MAAI,cAAcC,eAAc,OAAO;AACvC,SAAOL,eAAc,WAAW,KAAK,CAAC,sBAAsB,WAAW,GAAG;AACxE,QAAI,kBAAkB,WAAW,GAAG;AAClC,aAAO;AAAA,IACT,WAAW,WAAW,WAAW,GAAG;AAClC,aAAO;AAAA,IACT;AACA,kBAAcK,eAAc,WAAW;AAAA,EACzC;AACA,SAAO;AACT;AACA,SAAS,WAAW;AAClB,MAAI,OAAO,QAAQ,eAAe,CAAC,IAAI,SAAU,QAAO;AACxD,SAAO,IAAI,SAAS,2BAA2B,MAAM;AACvD;AACA,SAAS,sBAAsB,MAAM;AACnC,SAAO,CAAC,QAAQ,QAAQ,WAAW,EAAE,SAAST,aAAY,IAAI,CAAC;AACjE;AACA,SAASM,kBAAiB,SAAS;AACjC,SAAOL,WAAU,OAAO,EAAE,iBAAiB,OAAO;AACpD;AACA,SAASS,eAAc,SAAS;AAC9B,MAAIP,WAAU,OAAO,GAAG;AACtB,WAAO;AAAA,MACL,YAAY,QAAQ;AAAA,MACpB,WAAW,QAAQ;AAAA,IACrB;AAAA,EACF;AACA,SAAO;AAAA,IACL,YAAY,QAAQ;AAAA,IACpB,WAAW,QAAQ;AAAA,EACrB;AACF;AACA,SAASM,eAAc,MAAM;AAC3B,MAAIT,aAAY,IAAI,MAAM,QAAQ;AAChC,WAAO;AAAA,EACT;AACA,QAAM;AAAA;AAAA,IAEN,KAAK;AAAA,IAEL,KAAK;AAAA,IAELK,cAAa,IAAI,KAAK,KAAK;AAAA,IAE3BH,oBAAmB,IAAI;AAAA;AACvB,SAAOG,cAAa,MAAM,IAAI,OAAO,OAAO;AAC9C;AACA,SAAS,2BAA2B,MAAM;AACxC,QAAM,aAAaI,eAAc,IAAI;AACrC,MAAI,sBAAsB,UAAU,GAAG;AACrC,WAAO,KAAK,gBAAgB,KAAK,cAAc,OAAO,KAAK;AAAA,EAC7D;AACA,MAAIL,eAAc,UAAU,KAAK,kBAAkB,UAAU,GAAG;AAC9D,WAAO;AAAA,EACT;AACA,SAAO,2BAA2B,UAAU;AAC9C;AACA,SAAS,qBAAqB,MAAM,MAAM,iBAAiB;AACzD,MAAI;AACJ,MAAI,SAAS,QAAQ;AACnB,WAAO,CAAC;AAAA,EACV;AACA,MAAI,oBAAoB,QAAQ;AAC9B,sBAAkB;AAAA,EACpB;AACA,QAAM,qBAAqB,2BAA2B,IAAI;AAC1D,QAAM,SAAS,yBAAyB,uBAAuB,KAAK,kBAAkB,OAAO,SAAS,qBAAqB;AAC3H,QAAM,MAAMH,WAAU,kBAAkB;AACxC,MAAI,QAAQ;AACV,UAAM,eAAe,gBAAgB,GAAG;AACxC,WAAO,KAAK,OAAO,KAAK,IAAI,kBAAkB,CAAC,GAAG,kBAAkB,kBAAkB,IAAI,qBAAqB,CAAC,GAAG,gBAAgB,kBAAkB,qBAAqB,YAAY,IAAI,CAAC,CAAC;AAAA,EAC9L;AACA,SAAO,KAAK,OAAO,oBAAoB,qBAAqB,oBAAoB,CAAC,GAAG,eAAe,CAAC;AACtG;AACA,SAAS,gBAAgB,KAAK;AAC5B,SAAO,IAAI,UAAU,OAAO,eAAe,IAAI,MAAM,IAAI,IAAI,eAAe;AAC9E;;;AClJA,SAAS,iBAAiB,SAAS;AACjC,QAAM,MAAMU,kBAAiB,OAAO;AAGpC,MAAI,QAAQ,WAAW,IAAI,KAAK,KAAK;AACrC,MAAI,SAAS,WAAW,IAAI,MAAM,KAAK;AACvC,QAAM,YAAYC,eAAc,OAAO;AACvC,QAAM,cAAc,YAAY,QAAQ,cAAc;AACtD,QAAM,eAAe,YAAY,QAAQ,eAAe;AACxD,QAAM,iBAAiBC,OAAM,KAAK,MAAM,eAAeA,OAAM,MAAM,MAAM;AACzE,MAAI,gBAAgB;AAClB,YAAQ;AACR,aAAS;AAAA,EACX;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL;AACF;AAEA,SAAS,cAAc,SAAS;AAC9B,SAAO,CAACC,WAAU,OAAO,IAAI,QAAQ,iBAAiB;AACxD;AAEA,SAAS,SAAS,SAAS;AACzB,QAAM,aAAa,cAAc,OAAO;AACxC,MAAI,CAACF,eAAc,UAAU,GAAG;AAC9B,WAAO,aAAa,CAAC;AAAA,EACvB;AACA,QAAM,OAAO,WAAW,sBAAsB;AAC9C,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,iBAAiB,UAAU;AAC/B,MAAI,KAAK,IAAIC,OAAM,KAAK,KAAK,IAAI,KAAK,SAAS;AAC/C,MAAI,KAAK,IAAIA,OAAM,KAAK,MAAM,IAAI,KAAK,UAAU;AAIjD,MAAI,CAAC,KAAK,CAAC,OAAO,SAAS,CAAC,GAAG;AAC7B,QAAI;AAAA,EACN;AACA,MAAI,CAAC,KAAK,CAAC,OAAO,SAAS,CAAC,GAAG;AAC7B,QAAI;AAAA,EACN;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEA,IAAM,YAAyB,aAAa,CAAC;AAC7C,SAAS,iBAAiB,SAAS;AACjC,QAAM,MAAME,WAAU,OAAO;AAC7B,MAAI,CAAC,SAAS,KAAK,CAAC,IAAI,gBAAgB;AACtC,WAAO;AAAA,EACT;AACA,SAAO;AAAA,IACL,GAAG,IAAI,eAAe;AAAA,IACtB,GAAG,IAAI,eAAe;AAAA,EACxB;AACF;AACA,SAAS,uBAAuB,SAAS,SAAS,sBAAsB;AACtE,MAAI,YAAY,QAAQ;AACtB,cAAU;AAAA,EACZ;AACA,MAAI,CAAC,wBAAwB,WAAW,yBAAyBA,WAAU,OAAO,GAAG;AACnF,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAEA,SAASC,uBAAsB,SAAS,cAAc,iBAAiB,cAAc;AACnF,MAAI,iBAAiB,QAAQ;AAC3B,mBAAe;AAAA,EACjB;AACA,MAAI,oBAAoB,QAAQ;AAC9B,sBAAkB;AAAA,EACpB;AACA,QAAM,aAAa,QAAQ,sBAAsB;AACjD,QAAM,aAAa,cAAc,OAAO;AACxC,MAAI,QAAQ,aAAa,CAAC;AAC1B,MAAI,cAAc;AAChB,QAAI,cAAc;AAChB,UAAIF,WAAU,YAAY,GAAG;AAC3B,gBAAQ,SAAS,YAAY;AAAA,MAC/B;AAAA,IACF,OAAO;AACL,cAAQ,SAAS,OAAO;AAAA,IAC1B;AAAA,EACF;AACA,QAAM,gBAAgB,uBAAuB,YAAY,iBAAiB,YAAY,IAAI,iBAAiB,UAAU,IAAI,aAAa,CAAC;AACvI,MAAI,KAAK,WAAW,OAAO,cAAc,KAAK,MAAM;AACpD,MAAI,KAAK,WAAW,MAAM,cAAc,KAAK,MAAM;AACnD,MAAI,QAAQ,WAAW,QAAQ,MAAM;AACrC,MAAI,SAAS,WAAW,SAAS,MAAM;AACvC,MAAI,YAAY;AACd,UAAM,MAAMC,WAAU,UAAU;AAChC,UAAM,YAAY,gBAAgBD,WAAU,YAAY,IAAIC,WAAU,YAAY,IAAI;AACtF,QAAI,aAAa;AACjB,QAAI,gBAAgB,gBAAgB,UAAU;AAC9C,WAAO,iBAAiB,gBAAgB,cAAc,YAAY;AAChE,YAAM,cAAc,SAAS,aAAa;AAC1C,YAAM,aAAa,cAAc,sBAAsB;AACvD,YAAM,MAAMJ,kBAAiB,aAAa;AAC1C,YAAMM,QAAO,WAAW,QAAQ,cAAc,aAAa,WAAW,IAAI,WAAW,KAAK,YAAY;AACtG,YAAMC,OAAM,WAAW,OAAO,cAAc,YAAY,WAAW,IAAI,UAAU,KAAK,YAAY;AAClG,WAAK,YAAY;AACjB,WAAK,YAAY;AACjB,eAAS,YAAY;AACrB,gBAAU,YAAY;AACtB,WAAKD;AACL,WAAKC;AACL,mBAAaH,WAAU,aAAa;AACpC,sBAAgB,gBAAgB,UAAU;AAAA,IAC5C;AAAA,EACF;AACA,SAAOI,kBAAiB;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACH;AAIA,SAASC,qBAAoB,SAAS,MAAM;AAC1C,QAAM,aAAaC,eAAc,OAAO,EAAE;AAC1C,MAAI,CAAC,MAAM;AACT,WAAOL,uBAAsBM,oBAAmB,OAAO,CAAC,EAAE,OAAO;AAAA,EACnE;AACA,SAAO,KAAK,OAAO;AACrB;AAEA,SAAS,cAAc,iBAAiB,QAAQ,kBAAkB;AAChE,MAAI,qBAAqB,QAAQ;AAC/B,uBAAmB;AAAA,EACrB;AACA,QAAM,WAAW,gBAAgB,sBAAsB;AACvD,QAAM,IAAI,SAAS,OAAO,OAAO,cAAc,mBAAmB;AAAA;AAAA,IAElEF,qBAAoB,iBAAiB,QAAQ;AAAA;AAC7C,QAAM,IAAI,SAAS,MAAM,OAAO;AAChC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEA,SAAS,sDAAsD,MAAM;AACnE,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,UAAU,aAAa;AAC7B,QAAM,kBAAkBE,oBAAmB,YAAY;AACvD,QAAM,WAAW,WAAW,WAAW,SAAS,QAAQ,IAAI;AAC5D,MAAI,iBAAiB,mBAAmB,YAAY,SAAS;AAC3D,WAAO;AAAA,EACT;AACA,MAAI,SAAS;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AACA,MAAI,QAAQ,aAAa,CAAC;AAC1B,QAAM,UAAU,aAAa,CAAC;AAC9B,QAAM,0BAA0BV,eAAc,YAAY;AAC1D,MAAI,2BAA2B,CAAC,2BAA2B,CAAC,SAAS;AACnE,QAAIW,aAAY,YAAY,MAAM,UAAU,kBAAkB,eAAe,GAAG;AAC9E,eAASF,eAAc,YAAY;AAAA,IACrC;AACA,QAAIT,eAAc,YAAY,GAAG;AAC/B,YAAM,aAAaI,uBAAsB,YAAY;AACrD,cAAQ,SAAS,YAAY;AAC7B,cAAQ,IAAI,WAAW,IAAI,aAAa;AACxC,cAAQ,IAAI,WAAW,IAAI,aAAa;AAAA,IAC1C;AAAA,EACF;AACA,QAAM,aAAa,mBAAmB,CAAC,2BAA2B,CAAC,UAAU,cAAc,iBAAiB,QAAQ,IAAI,IAAI,aAAa,CAAC;AAC1I,SAAO;AAAA,IACL,OAAO,KAAK,QAAQ,MAAM;AAAA,IAC1B,QAAQ,KAAK,SAAS,MAAM;AAAA,IAC5B,GAAG,KAAK,IAAI,MAAM,IAAI,OAAO,aAAa,MAAM,IAAI,QAAQ,IAAI,WAAW;AAAA,IAC3E,GAAG,KAAK,IAAI,MAAM,IAAI,OAAO,YAAY,MAAM,IAAI,QAAQ,IAAI,WAAW;AAAA,EAC5E;AACF;AAEA,SAAS,eAAe,SAAS;AAC/B,SAAO,MAAM,KAAK,QAAQ,eAAe,CAAC;AAC5C;AAIA,SAASQ,iBAAgB,SAAS;AAChC,QAAM,OAAOF,oBAAmB,OAAO;AACvC,QAAM,SAASD,eAAc,OAAO;AACpC,QAAM,OAAO,QAAQ,cAAc;AACnC,QAAM,QAAQI,KAAI,KAAK,aAAa,KAAK,aAAa,KAAK,aAAa,KAAK,WAAW;AACxF,QAAM,SAASA,KAAI,KAAK,cAAc,KAAK,cAAc,KAAK,cAAc,KAAK,YAAY;AAC7F,MAAI,IAAI,CAAC,OAAO,aAAaL,qBAAoB,OAAO;AACxD,QAAM,IAAI,CAAC,OAAO;AAClB,MAAIT,kBAAiB,IAAI,EAAE,cAAc,OAAO;AAC9C,SAAKc,KAAI,KAAK,aAAa,KAAK,WAAW,IAAI;AAAA,EACjD;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAEA,SAASC,iBAAgB,SAAS,UAAU;AAC1C,QAAM,MAAMX,WAAU,OAAO;AAC7B,QAAM,OAAOO,oBAAmB,OAAO;AACvC,QAAM,iBAAiB,IAAI;AAC3B,MAAI,QAAQ,KAAK;AACjB,MAAI,SAAS,KAAK;AAClB,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,gBAAgB;AAClB,YAAQ,eAAe;AACvB,aAAS,eAAe;AACxB,UAAM,sBAAsB,SAAS;AACrC,QAAI,CAAC,uBAAuB,uBAAuB,aAAa,SAAS;AACvE,UAAI,eAAe;AACnB,UAAI,eAAe;AAAA,IACrB;AAAA,EACF;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAGA,SAASK,4BAA2B,SAAS,UAAU;AACrD,QAAM,aAAaX,uBAAsB,SAAS,MAAM,aAAa,OAAO;AAC5E,QAAME,OAAM,WAAW,MAAM,QAAQ;AACrC,QAAMD,QAAO,WAAW,OAAO,QAAQ;AACvC,QAAM,QAAQL,eAAc,OAAO,IAAI,SAAS,OAAO,IAAI,aAAa,CAAC;AACzE,QAAM,QAAQ,QAAQ,cAAc,MAAM;AAC1C,QAAM,SAAS,QAAQ,eAAe,MAAM;AAC5C,QAAM,IAAIK,QAAO,MAAM;AACvB,QAAM,IAAIC,OAAM,MAAM;AACtB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AACA,SAAS,kCAAkC,SAAS,kBAAkB,UAAU;AAC9E,MAAI;AACJ,MAAI,qBAAqB,YAAY;AACnC,WAAOQ,iBAAgB,SAAS,QAAQ;AAAA,EAC1C,WAAW,qBAAqB,YAAY;AAC1C,WAAOF,iBAAgBF,oBAAmB,OAAO,CAAC;AAAA,EACpD,WAAWR,WAAU,gBAAgB,GAAG;AACtC,WAAOa,4BAA2B,kBAAkB,QAAQ;AAAA,EAC9D,OAAO;AACL,UAAM,gBAAgB,iBAAiB,OAAO;AAC9C,WAAO;AAAA,MACL,GAAG,iBAAiB,IAAI,cAAc;AAAA,MACtC,GAAG,iBAAiB,IAAI,cAAc;AAAA,MACtC,OAAO,iBAAiB;AAAA,MACxB,QAAQ,iBAAiB;AAAA,IAC3B;AAAA,EACF;AACA,SAAOR,kBAAiB,IAAI;AAC9B;AACA,SAAS,yBAAyB,SAAS,UAAU;AACnD,QAAM,aAAaS,eAAc,OAAO;AACxC,MAAI,eAAe,YAAY,CAACd,WAAU,UAAU,KAAK,sBAAsB,UAAU,GAAG;AAC1F,WAAO;AAAA,EACT;AACA,SAAOH,kBAAiB,UAAU,EAAE,aAAa,WAAW,yBAAyB,YAAY,QAAQ;AAC3G;AAKA,SAAS,4BAA4B,SAAS,OAAO;AACnD,QAAM,eAAe,MAAM,IAAI,OAAO;AACtC,MAAI,cAAc;AAChB,WAAO;AAAA,EACT;AACA,MAAI,SAAS,qBAAqB,SAAS,CAAC,GAAG,KAAK,EAAE,OAAO,QAAMG,WAAU,EAAE,KAAKS,aAAY,EAAE,MAAM,MAAM;AAC9G,MAAI,sCAAsC;AAC1C,QAAM,iBAAiBZ,kBAAiB,OAAO,EAAE,aAAa;AAC9D,MAAI,cAAc,iBAAiBiB,eAAc,OAAO,IAAI;AAG5D,SAAOd,WAAU,WAAW,KAAK,CAAC,sBAAsB,WAAW,GAAG;AACpE,UAAM,gBAAgBH,kBAAiB,WAAW;AAClD,UAAM,0BAA0B,kBAAkB,WAAW;AAC7D,QAAI,CAAC,2BAA2B,cAAc,aAAa,SAAS;AAClE,4CAAsC;AAAA,IACxC;AACA,UAAM,wBAAwB,iBAAiB,CAAC,2BAA2B,CAAC,sCAAsC,CAAC,2BAA2B,cAAc,aAAa,YAAY,CAAC,CAAC,uCAAuC,CAAC,YAAY,OAAO,EAAE,SAAS,oCAAoC,QAAQ,KAAK,kBAAkB,WAAW,KAAK,CAAC,2BAA2B,yBAAyB,SAAS,WAAW;AACzZ,QAAI,uBAAuB;AAEzB,eAAS,OAAO,OAAO,cAAY,aAAa,WAAW;AAAA,IAC7D,OAAO;AAEL,4CAAsC;AAAA,IACxC;AACA,kBAAciB,eAAc,WAAW;AAAA,EACzC;AACA,QAAM,IAAI,SAAS,MAAM;AACzB,SAAO;AACT;AAIA,SAASC,iBAAgB,MAAM;AAC7B,MAAI;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,2BAA2B,aAAa,sBAAsB,WAAW,OAAO,IAAI,CAAC,IAAI,4BAA4B,SAAS,KAAK,EAAE,IAAI,CAAC,EAAE,OAAO,QAAQ;AACjK,QAAM,oBAAoB,CAAC,GAAG,0BAA0B,YAAY;AACpE,QAAM,wBAAwB,kBAAkB,CAAC;AACjD,QAAM,eAAe,kBAAkB,OAAO,CAAC,SAAS,qBAAqB;AAC3E,UAAM,OAAO,kCAAkC,SAAS,kBAAkB,QAAQ;AAClF,YAAQ,MAAMJ,KAAI,KAAK,KAAK,QAAQ,GAAG;AACvC,YAAQ,QAAQK,KAAI,KAAK,OAAO,QAAQ,KAAK;AAC7C,YAAQ,SAASA,KAAI,KAAK,QAAQ,QAAQ,MAAM;AAChD,YAAQ,OAAOL,KAAI,KAAK,MAAM,QAAQ,IAAI;AAC1C,WAAO;AAAA,EACT,GAAG,kCAAkC,SAAS,uBAAuB,QAAQ,CAAC;AAC9E,SAAO;AAAA,IACL,OAAO,aAAa,QAAQ,aAAa;AAAA,IACzC,QAAQ,aAAa,SAAS,aAAa;AAAA,IAC3C,GAAG,aAAa;AAAA,IAChB,GAAG,aAAa;AAAA,EAClB;AACF;AAEA,SAAS,cAAc,SAAS;AAC9B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,iBAAiB,OAAO;AAC5B,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEA,SAAS,8BAA8B,SAAS,cAAc,UAAU;AACtE,QAAM,0BAA0Bb,eAAc,YAAY;AAC1D,QAAM,kBAAkBU,oBAAmB,YAAY;AACvD,QAAM,UAAU,aAAa;AAC7B,QAAM,OAAON,uBAAsB,SAAS,MAAM,SAAS,YAAY;AACvE,MAAI,SAAS;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AACA,QAAM,UAAU,aAAa,CAAC;AAI9B,WAAS,4BAA4B;AACnC,YAAQ,IAAII,qBAAoB,eAAe;AAAA,EACjD;AACA,MAAI,2BAA2B,CAAC,2BAA2B,CAAC,SAAS;AACnE,QAAIG,aAAY,YAAY,MAAM,UAAU,kBAAkB,eAAe,GAAG;AAC9E,eAASF,eAAc,YAAY;AAAA,IACrC;AACA,QAAI,yBAAyB;AAC3B,YAAM,aAAaL,uBAAsB,cAAc,MAAM,SAAS,YAAY;AAClF,cAAQ,IAAI,WAAW,IAAI,aAAa;AACxC,cAAQ,IAAI,WAAW,IAAI,aAAa;AAAA,IAC1C,WAAW,iBAAiB;AAC1B,gCAA0B;AAAA,IAC5B;AAAA,EACF;AACA,MAAI,WAAW,CAAC,2BAA2B,iBAAiB;AAC1D,8BAA0B;AAAA,EAC5B;AACA,QAAM,aAAa,mBAAmB,CAAC,2BAA2B,CAAC,UAAU,cAAc,iBAAiB,MAAM,IAAI,aAAa,CAAC;AACpI,QAAM,IAAI,KAAK,OAAO,OAAO,aAAa,QAAQ,IAAI,WAAW;AACjE,QAAM,IAAI,KAAK,MAAM,OAAO,YAAY,QAAQ,IAAI,WAAW;AAC/D,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,OAAO,KAAK;AAAA,IACZ,QAAQ,KAAK;AAAA,EACf;AACF;AAEA,SAAS,mBAAmB,SAAS;AACnC,SAAOL,kBAAiB,OAAO,EAAE,aAAa;AAChD;AAEA,SAASoB,qBAAoB,SAAS,UAAU;AAC9C,MAAI,CAACnB,eAAc,OAAO,KAAKD,kBAAiB,OAAO,EAAE,aAAa,SAAS;AAC7E,WAAO;AAAA,EACT;AACA,MAAI,UAAU;AACZ,WAAO,SAAS,OAAO;AAAA,EACzB;AACA,MAAI,kBAAkB,QAAQ;AAM9B,MAAIW,oBAAmB,OAAO,MAAM,iBAAiB;AACnD,sBAAkB,gBAAgB,cAAc;AAAA,EAClD;AACA,SAAO;AACT;AAIA,SAASU,iBAAgB,SAAS,UAAU;AAC1C,QAAM,MAAMjB,WAAU,OAAO;AAC7B,MAAI,WAAW,OAAO,GAAG;AACvB,WAAO;AAAA,EACT;AACA,MAAI,CAACH,eAAc,OAAO,GAAG;AAC3B,QAAI,kBAAkBgB,eAAc,OAAO;AAC3C,WAAO,mBAAmB,CAAC,sBAAsB,eAAe,GAAG;AACjE,UAAId,WAAU,eAAe,KAAK,CAAC,mBAAmB,eAAe,GAAG;AACtE,eAAO;AAAA,MACT;AACA,wBAAkBc,eAAc,eAAe;AAAA,IACjD;AACA,WAAO;AAAA,EACT;AACA,MAAI,eAAeG,qBAAoB,SAAS,QAAQ;AACxD,SAAO,gBAAgBE,gBAAe,YAAY,KAAK,mBAAmB,YAAY,GAAG;AACvF,mBAAeF,qBAAoB,cAAc,QAAQ;AAAA,EAC3D;AACA,MAAI,gBAAgB,sBAAsB,YAAY,KAAK,mBAAmB,YAAY,KAAK,CAAC,kBAAkB,YAAY,GAAG;AAC/H,WAAO;AAAA,EACT;AACA,SAAO,gBAAgBG,oBAAmB,OAAO,KAAK;AACxD;AAEA,IAAM,kBAAkB,eAAgB,MAAM;AAC5C,QAAM,oBAAoB,KAAK,mBAAmBF;AAClD,QAAM,kBAAkB,KAAK;AAC7B,QAAM,qBAAqB,MAAM,gBAAgB,KAAK,QAAQ;AAC9D,SAAO;AAAA,IACL,WAAW,8BAA8B,KAAK,WAAW,MAAM,kBAAkB,KAAK,QAAQ,GAAG,KAAK,QAAQ;AAAA,IAC9G,UAAU;AAAA,MACR,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO,mBAAmB;AAAA,MAC1B,QAAQ,mBAAmB;AAAA,IAC7B;AAAA,EACF;AACF;AAEA,SAAS,MAAM,SAAS;AACtB,SAAOrB,kBAAiB,OAAO,EAAE,cAAc;AACjD;AAEA,IAAM,WAAW;AAAA,EACf;AAAA,EACA,oBAAAW;AAAA,EACA,iBAAAO;AAAA,EACA,iBAAAG;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,WAAAlB;AAAA,EACA;AACF;AAEA,SAAS,cAAc,GAAG,GAAG;AAC3B,SAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE;AAC7E;AAGA,SAAS,YAAY,SAAS,QAAQ;AACpC,MAAI,KAAK;AACT,MAAI;AACJ,QAAM,OAAOQ,oBAAmB,OAAO;AACvC,WAAS,UAAU;AACjB,QAAI;AACJ,iBAAa,SAAS;AACtB,KAAC,MAAM,OAAO,QAAQ,IAAI,WAAW;AACrC,SAAK;AAAA,EACP;AACA,WAAS,QAAQ,MAAM,WAAW;AAChC,QAAI,SAAS,QAAQ;AACnB,aAAO;AAAA,IACT;AACA,QAAI,cAAc,QAAQ;AACxB,kBAAY;AAAA,IACd;AACA,YAAQ;AACR,UAAM,2BAA2B,QAAQ,sBAAsB;AAC/D,UAAM;AAAA,MACJ,MAAAL;AAAA,MACA,KAAAC;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AACJ,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AACA,QAAI,CAAC,SAAS,CAAC,QAAQ;AACrB;AAAA,IACF;AACA,UAAM,WAAW,MAAMA,IAAG;AAC1B,UAAM,aAAa,MAAM,KAAK,eAAeD,QAAO,MAAM;AAC1D,UAAM,cAAc,MAAM,KAAK,gBAAgBC,OAAM,OAAO;AAC5D,UAAM,YAAY,MAAMD,KAAI;AAC5B,UAAM,aAAa,CAAC,WAAW,QAAQ,CAAC,aAAa,QAAQ,CAAC,cAAc,QAAQ,CAAC,YAAY;AACjG,UAAM,UAAU;AAAA,MACd;AAAA,MACA,WAAWQ,KAAI,GAAGK,KAAI,GAAG,SAAS,CAAC,KAAK;AAAA,IAC1C;AACA,QAAI,gBAAgB;AACpB,aAAS,cAAc,SAAS;AAC9B,YAAM,QAAQ,QAAQ,CAAC,EAAE;AACzB,UAAI,UAAU,WAAW;AACvB,YAAI,CAAC,eAAe;AAClB,iBAAO,QAAQ;AAAA,QACjB;AACA,YAAI,CAAC,OAAO;AAGV,sBAAY,WAAW,MAAM;AAC3B,oBAAQ,OAAO,IAAI;AAAA,UACrB,GAAG,GAAI;AAAA,QACT,OAAO;AACL,kBAAQ,OAAO,KAAK;AAAA,QACtB;AAAA,MACF;AACA,UAAI,UAAU,KAAK,CAAC,cAAc,0BAA0B,QAAQ,sBAAsB,CAAC,GAAG;AAQ5F,gBAAQ;AAAA,MACV;AACA,sBAAgB;AAAA,IAClB;AAIA,QAAI;AACF,WAAK,IAAI,qBAAqB,eAAe;AAAA,QAC3C,GAAG;AAAA;AAAA,QAEH,MAAM,KAAK;AAAA,MACb,CAAC;AAAA,IACH,SAAS,IAAI;AACX,WAAK,IAAI,qBAAqB,eAAe,OAAO;AAAA,IACtD;AACA,OAAG,QAAQ,OAAO;AAAA,EACpB;AACA,UAAQ,IAAI;AACZ,SAAO;AACT;AAUA,SAAS,WAAWK,YAAW,UAAU,QAAQ,SAAS;AACxD,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,QAAM;AAAA,IACJ,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,gBAAgB,OAAO,mBAAmB;AAAA,IAC1C,cAAc,OAAO,yBAAyB;AAAA,IAC9C,iBAAiB;AAAA,EACnB,IAAI;AACJ,QAAM,cAAc,cAAcA,UAAS;AAC3C,QAAM,YAAY,kBAAkB,iBAAiB,CAAC,GAAI,cAAc,qBAAqB,WAAW,IAAI,CAAC,GAAI,GAAG,qBAAqB,QAAQ,CAAC,IAAI,CAAC;AACvJ,YAAU,QAAQ,cAAY;AAC5B,sBAAkB,SAAS,iBAAiB,UAAU,QAAQ;AAAA,MAC5D,SAAS;AAAA,IACX,CAAC;AACD,sBAAkB,SAAS,iBAAiB,UAAU,MAAM;AAAA,EAC9D,CAAC;AACD,QAAM,YAAY,eAAe,cAAc,YAAY,aAAa,MAAM,IAAI;AAClF,MAAI,iBAAiB;AACrB,MAAI,iBAAiB;AACrB,MAAI,eAAe;AACjB,qBAAiB,IAAI,eAAe,UAAQ;AAC1C,UAAI,CAAC,UAAU,IAAI;AACnB,UAAI,cAAc,WAAW,WAAW,eAAe,gBAAgB;AAGrE,uBAAe,UAAU,QAAQ;AACjC,6BAAqB,cAAc;AACnC,yBAAiB,sBAAsB,MAAM;AAC3C,cAAI;AACJ,WAAC,kBAAkB,mBAAmB,QAAQ,gBAAgB,QAAQ,QAAQ;AAAA,QAChF,CAAC;AAAA,MACH;AACA,aAAO;AAAA,IACT,CAAC;AACD,QAAI,eAAe,CAAC,gBAAgB;AAClC,qBAAe,QAAQ,WAAW;AAAA,IACpC;AACA,mBAAe,QAAQ,QAAQ;AAAA,EACjC;AACA,MAAI;AACJ,MAAI,cAAc,iBAAiBnB,uBAAsBmB,UAAS,IAAI;AACtE,MAAI,gBAAgB;AAClB,cAAU;AAAA,EACZ;AACA,WAAS,YAAY;AACnB,UAAM,cAAcnB,uBAAsBmB,UAAS;AACnD,QAAI,eAAe,CAAC,cAAc,aAAa,WAAW,GAAG;AAC3D,aAAO;AAAA,IACT;AACA,kBAAc;AACd,cAAU,sBAAsB,SAAS;AAAA,EAC3C;AACA,SAAO;AACP,SAAO,MAAM;AACX,QAAI;AACJ,cAAU,QAAQ,cAAY;AAC5B,wBAAkB,SAAS,oBAAoB,UAAU,MAAM;AAC/D,wBAAkB,SAAS,oBAAoB,UAAU,MAAM;AAAA,IACjE,CAAC;AACD,iBAAa,QAAQ,UAAU;AAC/B,KAAC,mBAAmB,mBAAmB,QAAQ,iBAAiB,WAAW;AAC3E,qBAAiB;AACjB,QAAI,gBAAgB;AAClB,2BAAqB,OAAO;AAAA,IAC9B;AAAA,EACF;AACF;AAmBA,IAAMC,UAASA;AAuBf,IAAMC,QAAOA;AAwCb,IAAMC,mBAAkB,CAACC,YAAW,UAAU,YAAY;AAIxD,QAAM,QAAQ,oBAAI,IAAI;AACtB,QAAM,gBAAgB;AAAA,IACpB;AAAA,IACA,GAAG;AAAA,EACL;AACA,QAAM,oBAAoB;AAAA,IACxB,GAAG,cAAc;AAAA,IACjB,IAAI;AAAA,EACN;AACA,SAAO,gBAAkBA,YAAW,UAAU;AAAA,IAC5C,GAAG;AAAA,IACH,UAAU;AAAA,EACZ,CAAC;AACH;;;AClvBA,YAAuB;AACvB,mBAAgC;AAChC,eAA0B;AAE1B,IAAI,WAAW,OAAO,aAAa;AAEnC,IAAI,OAAO,SAASC,QAAO;AAAC;AAC5B,IAAI,QAAQ,WAAW,+BAAkB;AAIzC,SAAS,UAAU,GAAG,GAAG;AACvB,MAAI,MAAM,GAAG;AACX,WAAO;AAAA,EACT;AACA,MAAI,OAAO,MAAM,OAAO,GAAG;AACzB,WAAO;AAAA,EACT;AACA,MAAI,OAAO,MAAM,cAAc,EAAE,SAAS,MAAM,EAAE,SAAS,GAAG;AAC5D,WAAO;AAAA,EACT;AACA,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,KAAK,KAAK,OAAO,MAAM,UAAU;AACnC,QAAI,MAAM,QAAQ,CAAC,GAAG;AACpB,eAAS,EAAE;AACX,UAAI,WAAW,EAAE,OAAQ,QAAO;AAChC,WAAK,IAAI,QAAQ,QAAQ,KAAI;AAC3B,YAAI,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG;AAC1B,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AACA,WAAO,OAAO,KAAK,CAAC;AACpB,aAAS,KAAK;AACd,QAAI,WAAW,OAAO,KAAK,CAAC,EAAE,QAAQ;AACpC,aAAO;AAAA,IACT;AACA,SAAK,IAAI,QAAQ,QAAQ,KAAI;AAC3B,UAAI,CAAC,CAAC,EAAE,eAAe,KAAK,GAAG,KAAK,CAAC,CAAC,GAAG;AACvC,eAAO;AAAA,MACT;AAAA,IACF;AACA,SAAK,IAAI,QAAQ,QAAQ,KAAI;AAC3B,YAAM,MAAM,KAAK,CAAC;AAClB,UAAI,QAAQ,YAAY,EAAE,UAAU;AAClC;AAAA,MACF;AACA,UAAI,CAAC,UAAU,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG;AAC9B,eAAO;AAAA,MACT;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACA,SAAO,MAAM,KAAK,MAAM;AAC1B;AAEA,SAAS,OAAO,SAAS;AACvB,MAAI,OAAO,WAAW,aAAa;AACjC,WAAO;AAAA,EACT;AACA,QAAM,MAAM,QAAQ,cAAc,eAAe;AACjD,SAAO,IAAI,oBAAoB;AACjC;AAEA,SAAS,WAAW,SAAS,OAAO;AAClC,QAAM,MAAM,OAAO,OAAO;AAC1B,SAAO,KAAK,MAAM,QAAQ,GAAG,IAAI;AACnC;AAEA,SAAS,aAAa,OAAO;AAC3B,QAAM,MAAY,aAAO,KAAK;AAC9B,QAAM,MAAM;AACV,QAAI,UAAU;AAAA,EAChB,CAAC;AACD,SAAO;AACT;AAMA,SAAS,YAAY,SAAS;AAC5B,MAAI,YAAY,QAAQ;AACtB,cAAU,CAAC;AAAA,EACb;AACA,QAAM;AAAA,IACJ,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,aAAa,CAAC;AAAA,IACd,UAAAC;AAAA,IACA,UAAU;AAAA,MACR,WAAW;AAAA,MACX,UAAU;AAAA,IACZ,IAAI,CAAC;AAAA,IACL,YAAY;AAAA,IACZ;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,CAAC,MAAM,OAAO,IAAU,eAAS;AAAA,IACrC,GAAG;AAAA,IACH,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA,gBAAgB,CAAC;AAAA,IACjB,cAAc;AAAA,EAChB,CAAC;AACD,QAAM,CAAC,kBAAkB,mBAAmB,IAAU,eAAS,UAAU;AACzE,MAAI,CAAC,UAAU,kBAAkB,UAAU,GAAG;AAC5C,wBAAoB,UAAU;AAAA,EAChC;AACA,QAAM,CAAC,YAAY,aAAa,IAAU,eAAS,IAAI;AACvD,QAAM,CAAC,WAAW,YAAY,IAAU,eAAS,IAAI;AACrD,QAAM,eAAqB,kBAAY,UAAQ;AAC7C,QAAI,SAAS,aAAa,SAAS;AACjC,mBAAa,UAAU;AACvB,oBAAc,IAAI;AAAA,IACpB;AAAA,EACF,GAAG,CAAC,CAAC;AACL,QAAM,cAAoB,kBAAY,UAAQ;AAC5C,QAAI,SAAS,YAAY,SAAS;AAChC,kBAAY,UAAU;AACtB,mBAAa,IAAI;AAAA,IACnB;AAAA,EACF,GAAG,CAAC,CAAC;AACL,QAAM,cAAc,qBAAqB;AACzC,QAAM,aAAa,oBAAoB;AACvC,QAAM,eAAqB,aAAO,IAAI;AACtC,QAAM,cAAoB,aAAO,IAAI;AACrC,QAAM,UAAgB,aAAO,IAAI;AACjC,QAAM,0BAA0B,wBAAwB;AACxD,QAAM,0BAA0B,aAAa,oBAAoB;AACjE,QAAM,cAAc,aAAaA,SAAQ;AACzC,QAAM,UAAU,aAAa,IAAI;AACjC,QAAM,SAAe,kBAAY,MAAM;AACrC,QAAI,CAAC,aAAa,WAAW,CAAC,YAAY,SAAS;AACjD;AAAA,IACF;AACA,UAAM,SAAS;AAAA,MACb;AAAA,MACA;AAAA,MACA,YAAY;AAAA,IACd;AACA,QAAI,YAAY,SAAS;AACvB,aAAO,WAAW,YAAY;AAAA,IAChC;AACA,IAAAC,iBAAgB,aAAa,SAAS,YAAY,SAAS,MAAM,EAAE,KAAK,CAAAC,UAAQ;AAC9E,YAAM,WAAW;AAAA,QACf,GAAGA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKH,cAAc,QAAQ,YAAY;AAAA,MACpC;AACA,UAAI,aAAa,WAAW,CAAC,UAAU,QAAQ,SAAS,QAAQ,GAAG;AACjE,gBAAQ,UAAU;AAClB,QAAS,mBAAU,MAAM;AACvB,kBAAQ,QAAQ;AAAA,QAClB,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC,kBAAkB,WAAW,UAAU,aAAa,OAAO,CAAC;AAChE,QAAM,MAAM;AACV,QAAI,SAAS,SAAS,QAAQ,QAAQ,cAAc;AAClD,cAAQ,QAAQ,eAAe;AAC/B,cAAQ,CAAAA,WAAS;AAAA,QACf,GAAGA;AAAA,QACH,cAAc;AAAA,MAChB,EAAE;AAAA,IACJ;AAAA,EACF,GAAG,CAAC,IAAI,CAAC;AACT,QAAM,eAAqB,aAAO,KAAK;AACvC,QAAM,MAAM;AACV,iBAAa,UAAU;AACvB,WAAO,MAAM;AACX,mBAAa,UAAU;AAAA,IACzB;AAAA,EACF,GAAG,CAAC,CAAC;AACL,QAAM,MAAM;AACV,QAAI,YAAa,cAAa,UAAU;AACxC,QAAI,WAAY,aAAY,UAAU;AACtC,QAAI,eAAe,YAAY;AAC7B,UAAI,wBAAwB,SAAS;AACnC,eAAO,wBAAwB,QAAQ,aAAa,YAAY,MAAM;AAAA,MACxE;AACA,aAAO;AAAA,IACT;AAAA,EACF,GAAG,CAAC,aAAa,YAAY,QAAQ,yBAAyB,uBAAuB,CAAC;AACtF,QAAM,OAAa,cAAQ,OAAO;AAAA,IAChC,WAAW;AAAA,IACX,UAAU;AAAA,IACV;AAAA,IACA;AAAA,EACF,IAAI,CAAC,cAAc,WAAW,CAAC;AAC/B,QAAM,WAAiB,cAAQ,OAAO;AAAA,IACpC,WAAW;AAAA,IACX,UAAU;AAAA,EACZ,IAAI,CAAC,aAAa,UAAU,CAAC;AAC7B,QAAM,iBAAuB,cAAQ,MAAM;AACzC,UAAM,gBAAgB;AAAA,MACpB,UAAU;AAAA,MACV,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AACA,QAAI,CAAC,SAAS,UAAU;AACtB,aAAO;AAAA,IACT;AACA,UAAM,IAAI,WAAW,SAAS,UAAU,KAAK,CAAC;AAC9C,UAAM,IAAI,WAAW,SAAS,UAAU,KAAK,CAAC;AAC9C,QAAI,WAAW;AACb,aAAO;AAAA,QACL,GAAG;AAAA,QACH,WAAW,eAAe,IAAI,SAAS,IAAI;AAAA,QAC3C,GAAI,OAAO,SAAS,QAAQ,KAAK,OAAO;AAAA,UACtC,YAAY;AAAA,QACd;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,MACL,UAAU;AAAA,MACV,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AAAA,EACF,GAAG,CAAC,UAAU,WAAW,SAAS,UAAU,KAAK,GAAG,KAAK,CAAC,CAAC;AAC3D,SAAa,cAAQ,OAAO;AAAA,IAC1B,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,CAAC,MAAM,QAAQ,MAAM,UAAU,cAAc,CAAC;AACpD;AA+CA,IAAMC,UAAS,CAAC,SAAS,UAAU;AAAA,EACjC,GAAGA,QAAS,OAAO;AAAA,EACnB,SAAS,CAAC,SAAS,IAAI;AACzB;AA0BA,IAAMC,QAAO,CAAC,SAAS,UAAU;AAAA,EAC/B,GAAGA,MAAO,OAAO;AAAA,EACjB,SAAS,CAAC,SAAS,IAAI;AACzB;",
  "names": ["window", "fn", "merged", "clippingParents", "reference", "popperOffsets", "offset", "defaultModifiers", "createPopper", "reference", "popper", "options", "index", "fn", "state", "effect", "noopFn", "window", "popper", "name", "effect", "style", "offset", "hash", "placements", "placement", "placements", "placement", "_loop", "_i", "checks", "min", "max", "popperOffsets", "offset", "min", "max", "toPaddingObject", "popperOffsets", "min", "max", "offset", "effect", "createPopper", "defaultModifiers", "createPopper", "placements", "min", "max", "round", "getOppositePlacement", "rectToClientRect", "reference", "platform", "fn", "detectOverflow", "rectToClientRect", "flip", "platform", "getOppositePlacement", "placements", "detectOverflow", "sides", "side", "placement", "overflow", "platform", "offset", "getNodeName", "getWindow", "getDocumentElement", "isElement", "isHTMLElement", "isShadowRoot", "getComputedStyle", "isTableElement", "getContainingBlock", "getParentNode", "getNodeScroll", "getComputedStyle", "isHTMLElement", "round", "isElement", "getWindow", "getBoundingClientRect", "left", "top", "rectToClientRect", "getWindowScrollBarX", "getNodeScroll", "getDocumentElement", "getNodeName", "getDocumentRect", "max", "getViewportRect", "getInnerBoundingClientRect", "getParentNode", "getClippingRect", "min", "getTrueOffsetParent", "getOffsetParent", "isTableElement", "getContainingBlock", "reference", "offset", "flip", "computePosition", "reference", "noop", "platform", "computePosition", "data", "offset", "flip"]
}
