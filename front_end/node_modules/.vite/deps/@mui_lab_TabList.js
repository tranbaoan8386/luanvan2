import {
  Tabs_default
} from "./chunk-TZHSLPBM.js";
import "./chunk-FPEG34JC.js";
import "./chunk-BN3W7WPW.js";
import "./chunk-MT6BZY5V.js";
import "./chunk-WQEYOPFK.js";
import "./chunk-J6POAYNW.js";
import "./chunk-UVQP7L5B.js";
import "./chunk-W6L2VRDA.js";
import {
  getPanelId,
  getTabId,
  useTabContext
} from "./chunk-ZNE5YZIS.js";
import "./chunk-6GK6VMIO.js";
import "./chunk-72ECKWTQ.js";
import "./chunk-XA4PVXAX.js";
import "./chunk-ZSNQZAJA.js";
import "./chunk-5VPH3NZK.js";
import "./chunk-DW3ODQBU.js";
import "./chunk-WRG4H7OE.js";
import "./chunk-3C4FQNOO.js";
import "./chunk-XETNPEHD.js";
import "./chunk-5VOHC37R.js";
import "./chunk-KXCIVDTL.js";
import "./chunk-ONH2IULB.js";
import "./chunk-Q4KO7HMT.js";
import "./chunk-E5TZGW2E.js";
import "./chunk-B4H3HSD4.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  init_extends,
  init_objectWithoutPropertiesLoose
} from "./chunk-EL2X3FTF.js";
import "./chunk-RWQLVSJB.js";
import "./chunk-KR3C65D2.js";
import {
  require_prop_types
} from "./chunk-VIDJ2VU5.js";
import {
  require_jsx_runtime
} from "./chunk-CRNJR6QK.js";
import {
  require_react
} from "./chunk-ZMLY2J2T.js";
import {
  __toESM
} from "./chunk-4B2QHNJT.js";

// node_modules/@mui/lab/TabList/TabList.js
init_extends();
init_objectWithoutPropertiesLoose();
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var _excluded = ["children"];
var TabList = React.forwardRef(function TabList2(props, ref) {
  const {
    children: childrenProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const context = useTabContext();
  if (context === null) {
    throw new TypeError("No TabContext provided");
  }
  const children = React.Children.map(childrenProp, (child) => {
    if (!React.isValidElement(child)) {
      return null;
    }
    return React.cloneElement(child, {
      // SOMEDAY: `Tabs` will set those themselves
      "aria-controls": getPanelId(context, child.props.value),
      id: getTabId(context, child.props.value)
    });
  });
  return (0, import_jsx_runtime.jsx)(Tabs_default, _extends({}, other, {
    ref,
    value: context.value,
    children
  }));
});
true ? TabList.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // |     To update them edit the d.ts file and run "yarn proptypes"     |
  // ----------------------------------------------------------------------
  /**
   * A list of `<Tab />` elements.
   */
  children: import_prop_types.default.node
} : void 0;
var TabList_default = TabList;
export {
  TabList_default as default
};
//# sourceMappingURL=@mui_lab_TabList.js.map
